{"version":3,"sources":["pages/NotFound/notfound.module.css","components/User/UserLogo/userLogo.module.css","components/Print/PrintPage/printPage.module.css","pages/Auth/auth.module.css","layout/Header/header.module.css","layout/BaseView/baseView.module.css","components/Loading/loading.module.css","components/Report/ReportList/reportList.module.css","components/Logo/Logo.module.css","api/client.ts","pages/NotFound/NotFound.tsx","utils/useLocalStorage.ts","states/user.state.ts","pages/Auth/Auth.tsx","layout/Footer/Footer.tsx","components/User/UserLogo/UserLogo.tsx","layout/Header/Header.tsx","layout/SideBar/ExpansionPanel/ExpansionPanel.tsx","components/Logo/Logo.tsx","layout/SideBar/SideBar.tsx","utils/useWindowSize.ts","layout/BaseView/BaseView.tsx","components/Loading/Loading.tsx","components/route/PublicRoute.tsx","talons/common/useData.ts","talons/Revenue/useRevenue.ts","components/CompareChart/TwoLineCompare/TwoLinesCompare.tsx","talons/useCompareOverview.ts","utils/mergeClasses.ts","pages/Overview/Overview.tsx","states/app.state.ts","talons/Report/useReport.ts","components/Report/ReportList/ReportList.tsx","talons/Report/useReportList.ts","components/route/PrivateRoute.tsx","utils/helper.ts","components/Revenue/RevenueList/RevenueList.tsx","talons/Revenue/useRevenueList.ts","components/Revenue/RevenueForm/RevenueForm.tsx","talons/Revenue/useRevenueForm.ts","talons/Expense/useExpense.ts","components/Expense/ExpenseList/ExpenseList.tsx","talons/Expense/useExpenseList.ts","components/Expense/ExpenseForm/ExpenseForm.tsx","talons/Expense/useExpenseForm.ts","components/Print/PrintPage/PrintPage.tsx","components/Report/ReportStaffInfo/ReportStaffInfo.tsx","components/Report/ReportSummary/ReportSummary.tsx","components/Report/ReportDetail/ReportDetail.tsx","components/Report/ReportGenerator/ReportGenerator.tsx","talons/Report/useGenerateReport.ts","components/CompareChart/SmoothedLineChart/SmoothedLineChart.tsx","components/Revenue/RevenueReport/RevenueReport.tsx","components/Revenue/RevenueStatistic/RevenueStatistic.tsx","talons/Revenue/useRevenueStatistic.ts","components/CompareChart/PieChart/PieChart.tsx","components/Expense/ExpenseStatistic/ExpenseStatistic.tsx","talons/Expense/useExpenseStatistic.ts","components/DataView/DataView.tsx","components/Revenue/RevenueView/RevenueView.tsx","talons/Revenue/useRevenueView.ts","components/Expense/ExpenseView/ExpenseView.tsx","talons/Expense/useExpenseView.ts","talons/Budget/useBudget.ts","components/Budget/BudgetList/BudgetList.tsx","talons/Budget/useBudgetList.ts","components/Budget/BudgetForm/BudgetForm.tsx","talons/Budget/useBudgetForm.ts","components/Budget/BudgetView/BudgetView.tsx","talons/Budget/useBudgetView.ts","talons/User/useUser.ts","components/User/UserList/UserList.tsx","talons/User/useUserList.ts","components/User/UserForm/UserForm.tsx","talons/User/useUserForm.ts","components/User/UserView/UserView.tsx","talons/User/useUserView.ts","components/Cards/OverviewCard/OverviewCard.tsx","components/FinancialForecasting/FinancialChart/FinancialChart.tsx","components/FinancialForecasting/ForecastChart/ForecastChart.tsx","components/FinancialForecasting/FinancialForecasting.tsx","talons/FinancialForecasting/useFinancialForecasting.ts","routes/PrivateRouteController.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/Overview/overview.module.css","components/Revenue/RevenueList/revenueList.module.css","components/Revenue/RevenueForm/revenueForm.module.css","components/Expense/ExpenseList/expenseList.module.css","components/Expense/ExpenseForm/expenseForm.module.css","components/Report/ReportSummary/reportSummary.module.css","components/Report/ReportDetail/reportDetail.module.css","components/Revenue/RevenueStatistic/revenueStatistic.module.css","components/Expense/ExpenseStatistic/expenseStatistic.module.css","components/DataView/dataView.module.css","components/Budget/BudgetList/budgetList.module.css","components/Budget/BudgetForm/budgetForm.module.css","components/User/UserList/userList.module.css","components/User/UserForm/userForm.module.css","components/Cards/OverviewCard/overviewCard.module.css","components/FinancialForecasting/financialForecasting.module.css","static/images/logo.jpg","layout/SideBar/sidebar.module.css","layout/SideBar/ExpansionPanel/expansionPanel.module.css","components/Report/ReportGenerator/reportGenerator.module.css"],"names":["module","exports","client","axios","create","baseURL","process","REACT_APP_API_URL","headers","Accept","interceptors","request","use","config","token","localStorage","getItem","substring","length","error","Promise","reject","NotFound","className","classes","root","main","headingContainer","heading","description","to","type","useLocalStorage","key","initialValue","useState","item","window","JSON","parse","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","userState","atom","default","layout","labelCol","span","wrapperCol","tailLayout","offset","Auth","setUser","useSetRecoilState","setToken","history","useHistory","useEffect","getUser","push","handleLogin","values","a","post","then","res","data","response","access_token","message","get","name","onFinish","form","title","Item","label","rules","required","Password","htmlType","Footer","props","UserLogo","showDropdown","setShowDropdown","icon","onClick","UserOutlined","cn","dropdown","active","btn","Header","right","ExpansionPanel","children","isActive","collapsed","setCollapsed","itemActive","iconArrow","panel","style","maxHeight","Logo","src","require","alt","width","height","img","SideBar","hide","setHide","user","useRecoilValue","navigation","DashboardOutlined","level","role","TransactionOutlined","path","ContainerOutlined","DatabaseOutlined","FileAddOutlined","RadarChartOutlined","LineChartOutlined","renderLevels","map","idx","includes","itemRoot","itemName","undefined","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Fragment","toggleBtn","MenuOutlined","mask","LogoRoot","LogoImg","BaseView","WrappedComponent","content","Loading","container","loader","svg","id","in","stdDeviation","PublicRoute","Component","component","rest","render","useData","endpoint","additionalEndpoint","getList","params","getOne","addOne","obj","fetchOne","fetchList","updateOne","put","deleteOne","delete","BACKEND_URL","useRevenue","fetchAllRevenues","fetchRevenues","pageNumber","pageSize","day","sortBy","isAsc","fetchRevenuesInRange","dateFrom","dateTo","fetchRevenue","revenueID","fetch2NearestMonths","fetch","json","addRevenue","staffID","updateRevenue","deleteRevenue","TwoLinesCompare","option","setOption","loading","setLoading","parse2NearestMonthData","status","today","Date","currMonth","getMonth","currMonthData","Array","prevMonthData","forEach","createdAt","total","date","dayOfWeek","getDay","useCompareOverview","parseData","tooltip","trigger","legend","grid","left","containLabel","toolbox","feature","saveAsImage","xAxis","yAxis","series","barGap","emphasis","focus","showLoading","mergeClasses","args","Object","assign","Overview","propsClasses","defaultClasses","StockOutlined","FundOutlined","DotChartOutlined","HeatMapOutlined","compareRevenue","pageSizeState","useReport","fetchReports","fetchReport","getInformationForReport","responseData","generateReport","ReportList","setData","totalNumber","setTotalNumber","handleFetchReports","handleSearch","useReportList","columns","dataIndex","record","toLocaleDateString","text","size","header","search","dataSource","pagination","pageSizeOptions","scroll","x","PrivateRoute","pathname","formatNumber","toLocaleString","RevenueList","setPageNumber","handleFetchRevenues","moment","toDate","handleSort","onDelete","Modal","confirm","okText","cancelText","onOk","success","handleChangeTable","filters","sorter","extra","field","order","current","useRevenueList","b","NaN","slice","accountNumber","view","edit","fixed","onChange","RevenueForm","propsView","Form","useForm","useParams","revenue","setRevenue","handleFetchRevenue","setFieldsValue","bankAccountNumber","bankAccount","handleAddRevenue","handleUpdateRevenue","onSubmit","allValues","priceUnit","quantity","handleCancel","useRevenueForm","buttonText","onValuesChange","initialValues","disabled","formatter","replace","parser","min","btnGroup","Math","random","BASE_BACKEND_URL","useExpense","ADDITIONAL_ENDPOINT","fetchExpenses","fetchExpense","expenseID","addExpense","updateExpense","deleteExpense","fetchExpenseInRange","ExpenseList","initialData","setInitialData","handleFetchExpenses","populateType","e","hasOwnProperty","sort","populatedData","searchData","filter","newData","useExpenseList","color","ExpenseForm","setType","expense","setExpense","handleFetchExpense","staff","handleAddExpense","handleUpdateExpense","handleChangeType","useExpenseForm","defaultValue","Option","PrintPage","this","printWrapper","footer","ReportStaffInfo","phoneNumber","department","email","ReportSummary","budget","profit","expensePercent","round","ReportDetail","row","bordered","reportFrom","reportTo","summary","RangePicker","DatePicker","ReportGenerator","customData","setCustomData","handleGetReport","parseFromReportToCustomReport","result","reportDate","expenses","revenues","tempRow","entries","totalExpense","totalRevenue","handleGetInfoForReport","range","dataDTO","temp","handleGenerateReport","useGenerateReport","printComponentRef","useRef","y","print","pdfBtn","ref","SmoothedLineChart","padding","defaultOption","getDate","getFullYear","axisPointer","animation","splitLine","show","boundaryGap","dataZoom","filterMode","xAxisIndex","yAxisIndex","merge","RevenueReport","smallest","largest","statisticList","statisticListItem","amount","RevenueStatistic","setLargest","setSmallest","setTotal","handleGenerateStatistic","dateRange","allData","mappingData","tempLargest","tempSmallest","Number","MAX_SAFE_INTEGER","sum","newOption","localeCompare","smooth","useRevenueStatistic","PieChart","orient","ExpenseStatistic","dataByDate","setDataByDate","optionByDate","setOptionByDate","optionByType","setOptionByType","generateDateStatistic","generateTypeStatistic","radius","itemStyle","shadowBlur","shadowOffsetX","shadowColor","useExpenseStatistic","DataView","onGoBack","onGoToEdit","list","viewValue","itemTitle","itemValue","RevenueView","goBack","useRevenueView","ExpenseView","useExpenseView","useBudget","fetchBudgets","fetchBudget","budgetID","addBudget","managerID","updateBudget","deleteBudget","fetchBudgetInRange","BudgetList","handleFetchBudgets","useBudgetList","number","fontWeight","BudgetForm","setBudget","handleFetchBudget","month","year","handleAddBudget","body","populateMonthAndYearToBody","handleUpdateBudget","useBudgetForm","picker","BudgetView","useBudgetView","useUser","fetchUsers","fetchUser","userID","addUser","updateUser","deleteUser","UserList","handleFetchUsers","filteredData","keyword","toLowerCase","toLocaleLowerCase","useUserList","UserForm","handleFetchUser","handleAddUser","password","passwordConfirm","handleUpdateUser","useUserForm","UserView","useUserView","OverviewCard","percent","isInc","toString","classNames","inc","ArrowUpOutlined","ArrowDownOutlined","FinancialChart","defaultOptions","crossStyle","dataView","readOnly","magicType","restore","ForecastChart","axisLabel","inside","textStyle","axisTick","axisLine","z","FinancialForecasting","setExpenses","setRevenues","profits","setProfits","avgProfit","setAvgProfit","forecastProfits","setForecastProfits","getData","calcForecast","getTotal","reduce","prev","curr","revenueArr","expenseArr","profitArr","all","monthNumber","currentYear","endOf","revenuesData","expensesData","calc","max","currProfit","futureProfits","useFinancialForecasting","totalProfit","financialOption","forecastOption","showBackground","statistic","forecast","PrivateRoutesController","exact","useRecoilState","PrivateRouteController","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4753087.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"notfound_root__1g4ot\",\"main\":\"notfound_main__33dfY\",\"headingContainer\":\"notfound_headingContainer__28ykm\",\"heading\":\"notfound_heading__1G0Z8\",\"description\":\"notfound_description__1Tlg4\",\"link\":\"notfound_link__DXQzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"userLogo_root__3OU-I\",\"icon\":\"userLogo_icon__2--Jt\",\"dropdown\":\"userLogo_dropdown__12J4t\",\"active\":\"userLogo_active__PfME8\",\"btn\":\"userLogo_btn__3njYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"printPage_header__3g8i-\",\"printWrapper\":\"printPage_printWrapper__VJkjr\",\"logo\":\"printPage_logo__N93Vj\",\"footer\":\"printPage_footer__1Tp0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"auth_root__3h_i-\",\"form\":\"auth_form__1gy8B\",\"title\":\"auth_title__1iBP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"header_root__3QUlT\",\"title\":\"header_title__3oNrY\",\"right\":\"header_right__1BpIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"baseView_root__3jlcB\",\"main\":\"baseView_main__171rY\",\"content\":\"baseView_content__1VTNN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"loading_svg__2TQRr\",\"container\":\"loading_container__1WaYx\",\"loader\":\"loading_loader__1ViEP\",\"animate\":\"loading_animate__1AXDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"reportList_root__2P1Ry\",\"header\":\"reportList_header__2ZylN\",\"btn\":\"reportList_btn__3bTcA\",\"delete\":\"reportList_delete__3EYnd\",\"view\":\"reportList_view__1gn7g\",\"btnAdd\":\"reportList_btnAdd__2FLkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Logo_root__32W_W\",\"img\":\"Logo_img__eyDaK\"};","import axios from \"axios\";\n\nconst headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst client = axios.create({\n    baseURL:\n        process.env.REACT_APP_API_URL ||\n        \"https://financial-app-ptit.herokuapp.com/api/v1\",\n    headers,\n});\n\nclient.interceptors.request.use(\n    (config) => {\n        let token = localStorage.getItem(\"token\");\n\n        if (token) {\n            if (token[0] === '\"') {\n                token = token?.substring(1, token.length - 1);\n            }\n            config.headers[\"Authorization\"] = `Bearer ${token}`;\n        }\n\n        return config;\n    },\n\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport default client;\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./notfound.module.css\";\n\nconst NotFound = () => {\n    return (\n        <div className={classes.root}>\n            <div className={classes.main}>\n                <div className={classes.headingContainer}>\n                    <h1 className={classes.heading}>\n                        4<span>0</span>4\n                    </h1>\n                </div>\n                <p className={classes.description}>\n                    Không tìm thấy trang yêu cầu.\n                </p>\n                <Link to=\"/\">\n                    <Button type=\"primary\">Quay về trang chủ</Button>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import { useEffect, useState } from \"react\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * Hàm giúp quản lí data từ local storage\n * @kind function.\n *\n *\n * @return {{\n * storedValue: any,\n * setStoredValue: func\n * }}\n *\n * */\n\nconst useLocalStorage = (key: string, initialValue: any) => {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Lấy ra giá trị từ local storage theo key truyền vào\n            const item = window.localStorage.getItem(key);\n\n            // COnvert dữ liệu\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // Nếu không tồn tại object với thằng key truyền vào thì trả về giá trị ban đầu truyền vào\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Hàm  set giá trị mới cho object trong localstorage\n    const setValue = (value: any) => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n};\n\nexport { useLocalStorage };\n","import { atom } from \"recoil\";\nimport { iUser } from \"../types/user.types\";\n\nexport const userState = atom<iUser | null>({\n    key: \"user\",\n    default: null,\n});\n","import React, { useEffect, useState } from \"react\";\n\n// utils\nimport client from \"../../api/client\";\n\n// talons\nimport { useSetRecoilState } from \"recoil\";\nimport { useHistory } from \"react-router\";\nimport { useLocalStorage } from \"../../utils/useLocalStorage\";\n\n// components\nimport { Form, Input, Button, message } from \"antd\";\n\n// styles\nimport classes from \"./auth.module.css\";\n\n// states\nimport { userState } from \"../../states/user.state\";\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\ninterface iLoginForm {\n    username: string;\n    password: string;\n}\n\nconst ENDPOINT = \"/users\";\n\nconst Auth = () => {\n    const setUser = useSetRecoilState(userState);\n    const [token, setToken] = useLocalStorage(\"token\", false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (token) {\n            getUser();\n            history.push(\"/\");\n        }\n    }, [token]);\n\n    const onFinish = (values: iLoginForm) => {\n        handleLogin(values);\n    };\n\n    const handleLogin = async (values: iLoginForm) => {\n        try {\n            const response = await client\n                .post(`${ENDPOINT}/login`, values)\n                .then((res) => res.data);\n            const token = response?.data?.access_token;\n            setToken(token);\n        } catch (error) {\n            message.error(\"Wrong username or password\");\n        }\n    };\n\n    const getUser = async () => {\n        const response = await client.get(\"/users/getMe\");\n        setUser(response.data.data);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n                className={classes.form}\n            >\n                <h2 className={classes.title}>Đăng nhập</h2>\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập username\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập password!\",\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React from \"react\";\n\ninterface Props {}\n\nconst Footer = (props: Props) => {\n    return <div></div>;\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport cn from \"classnames\";\n\n// talons\nimport { useHistory } from \"react-router\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { useLocalStorage } from \"../../../utils/useLocalStorage\";\n\n// icons\nimport { UserOutlined } from \"@ant-design/icons\";\n\n// styles\nimport classes from \"./userLogo.module.css\";\n\n// states\nimport { authState } from \"../../../states/app.state\";\nimport { userState } from \"../../../states/user.state\";\n\nconst UserLogo = () => {\n    const [token, setToken] = useLocalStorage(\"token\", false);\n    const setUser = useSetRecoilState(userState);\n    const [showDropdown, setShowDropdown] = useState(false);\n    const history = useHistory();\n\n    const handleLogout = () => {\n        setUser(null);\n        setToken(null);\n        history.push(\"/login\");\n    };\n\n    return (\n        <div className={classes.root}>\n            <button\n                className={classes.icon}\n                onClick={() => setShowDropdown((value) => !value)}\n            >\n                <UserOutlined />\n            </button>\n\n            <div\n                className={cn(classes.dropdown, {\n                    [classes.active]: showDropdown,\n                })}\n            >\n                <button className={classes.btn} onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default UserLogo;\n","import React from \"react\";\nimport UserLogo from \"../../components/User/UserLogo\";\n\nimport classes from \"./header.module.css\";\n\ninterface Props {}\n\nconst Header = (props: Props) => {\n    return (\n        <header className={classes.root}>\n            <p className={classes.title}>PTIT Financial</p>\n            <div className={classes.right}>\n                <UserLogo />\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport cn from \"classnames\";\n\n// icons\nimport { ChevronDown, ChevronRight } from \"react-feather\";\n// styles\nimport classes from \"./expansionPanel.module.css\";\nimport { SideBarItemType } from \"../SideBar\";\n\n// types\n\ninterface Props {\n    key: any;\n    children: any;\n    classes?: object;\n    isActive: boolean;\n    item: SideBarItemType;\n}\n\nconst ExpansionPanel = ({\n    item,\n    classes: propsClasses,\n    children,\n    isActive,\n}: Props) => {\n    const [collapsed, setCollapsed] = useState<boolean>(true);\n\n    const handleToggleCollapse = () => setCollapsed((value) => !value);\n\n    return (\n        <div className={classes.root}>\n            <button\n                onClick={handleToggleCollapse}\n                className={cn(classes.btn, {\n                    [classes.itemActive]: isActive,\n                })}\n            >\n                <div className={classes.item}>\n                    {item?.icon && (\n                        <div className={classes.icon}>{item.icon}</div>\n                    )}\n                    <p className={classes.name}>{item?.name}</p>\n                    {(collapsed && (\n                        <ChevronRight className={classes.iconArrow} />\n                    )) || <ChevronDown className={classes.iconArrow} />}\n                </div>\n            </button>\n\n            <div\n                className={classes.panel}\n                style={{\n                    maxHeight: collapsed ? \"0px\" : \"1000px\",\n                }}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default ExpansionPanel;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// styles\nimport classes from \"./Logo.module.css\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst Logo = ({ classes: propsClasses }: Props) => {\n    return (\n        <figure className={classes.root}>\n            <Link to=\"/\">\n                <img\n                    src={require(\"../../static/images/logo.jpg\").default}\n                    alt=\"logo\"\n                    width={150}\n                    height={50}\n                    className={classes.img}\n                />\n            </Link>\n        </figure>\n        // <div className={classes.root}>SMA</div>\n    );\n};\nexport default Logo;\n","import React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\n\n// talons\nimport { useWindowSize } from \"../../utils/useWindowSize\";\n\n// components\nimport ExpansionPanel from \"./ExpansionPanel\";\n\n// styles\nimport classes from \"./sidebar.module.css\";\n\nimport {\n    ContainerOutlined,\n    DashboardOutlined,\n    DatabaseOutlined,\n    FileAddOutlined,\n    LineChartOutlined,\n    MenuOutlined,\n    RadarChartOutlined,\n    TransactionOutlined,\n    UserOutlined,\n} from \"@ant-design/icons\";\n\nimport Logo from \"../../components/Logo\";\n\n// types\nimport { Size } from \"../../types/app.types\";\n\n// states\nimport { userState } from \"../../states/user.state\";\n\ninterface Props {\n    classes?: object;\n}\n\nexport type SideBarItemType = {\n    icon?: any;\n    name: string;\n    path?: string;\n    level: number;\n    role: string[];\n    children?: SideBarItemType[];\n};\n\nconst SideBar = ({ classes: propsClasses }: Props) => {\n    const [hide, setHide] = useState<boolean>(true);\n    const user = useRecoilValue(userState);\n\n    const navigation = [\n        {\n            name: \"Quản lí thu chi\",\n            icon: <DashboardOutlined />,\n            level: 1,\n            role: [\"staff\", \"manager\"],\n            children: [\n                {\n                    name: \"Quản lí thu\",\n                    icon: <TransactionOutlined />,\n                    path: \"revenue\",\n                    level: 2,\n                    role: [\"staff\", \"manager\"],\n                },\n                {\n                    name: \"Quản lí chi\",\n                    icon: <TransactionOutlined />,\n                    path: \"expense\",\n                    level: 2,\n                    role: [\"staff\", \"manager\"],\n                },\n            ],\n        },\n        {\n            name: \"Quản lí ngân sách\",\n            icon: <ContainerOutlined />,\n            level: 1,\n            role: [\"manager\"],\n            children: [\n                {\n                    name: \"Danh sách ngân sách\",\n                    icon: <DatabaseOutlined />,\n                    path: \"budget\",\n                    level: 2,\n                    role: [\"manager\"],\n                },\n                {\n                    name: \"Tạo ngân sách\",\n                    icon: <FileAddOutlined />,\n                    path: \"budget/add\",\n                    level: 2,\n                    role: [\"manager\"],\n                },\n            ],\n        },\n        {\n            name: \"Thống kê tài chính\",\n            icon: <RadarChartOutlined />,\n            level: 1,\n            role: [\"satff\", \"manager\"],\n            children: [\n                {\n                    name: \"Thống kê theo doanh thu\",\n                    icon: <LineChartOutlined />,\n                    path: \"statistic/revenue\",\n                    level: 2,\n                    role: [\"staff\", \"manager\"],\n                },\n                {\n                    name: \"Thống kê theo chi phí\",\n                    icon: <LineChartOutlined />,\n                    path: \"statistic/expense\",\n                    level: 2,\n                    role: [\"staff\", \"manager\"],\n                },\n            ],\n        },\n        {\n            name: \"Báo cáo\",\n            icon: <ContainerOutlined />,\n            level: 1,\n            role: [\"staff\", \"manager\"],\n            children: [\n                {\n                    name: \"Danh sách báo cáo\",\n                    icon: <DatabaseOutlined />,\n                    path: \"report\",\n                    level: 2,\n                    role: [\"staff\", \"manager\"],\n                },\n                {\n                    name: \"Tạo báo cáo\",\n                    icon: <FileAddOutlined />,\n                    path: \"report/generate\",\n                    level: 2,\n                    role: [\"staff\", \"manager\"],\n                },\n            ],\n        },\n        {\n            name: \"Quản lí người dùng\",\n            icon: <UserOutlined />,\n            path: \"users\",\n            level: 1,\n            role: [\"admin\"],\n        },\n        {\n            name: \"Dự đoán tài chính\",\n            icon: <DashboardOutlined />,\n            level: 1,\n            role: [\"manager\"],\n            path: \"financialForecasting\",\n        },\n    ];\n\n    const renderLevels = (data: SideBarItemType[]) => {\n        return data.map((item, idx) => {\n            const isActive = false;\n\n            if (user && !item.role.includes(user.role)) return null;\n\n            if (item.children) {\n                return (\n                    <ExpansionPanel\n                        item={item}\n                        key={idx}\n                        isActive={isActive}\n                        classes={{\n                            itemActive: classes.itemActive,\n                            item: classes.item,\n                        }}\n                    >\n                        {renderLevels(item.children)}\n                    </ExpansionPanel>\n                );\n            }\n            return (\n                <Link to={`/${item.path}`}>\n                    <button\n                        key={item.name}\n                        name=\"child\"\n                        className={cn(classes.btn, classes.itemRoot, {\n                            [classes.itemActive]: isActive || item.level === 1,\n                        })}\n                    >\n                        <div className={classes.item}>\n                            {item.icon}\n                            <span className={classes.itemName}>\n                                {item.name}\n                            </span>\n                        </div>\n                    </button>\n                </Link>\n            );\n        });\n    };\n\n    const size: Size = useWindowSize();\n\n    const { width } = size || {};\n\n    if (width && width <= 1024) {\n        return (\n            <React.Fragment>\n                <button\n                    className={classes.toggleBtn}\n                    onClick={() => setHide((value) => !value)}\n                >\n                    {(hide && <MenuOutlined />) || \"X\"}\n                </button>\n                {!hide && (\n                    <div\n                        className={classes.mask}\n                        onClick={() => setHide(true)}\n                    ></div>\n                )}\n                <div\n                    className={cn(classes.root, {\n                        [classes.hide]: hide,\n                    })}\n                >\n                    <Logo\n                        classes={{\n                            root: classes.LogoRoot,\n                            img: classes.LogoImg,\n                        }}\n                    />\n                    {renderLevels(navigation)}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div className={classes.root}>\n            <Logo\n                classes={{\n                    root: classes.LogoRoot,\n                    img: classes.LogoImg,\n                }}\n            />\n            {renderLevels(navigation)}\n        </div>\n    );\n};\n\nexport default SideBar;\n","import { useEffect, useState } from \"react\";\nimport { Size } from \"../types/app.types\";\n\n/**\n * Hàm trả về kích thước của cửa sổ hiện tại\n */\nfunction useWindowSize(): Size {\n    const [windowSize, setWindowSize] = useState<Size>({\n        width: undefined,\n        height: undefined,\n    });\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    return windowSize;\n}\n\nexport { useWindowSize };\n","import React from \"react\";\n\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\nimport SideBar from \"../SideBar\";\n\nimport classes from \"./baseView.module.css\";\n\nconst BaseView =\n    <P extends object>(WrappedComponent: React.ComponentType<P>) =>\n    (props: P) => {\n        return (\n            <section className={classes.root}>\n                <SideBar />\n                <main className={classes.main}>\n                    <Header />\n                    <div className={classes.content}>\n                        <WrappedComponent {...props} />\n                    </div>\n                    <Footer />\n                </main>\n            </section>\n        );\n    };\n\nexport default BaseView;\n","import React from 'react';\n\nimport classes from './loading.module.css';\n\nconst Loading = () => {\n    return (\n        <div className={classes.container}>\n            <div className={classes.loader}>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n            </div>\n\n            <svg className={classes.svg}>\n                <filter id='gooey'>\n                    <feGaussianBlur\n                        in='SourceGraphic'\n                        stdDeviation='10'\n                    ></feGaussianBlur>\n                    <feColorMatrix\n                        values='\n                    1 0 0 0 0\n                    0 1 0 0 0\n                    0 0 1 0 0\n                    0 0 0 20 -10\n                '\n                    ></feColorMatrix>\n                </filter>\n            </svg>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React from \"react\";\n\n// Libs\nimport { Route, RouteProps } from \"react-router-dom\";\n\ninterface PropTypes extends RouteProps {\n    component: React.ComponentType<any>;\n}\n\n/**\n * Public route component\n *\n * @param Component\n *  Component to be displayed\n * @param rest\n *  Props passed in\n */\nconst PublicRoute: React.FC<PropTypes> = ({\n    component: Component,\n    ...rest\n}) => {\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\n};\n\nexport default PublicRoute;\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that contains data actions logic\n *\n * @kind function.\n *\n * @return {{\n * fetchOne: func,\n * fetchList: func,\n * addOne: func,\n * updateOne: func,\n * deleteOne: func,\n * }}\n */\n\nimport client from \"../../api/client\";\n\ninterface Props {\n    endpoint: string;\n    additionalEndpoint?: string;\n}\n\nconst useData = ({ endpoint, additionalEndpoint }: Props) => {\n    const getList = async (params = {}) => {\n        const response = await client.get(endpoint, {\n            params: {\n                ...params,\n            },\n        });\n        return response.data;\n    };\n\n    const getOne = async (id: number | string) => {\n        const response = await client.get(`${endpoint}/${id}`);\n        return response.data;\n    };\n\n    const createOne = async (obj: any) => {\n        const response = await client.post(\n            `${additionalEndpoint || endpoint}`,\n            obj\n        );\n        return response.data;\n    };\n\n    const updateOne = async (id: number | string, obj: any) => {\n        const response = await client.put(\n            `${additionalEndpoint || endpoint}/${id}`,\n            obj\n        );\n        return response.data;\n    };\n\n    const deleteOne = async (id: number | string) => {\n        const response = await client.delete(`${endpoint}/${id}`);\n        return response.data;\n    };\n\n    return {\n        addOne: createOne,\n        fetchOne: getOne,\n        fetchList: getList,\n        updateOne,\n        deleteOne,\n    };\n};\n\nexport { useData };\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that contains revenue actions logic\n *\n * @kind function.\n *\n * @return {{\n * fetchRevenues: string,\n * fetchRevenue: func,\n * updateRevenue: func,\n * addRevenue: func,\n * deleteRevenue: func,\n * fetch2NearestMonths: func,\n * fetchRevenuesInRange: func,\n *}}\n * */\n\nimport client from \"../../api/client\";\nimport { useData } from \"../common/useData\";\n\nconst BACKEND_URL = `${process.env.REACT_APP_API_LINK}/revenue`;\n\nconst useRevenue = () => {\n    const { addOne, deleteOne, updateOne, fetchList, fetchOne } = useData({\n        endpoint: \"/revenue\",\n    });\n    \n    const fetchAllRevenues = async () => {\n        const response = await client.get(\n            `${BACKEND_URL}/getAll`\n        );;\n        return response.data.data;\n    }\n\n    const fetchRevenues = async (\n        pageNumber = 1,\n        pageSize = 10,\n        day: String | null,\n        sortBy = 4,\n        isAsc = true\n    ) => {\n        const params: any = {\n            pageSize,\n            pageNumber,\n            sortBy,\n            isAsc,\n        };\n        if (day !== null) params.day = day;\n        const response = await fetchList(params);\n        return response;\n    };\n\n    const fetchRevenuesInRange = async (dateFrom: String, dateTo: String) => {\n        const response = await client.get(\n            `${BACKEND_URL}/statistic?dayStart=${dateFrom}&dayEnd=${dateTo}`\n        );\n        return response.data;\n    };\n\n    const fetchRevenue = async (revenueID: number) => {\n        const response = await fetchOne(revenueID);\n        return response.data;\n    };\n\n    const fetch2NearestMonths = async () => {\n        const response = await fetch(`${BACKEND_URL}/get-2-nearest-months`);\n        const data = await response.json();\n        return data;\n    };\n\n    const addRevenue = async (data: any) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await addOne(data);\n        return response;\n    };\n\n    const updateRevenue = async (data: any, revenueID: number) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await updateOne(revenueID, data);\n        return response;\n    };\n\n    const deleteRevenue = async (revenueID: number) => {\n        const response = await deleteOne(revenueID);\n        return response;\n    };\n\n    return {\n        addRevenue,\n        fetchRevenue,\n        fetchRevenues,\n        fetchAllRevenues,\n        deleteRevenue,\n        updateRevenue,\n        fetch2NearestMonths,\n        fetchRevenuesInRange,\n    };\n};\n\nexport { useRevenue };\n","import React, { useEffect, useState } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nimport classes from \"./twoLinesCompare.module.css\";\nimport { useCompareOverview } from \"../../../talons/useCompareOverview\";\n\nconst TwoLinesCompare = () => {\n    const [option, setOption] = useState<any>(null);\n\n    const { parse2NearestMonthData, loading } = useCompareOverview();\n\n    useEffect(() => {\n        parseData();\n    }, []);\n\n    const parseData = async () => {\n        const data = await parse2NearestMonthData();\n        if (!data) return;\n        const { currMonthData, prevMonthData } = data;\n        setOption({\n            tooltip: {\n                trigger: \"axis\",\n            },\n            legend: {\n                data: [\"Tháng trước\", \"Tháng hiện tại\"],\n            },\n            grid: {\n                left: \"3%\",\n                right: \"4%\",\n                containLabel: true,\n            },\n            toolbox: {\n                feature: {\n                    saveAsImage: {},\n                },\n            },\n            xAxis: {\n                type: \"category\",\n                data: [\n                    \"Thứ 2\",\n                    \"Thứ 3\",\n                    \"Thứ 4\",\n                    \"Thứ 5\",\n                    \"Thứ 6\",\n                    \"Thứ 7\",\n                    \"Chủ nhật\",\n                ],\n            },\n            yAxis: {\n                type: \"value\",\n            },\n            series: [\n                {\n                    name: \"Tháng trước\",\n                    type: \"line\",\n                    barGap: 0,\n                    emphasis: {\n                        focus: \"series\",\n                    },\n                    data: prevMonthData,\n                },\n                {\n                    name: \"Tháng hiện tại\",\n                    type: \"line\",\n                    barGap: 0,\n                    emphasis: {\n                        focus: \"series\",\n                    },\n                    data: currMonthData,\n                },\n            ],\n        });\n    };\n\n    return (\n        <div className={classes.root}>\n            <ReactEcharts\n                style={{ height: 500, width: \"100%\" }}\n                option={option || {}}\n                showLoading={loading}\n            />\n        </div>\n    );\n};\n\nexport default TwoLinesCompare;\n","import { message } from \"antd\";\nimport { useState } from \"react\";\nimport { iRevenue } from \"../types/revenue.types\";\nimport { useRevenue } from \"./Revenue/useRevenue\";\n\nconst useCompareOverview = () => {\n    const { fetch2NearestMonths } = useRevenue();\n\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const parse2NearestMonthData = async () => {\n        setLoading(true);\n        const response = await fetch2NearestMonths();\n        setLoading(false);\n        if (response.status !== 200) {\n            message.error(\"Fetching Error\");\n        } else {\n            const data = response.data;\n            const today = new Date();\n            const currMonth = today.getMonth();\n            const currMonthData = [...Array(7)].map(() => 0);\n            const prevMonthData = [...Array(7)].map(() => 0);\n            data.forEach((item: iRevenue) => {\n                const { createdAt, total } = item;\n                const date = new Date(createdAt);\n                const dayOfWeek = date.getDay();\n                if (date.getMonth() === currMonth) {\n                    currMonthData[dayOfWeek] += total;\n                } else {\n                    prevMonthData[dayOfWeek] += total;\n                }\n            });\n\n            return {\n                currMonthData: currMonthData,\n                prevMonthData: prevMonthData,\n            };\n        }\n    };\n\n    return { loading, parse2NearestMonthData };\n};\n\nexport { useCompareOverview };\n","const mergeClasses = (...args: any[]) => Object.assign({}, ...args);\n\nexport default mergeClasses;\n","import React from \"react\";\n\n// components\nimport OverviewCard from \"../../components/Cards/OverviewCard/OverviewCard\";\nimport TwoLinesCompare from \"../../components/CompareChart/TwoLineCompare\";\n\n// utils\nimport mergeClasses from \"../../utils/mergeClasses\";\n\n// icons\nimport {\n    DotChartOutlined,\n    FundOutlined,\n    HeatMapOutlined,\n    StockOutlined,\n} from \"@ant-design/icons\";\n\n// styles\nimport defaultClasses from \"./overview.module.css\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst Overview = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const testData = [\n        {\n            name: \"Doanh thu\",\n            isInc: true,\n            icon: <StockOutlined />,\n            number: 19858890,\n            percent: 0.36,\n        },\n\n        {\n            name: \"Lợi nhuận\",\n            isInc: false,\n            icon: <FundOutlined />,\n            number: 2858890,\n            percent: 1.36,\n        },\n\n        {\n            name: \"Sản lượng\",\n            isInc: true,\n            icon: <DotChartOutlined />,\n            number: 1820,\n            percent: 50.2,\n        },\n\n        {\n            name: \"Tỷ suất lợi nhuận\",\n            isInc: true,\n            icon: <HeatMapOutlined />,\n            number: 86.3,\n            percent: 12.5,\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            {/* <section className={classes.overviewCards}>\n                {testData.map((e, idx) => {\n                    return <OverviewCard {...e} key={idx} />;\n                })}\n            </section> */}\n\n            <section className={classes.compareRevenue}>\n                <div>\n                    <h4 className={classes.title}>\n                        Thống kê doanh thu tháng trước và tháng hiện tại\n                    </h4>\n                    <TwoLinesCompare />\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default Overview;\n","import { atom } from \"recoil\";\nimport { iStudent } from \"../types/app.types\";\n\nexport const authState = atom<boolean>({\n    key: \"authState\",\n    default: false,\n});\n\nexport const studentState = atom<iStudent[]>({\n    key: \"studentState\",\n    default: [],\n});\n\nexport const pageSizeState = atom<number>({\n    key: \"pageSizeState\",\n    default: 10,\n});\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that provides report action logic\n * @kind function.\n *\n *\n * @return {{\n * fetchReport: func,\n * fetchReports: func,\n * generateReport: func,\n * getInformationForReport: func\n * }}\n *\n * */\n\nimport { useData } from \"../common/useData\";\n\nconst BACKEND_URL = `${process.env.REACT_APP_API_LINK}/report`;\n\nconst useReport = () => {\n    const { addOne, fetchList, fetchOne } = useData({\n        endpoint: \"report\",\n        additionalEndpoint: \"/report/generate\",\n    });\n\n    const fetchReports = async (pageNumber = 1, pageSize = 10) => {\n        const response = await fetchList({\n            pageSize,\n            pageNumber,\n        });\n\n        return response;\n    };\n\n    const fetchReport = async (id: number) => {\n        const response = await fetch(`${BACKEND_URL}/${id}`);\n        const data = await response.json();\n        return data;\n    };\n\n    const getInformationForReport = async (data: any) => {\n        const { dateFrom, dateTo, staffID } = data;\n        const response = await fetch(\n            `${BACKEND_URL}/generate?dateFrom=${dateFrom}&dateTo=${dateTo}&staffID=${staffID}`\n        );\n        const responseData = await response.json();\n        return responseData;\n    };\n\n    const generateReport = async (data: any) => {\n        const response = await addOne(data);\n        return response;\n    };\n\n    return {\n        fetchReport,\n        fetchReports,\n        generateReport,\n        getInformationForReport,\n    };\n};\n\nexport { useReport };\n","import { Button, DatePicker, Form, Space, Table } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useReportList } from \"../../../talons/Report/useReportList\";\nimport { iCustomReport } from \"../../../types/report.types\";\nimport { iStaff } from \"../../../types/user.types\";\n\nimport classes from \"./reportList.module.css\";\n\ninterface Props {}\n\nconst ReportList = (props: Props) => {\n    const { data, pageSize, loading, totalNumber, handleSearch } =\n        useReportList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n        },\n        {\n            title: \"Ngày tạo\",\n            dataIndex: \"reportDate\",\n            key: \"reportDate\",\n            width: 300,\n            render: (record: Date) => {\n                return <p>{new Date(record).toLocaleDateString()}</p>;\n            },\n        },\n        {\n            title: \"Mô tả\",\n            dataIndex: \"description\",\n            key: \"description\",\n            width: 300,\n        },\n\n        {\n            title: \"Người tạo\",\n            dataIndex: \"staff\",\n            key: \"staff\",\n            width: 300,\n            render: (record: iStaff) => {\n                return (\n                    <p>\n                        {record.id} - {record.name}\n                    </p>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: iCustomReport) => (\n                <Space size=\"middle\">\n                    <Link to={`/report/${record.id}`}>\n                        <Button type=\"primary\">Xem</Button>\n                    </Link>\n                </Space>\n            ),\n            width: 300,\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Link to=\"/report/generate\">\n                    <Button type=\"primary\">Tạo báo cáo</Button>\n                </Link>\n\n                <div className={classes.search}>\n                    <Form layout=\"inline\" onFinish={handleSearch}>\n                        <Form.Item label=\"Tìm kiếm theo ngày\" name=\"createdAt\">\n                            <DatePicker />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Tìm kiếm\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </header>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: pageSize,\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default ReportList;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { pageSizeState } from \"../../states/app.state\";\nimport { iReport } from \"../../types/report.types\";\nimport { useReport } from \"./useReport\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that provides report list logic\n * @kind function.\n *\n *\n * @return {{\n * data: iReport\n * }}\n *\n * */\nconst useReportList = () => {\n    const pageSize = useRecoilValue(pageSizeState);\n    const [pageNumber, setPageNumber] = useState<number>(1);\n    const [data, setData] = useState<iReport[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { fetchReports } = useReport();\n\n    useEffect(() => {\n        handleFetchReports();\n    }, [pageNumber]);\n\n    const handleFetchReports = async () => {\n        setLoading(true);\n        const data = await fetchReports(pageNumber, pageSize);\n        setData(data.data);\n        setTotalNumber(data.total);\n        setLoading(false);\n    };\n\n    const handleSearch = () => {};\n\n    return {\n        data,\n        loading,\n        pageSize,\n        totalNumber,\n        handleSearch,\n    };\n};\n\nexport { useReportList };\n","import React from \"react\";\n\n// Libs\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\n// State\nimport { useRecoilValue } from \"recoil\";\nimport { userState } from \"../../states/user.state\";\n\n// Ok to use any? Investigate further if for some reason this causes issues\ninterface PropTypes extends RouteProps {\n    component: React.ComponentType<any>;\n}\n\n/**\n * Private route component, check if user is valid else redirect\n *\n * @param Component\n *  Component to be rendered on the route\n * @param rest\n *  Props passed in\n */\nconst PrivateRoute: React.FC<PropTypes> = ({\n    component: Component,\n    ...rest\n}) => {\n    const user = useRecoilValue(userState);\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                user ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: \"/login\" }} />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","const formatNumber = (value: any) => {\n    return (value && (value as number).toLocaleString(\"en-US\")) || \"0\";\n};\n\nconst randomDate = (start: any, end: any, startHour: any, endHour: any) => {\n    var date = new Date(+start + Math.random() * (end - start));\n    var hour = (startHour + Math.random() * (endHour - startHour)) | 0;\n    date.setHours(hour);\n    return date;\n};\n\nexport { formatNumber, randomDate };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cn from \"classnames\";\n\n// talons\nimport { useRevenueList } from \"../../../talons/Revenue/useRevenueList\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { Button, DatePicker, Form, Space, Table } from \"antd\";\n\n// icons\nimport { Eye, Edit3, Delete } from \"react-feather\";\n\n// styles\nimport defaultClasses from \"./revenueList.module.css\";\n\n// types\nimport { iRevenue } from \"../../../types/revenue.types\";\nimport { iBankAccount } from \"../../../types/bankAccount.types\";\nimport { iStaff } from \"../../../types/user.types\";\nimport { formatNumber } from \"../../../utils/helper\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst RevenueList = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n        handleChangeTable,\n    } = useRevenueList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: 100,\n        },\n        {\n            title: \"Tên\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 250,\n            sorter: (a: any, b: any) => NaN,\n        },\n        {\n            title: \"Mô tả\",\n            dataIndex: \"description\",\n            key: \"description\",\n            width: 250,\n            render: (record: string) => {\n                if (record.length > 50) return <p>{record.slice(0, 50)}...</p>;\n                return <p>{record}</p>;\n            },\n        },\n        {\n            title: \"Ngày\",\n            dataIndex: \"createdAt\",\n            key: \"createdAt\",\n            width: 200,\n            render: (record: Date) => {\n                return <p>{new Date(record).toLocaleDateString()}</p>;\n            },\n        },\n        {\n            title: \"Số lượng\",\n            dataIndex: \"quantity\",\n            key: \"quantity\",\n            width: 150,\n            sorter: (a: any, b: any) => NaN,\n            render: (value: number) => {\n                return <strong>{formatNumber(value)}</strong>;\n            },\n        },\n        {\n            title: \"Đơn giá\",\n            dataIndex: \"priceUnit\",\n            key: \"priceUnit\",\n            width: 150,\n            sorter: (a: any, b: any) => NaN,\n            render: (value: number) => {\n                return <strong>{formatNumber(value)}</strong>;\n            },\n        },\n        {\n            title: \"Tổng tiền (VND)\",\n            dataIndex: \"total\",\n            key: \"total\",\n            width: 200,\n            sorter: (a: any, b: any) => NaN,\n            render: (value: number) => {\n                return <strong>{formatNumber(value)}</strong>;\n            },\n        },\n\n        {\n            title: \"Số tài khoản ngân hàng\",\n            dataIndex: \"bankAccount\",\n            key: \"bankAccount\",\n            width: 300,\n            render: (record: iBankAccount) => {\n                return <p>{record.accountNumber}</p>;\n            },\n        },\n        {\n            title: \"Nhân viên \",\n            dataIndex: \"staff\",\n            key: \"staff\",\n            width: 300,\n            render: (record: iStaff) => {\n                return (\n                    <p>\n                        {record.id} - {record.name}\n                    </p>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: iRevenue) => (\n                <Space size=\"middle\">\n                    <button className={cn(classes.btn, classes.view)}>\n                        <Link to={`/revenue/view/${record.id}`}>\n                            <Eye />\n                        </Link>\n                    </button>\n                    <button className={cn(classes.btn, classes.edit)}>\n                        <Link to={`/revenue/edit/${record.id}`}>\n                            <Edit3 />\n                        </Link>\n                    </button>\n                    <button\n                        className={cn(classes.btn, classes.delete)}\n                        onClick={() => onDelete(record.id)}\n                    >\n                        <Delete />\n                    </button>\n                </Space>\n            ),\n            width: 200,\n            fixed: \"right\" as \"right\",\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Link to=\"/revenue/add\">\n                    <Button type=\"primary\">Thêm mới</Button>\n                </Link>\n\n                <div className={classes.search}>\n                    <Form layout=\"inline\" onFinish={handleSearch}>\n                        <Form.Item label=\"Tìm kiếm theo ngày\" name=\"createdAt\">\n                            <DatePicker />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Tìm kiếm\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </header>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: pageSize,\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                onChange={handleChangeTable}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default RevenueList;\n","import { message, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { iRevenue } from \"../../types/revenue.types\";\nimport { useRevenue } from \"./useRevenue\";\n\nimport moment from \"moment\";\nimport { useRecoilValue } from \"recoil\";\nimport { pageSizeState } from \"../../states/app.state\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that provides revenue list logic\n * @kind function.\n *\n *\n * @return {{\n * data: iRevenue,\n * pageSize: number,\n * totalNumber: number,\n * revenueList: iRevenue,\n * onDelete: func,\n * handleSearch: func\n * handleChangeTable: func\n * }}\n *\n * */\n\nconst useRevenueList = () => {\n    const pageSize = useRecoilValue(pageSizeState);\n    const [pageNumber, setPageNumber] = useState<number>(1);\n    const [data, setData] = useState<iRevenue[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { deleteRevenue, fetchRevenues } = useRevenue();\n\n    useEffect(() => {\n        handleFetchRevenues();\n    }, [pageNumber]);\n\n    const handleFetchRevenues = async (sortBy = 4, isAsc = true) => {\n        setLoading(true);\n        const data = await fetchRevenues(\n            pageNumber,\n            pageSize,\n            null,\n            sortBy,\n            isAsc\n        );\n        setData(data.data);\n        setTotalNumber(data.total);\n        setLoading(false);\n    };\n\n    const handleChangeTable = (\n        pagination: any,\n        filters: any,\n        sorter: any,\n        extra: any\n    ) => {\n        let sortBy = 4;\n        let isAsc = true;\n        switch (sorter.field) {\n            case \"name\":\n                sortBy = 4;\n                break;\n            case \"quantity\":\n                sortBy = 1;\n                break;\n            case \"priceUnit\":\n                sortBy = 2;\n                break;\n            case \"total\":\n                sortBy = 3;\n                break;\n            default:\n                sortBy = 4;\n        }\n\n        if (sorter.order === \"descend\") {\n            isAsc = false;\n        }\n        handleSort(sortBy, isAsc);\n        setPageNumber(pagination.current);\n    };\n\n    const handleSearch = async (values: any) => {\n        if (!values.createdAt) {\n            handleFetchRevenues();\n            setPageNumber(1);\n        } else {\n            const day = moment(values.createdAt).toDate().toLocaleDateString();\n            const response = await fetchRevenues(1, pageSize, day);\n            if (response.status === 200) {\n                setData(response.data);\n                setTotalNumber(response.total);\n            }\n        }\n    };\n\n    const onDelete = (revenueID: number) => {\n        Modal.confirm({\n            title: \"Xóa phiếu thu này?\",\n            content:\n                \"Bạn có chắc muốn xóa phiếu thu này không? Tất cả các báo cáo liên quan đến phiếu thu này cũng sẽ bị xóa \",\n            okText: \"Xác nhận xóa\",\n            cancelText: \"Hủy\",\n            onOk: async () => {\n                const data = await deleteRevenue(revenueID);\n                setPageNumber(1);\n                await handleFetchRevenues();\n                if (data.status === 200) {\n                    message.success(\"Xóa phiếu thu thành công\");\n                } else {\n                    message.error(\"Đã xảy ra lỗi. Xin thử lại sau\");\n                }\n            },\n        });\n    };\n\n    const handleSort = async (sortBy = 4, isAsc = true) => {\n        await handleFetchRevenues(sortBy, isAsc);\n    };\n\n    return {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSort,\n        handleSearch,\n        handleChangeTable,\n    };\n};\n\nexport { useRevenueList };\n","import React from \"react\";\n\n// talons\nimport { useRevenueForm } from \"../../../talons/Revenue/useRevenueForm\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { DatePicker, Form, Input, InputNumber } from \"antd\";\n\n// styles\nimport defaultClasses from \"./revenueForm.module.css\";\n\n// types'\nimport { FORM_TYPE } from \"../../../types/app.types\";\n\ninterface Props {\n    classes?: object;\n    view: FORM_TYPE;\n}\n\nconst RevenueForm = ({ classes: propsClasses, view }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const { form, revenue, handleCancel, onChange, onSubmit } = useRevenueForm({\n        view,\n    });\n\n    let title = null;\n    let buttonText = null;\n\n    switch (view) {\n        case \"ADD\":\n            title = \"Thêm thông tin doanh thu\";\n            buttonText = \"Thêm\";\n            break;\n        case \"EDIT\":\n            title = \"Sửa thông tin doanh thu\";\n            buttonText = \"Lưu thông tin\";\n            break;\n        case \"VIEW\":\n            title = \"Thông tin chi tiết doanh thu\";\n            buttonText = \"Sửa\";\n            break;\n        default:\n            title = \"Thông tin doanh thu\";\n            buttonText = \"\";\n    }\n\n    return (\n        <div className={classes.root}>\n            <h2 className={classes.title}>{title}</h2>\n\n            <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={onSubmit}\n                onValuesChange={onChange}\n                form={form}\n                initialValues={revenue || {}}\n                key={Math.random()}\n            >\n                <Form.Item label=\"Ngày\" name=\"createdAt\">\n                    <DatePicker />\n                </Form.Item>\n                <Form.Item\n                    label=\"Tên\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập tên cho phiếu thu\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Mô tả\"\n                    name=\"description\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập mô tả cho phiếu thu\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Số lượng\"\n                    name=\"quantity\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập số lượng\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>{\" \"}\n                <Form.Item\n                    label=\"Đơn giá\"\n                    name=\"priceUnit\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập đơn giá\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>\n                <Form.Item\n                    label=\"Tổng tiền\"\n                    name=\"total\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name for revenue\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>\n                <Form.Item\n                    label=\"Số tài khoản ngân hàng\"\n                    name=\"bankAccountNumber\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập số tài khoản ngân hàng\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <div className={classes.btnGroup}>\n                    <button type=\"submit\" className={classes.btn}>\n                        {buttonText}\n                    </button>\n                    <button className={classes.btn} onClick={handleCancel}>\n                        Hủy\n                    </button>\n                </div>\n            </Form>\n        </div>\n    );\n};\n\nexport default RevenueForm;\n","import { Form, message } from \"antd\";\nimport { Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { iRevenue, iRevenueDTO } from \"../../types/revenue.types\";\nimport { randomDate } from \"../../utils/helper\";\nimport { useRevenue } from \"./useRevenue\";\nimport faker from \"faker\";\nimport moment from \"moment\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that revenue form  logic\n *\n * @kind function.\n *\n * @return {{\n * form: formRef\n * revenue: iRevenue\n * onSubmit: func,\n * onChange: func,\n * handleCancel: func\n * }}\n * */\n\nconst useRevenueForm = ({ view: propsView }: { view: FORM_TYPE }) => {\n    const [form] = Form.useForm();\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    const [revenue, setRevenue] = useState<iRevenue | null>(null);\n\n    const { fetchRevenue, addRevenue, updateRevenue } = useRevenue();\n\n    const handleFetchRevenue = async () => {\n        const id = params?.id && ~~params.id;\n        if (id === 0) return;\n        const data = await fetchRevenue(~~id);\n        if (!data) {\n            history.push(\"/revenue\");\n            message.error(\"Không tồn tại phiếu thu với id này\");\n        }\n        form.setFieldsValue({\n            bankAccountNumber: data.bankAccount.accountNumber,\n            createdAt: moment(new Date(data.createdAt)),\n        });\n        setRevenue(data);\n    };\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchRevenue();\n        }\n    }, [params.id]);\n\n    useEffect(() => {\n        // mockData();\n    }, []);\n\n    const onSubmit = (values: iRevenueDTO) => {\n        if (propsView === \"ADD\") {\n            handleAddRevenue(values);\n        } else if (propsView === \"EDIT\") {\n            Modal.confirm({\n                title: \"Lưu\",\n                content: \"Bạn có chắc muốn lưu lại tất cả các thay đổi không ?\",\n                okText: \"Lưu\",\n                cancelText: \"Hủy\",\n                onOk: () => handleUpdateRevenue(values),\n            });\n        } else {\n            history.push(`/revenue/edit/${params.id}`);\n        }\n    };\n\n    const onChange = (values: any, allValues: any) => {\n        if (allValues.priceUnit && allValues.quantity) {\n            form.setFieldsValue({\n                total: allValues.priceUnit * allValues.quantity,\n            });\n        }\n    };\n\n    const handleCancel = () => {\n        history.push(\"/revenue\");\n    };\n\n    const handleAddRevenue = async (values: iRevenueDTO) => {\n        const response = await addRevenue(values);\n        if (response.status === 201) {\n            message.success(\"Them moi thanh cong\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const handleUpdateRevenue = async (values: iRevenueDTO) => {\n        const response = await updateRevenue(values, ~~params.id);\n        if (response.status === 200) {\n            message.success(\"Update thành công!\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const mockData = async () => {\n        [...Array(1000)].map(async () => {\n            const quantity = faker.datatype.number({\n                min: 1,\n                max: 550,\n            });\n            const priceUnit = faker.datatype.number({\n                min: 1,\n                max: 200000,\n            });\n            const total = quantity * priceUnit;\n            const values = {\n                createdAt: randomDate(\n                    new Date(\"01-01-2021\"),\n                    new Date(\"12-31-2021\"),\n                    0,\n                    24\n                ),\n                name: faker.lorem.word(),\n                bankAccountNumber: 1,\n                description: faker.lorem.sentence(),\n                paymentMethod: faker.lorem.word(),\n                quantity,\n                priceUnit,\n                total,\n            };\n            await addRevenue(values);\n        });\n    };\n\n    return {\n        form,\n        revenue,\n\n        onSubmit,\n        onChange,\n        handleCancel,\n    };\n};\nexport { useRevenueForm };\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that expense list logic\n *\n * @kind function.\n *\n * @return {{\n *}}\n * */\n\nimport client from \"../../api/client\";\nimport { TExpense } from \"../../types/expense.types\";\nimport { useData } from \"../common/useData\";\n\nconst BASE_BACKEND_URL = `${process.env.REACT_APP_API_LINK}/expense`;\n\nconst useExpense = ({ type = \"EMPLOYEE_SALARY\" }: { type: TExpense }) => {\n    let ADDITIONAL_ENDPOINT = \"/expense\";\n\n    switch (type) {\n        case \"EMPLOYEE_SALARY\":\n            ADDITIONAL_ENDPOINT = `/expense/employeeSalary`;\n            break;\n        case \"SERVICE\":\n            ADDITIONAL_ENDPOINT = `/expense/service`;\n            break;\n        case \"SHOPPING\":\n            ADDITIONAL_ENDPOINT = `/expense/shopping`;\n            break;\n    }\n\n    const { fetchList, fetchOne, addOne, updateOne, deleteOne } = useData({\n        endpoint: \"/expense\",\n        additionalEndpoint: ADDITIONAL_ENDPOINT,\n    });\n\n    const fetchExpenses = async () => {\n        const response = await fetchList();\n        return response;\n    };\n\n    const fetchExpense = async (expenseID: number) => {\n        const response = await fetchOne(expenseID);\n        return response.data;\n    };\n\n    const addExpense = async (data: any) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await addOne(data);\n        return response;\n    };\n\n    const updateExpense = async (data: any, expenseID: number) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await updateOne(expenseID, data);\n        return response;\n    };\n\n    const deleteExpense = async (expenseID: number) => {\n        const response = await deleteOne(expenseID);\n        return response;\n    };\n\n    const fetchExpenseInRange = async (dateFrom: String, dateTo: String) => {\n        const response = await client.get(\n            `${BASE_BACKEND_URL}/statistic?dayStart=${dateFrom}&dayEnd=${dateTo}`\n        );\n        return response.data;\n    };\n\n    return {\n        addExpense,\n        fetchExpense,\n        fetchExpenses,\n        updateExpense,\n        deleteExpense,\n        fetchExpenseInRange,\n    };\n};\n\nexport { useExpense };\n","import React from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// talons\nimport { useExpenseList } from \"../../../talons/Expense/useExpenseList\";\n\n// components\nimport { Button, DatePicker, Form, Space, Table, Tag } from \"antd\";\n\n// icons\nimport { Delete, Edit3, Eye } from \"react-feather\";\n\n// types\nimport { iStaff } from \"../../../types/user.types\";\nimport { iBankAccount } from \"../../../types/bankAccount.types\";\n\n// styles\nimport defaultClasses from \"./expenseList.module.css\";\nimport { formatNumber } from \"../../../utils/helper\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst ExpenseList = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n        handleChangeTable,\n    } = useExpenseList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: 150,\n        },\n        {\n            title: \"Tên\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 200,\n            sorter: (a: any, b: any) => NaN,\n        },\n        {\n            title: \"Mô tả\",\n            dataIndex: \"description\",\n            key: \"description\",\n            width: 250,\n            render: (record: string) => {\n                if (record.length > 50) return <p>{record.slice(0, 50)}...</p>;\n                return <p>{record}</p>;\n            },\n        },\n        {\n            title: \"Ngày\",\n            dataIndex: \"date\",\n            key: \"date\",\n            width: 200,\n            render: (record: Date) => {\n                return <p>{new Date(record).toLocaleDateString()}</p>;\n            },\n        },\n        {\n            title: \"Loại\",\n            dataIndex: \"type\",\n            key: \"type\",\n            width: 150,\n            render: (type: any) => {\n                let color = \"volcano\";\n\n                switch (type) {\n                    case \"Mua sắm\":\n                        color = \"geekblue\";\n                        break;\n                    case \"Trang thiết bị\":\n                        color = \"green\";\n                        break;\n                    case \"Trả lương\":\n                        color = \"volcano\";\n                        break;\n                }\n\n                return (\n                    <span>\n                        <Tag color={color}>{type}</Tag>\n                    </span>\n                );\n            },\n        },\n        {\n            title: \"Tổng tiền\",\n            dataIndex: \"total\",\n            key: \"total\",\n            width: 150,\n            sorter: (a: any, b: any) => NaN,\n            render: (value: number) => {\n                return <strong>{formatNumber(value)}</strong>;\n            },\n        },\n\n        {\n            title: \"Số tài khoản ngân hàng\",\n            dataIndex: \"bankAccount\",\n            key: \"bankAccount\",\n            width: 300,\n            render: (record: iBankAccount) => {\n                return <p>{record.accountNumber}</p>;\n            },\n        },\n        {\n            title: \"Nhân viên \",\n            dataIndex: \"staff\",\n            key: \"staff\",\n            width: 300,\n            render: (record: iStaff) => {\n                return (\n                    <p>\n                        {record.id} - {record.name}\n                    </p>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: any) => (\n                <Space size=\"middle\">\n                    <button className={cn(classes.btn, classes.view)}>\n                        <Link to={`/expense/view/${record.id}`}>\n                            <Eye />\n                        </Link>\n                    </button>\n                    <button className={cn(classes.btn, classes.edit)}>\n                        <Link to={`/expense/edit/${record.id}`}>\n                            <Edit3 />\n                        </Link>\n                    </button>\n                    <button\n                        className={cn(classes.btn, classes.delete)}\n                        onClick={() => onDelete(record.id)}\n                    >\n                        <Delete />\n                    </button>\n                </Space>\n            ),\n            width: 200,\n            fixed: \"right\" as \"right\",\n        },\n    ];\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Link to=\"/expense/add\">\n                    <Button type=\"primary\">Thêm mới</Button>\n                </Link>\n\n                <div className={classes.search}>\n                    <Form layout=\"inline\" onFinish={handleSearch}>\n                        <Form.Item label=\"Tìm kiếm theo ngày\" name=\"createdAt\">\n                            <DatePicker />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Tìm kiếm\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </header>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: pageSize,\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                onChange={handleChangeTable}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default ExpenseList;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { pageSizeState } from \"../../states/app.state\";\nimport { useExpense } from \"./useExpense\";\nimport moment from \"moment\";\nimport { message, Modal } from \"antd\";\n\nconst useExpenseList = () => {\n    const pageSize = useRecoilValue(pageSizeState);\n    const [pageNumber, setPageNumber] = useState<number>(1);\n    const [initialData, setInitialData] = useState<any[]>([]);\n    const [data, setData] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { fetchExpenses, deleteExpense } = useExpense({ type: \"BASE\" });\n\n    useEffect(() => {\n        handleFetchExpenses();\n    }, []);\n\n    const populateType = (data: any) => {\n        return data\n            .map((e: any) => {\n                let type = \"Mua sắm\";\n                if (e.hasOwnProperty(\"productID\")) type = \"Mua sắm\";\n                else if (e.hasOwnProperty(\"employeeID\")) type = \"Trả lương\";\n                else type = \"Trang thiết bị\";\n                return {\n                    ...e,\n                    type,\n                };\n            })\n            .sort((a: any, b: any) => a.id - b.id);\n    };\n\n    const handleFetchExpenses = async (sortBy = 4, isAsc = true) => {\n        setLoading(true);\n        const data = await fetchExpenses();\n        const populatedData = populateType(data.data);\n        console.log(`populatedData`, populatedData);\n        setInitialData(populatedData);\n        setTotalNumber(populatedData.length);\n        setData(populatedData);\n        setLoading(false);\n    };\n\n    const handleChangeTable = (\n        pagination: any,\n        filters: any,\n        sorter: any,\n        extra: any\n    ) => {\n        let isAsc = true;\n        if (sorter.order === \"descend\") {\n            isAsc = false;\n        }\n        if (sorter?.field) handleSort(sorter.field, isAsc);\n    };\n\n    const handleSearch = async (values: any) => {\n        if (!values.createdAt) {\n            setData(initialData);\n            setPageNumber(1);\n        } else {\n            const day = moment(values.createdAt).toDate().toLocaleDateString();\n            const searchData = initialData.filter((item: any) => {\n                const date = new Date(item.date).toLocaleDateString();\n                return date == day;\n            });\n            setData(searchData);\n        }\n    };\n\n    const onDelete = (expenseID: number) => {\n        Modal.confirm({\n            title: \"Xóa phiếu chi này?\",\n            content: `Bạn có chắc muốn xóa phiếu chi này không? \n                Tất cả các báo cáo liên quan đến phiếu chi này cũng sẽ bị xóa`,\n            okText: \"Xác nhận xóa\",\n            cancelText: \"Hủy\",\n            onOk: async () => {\n                const data = await deleteExpense(expenseID);\n                setPageNumber(1);\n                await handleFetchExpenses();\n                if (data.status === 200) {\n                    message.success(\"Xóa phiếu chi thành công\");\n                } else {\n                    message.error(\"Đã xảy ra lỗi. Xin thử lại sau\");\n                }\n            },\n        });\n    };\n\n    const handleSort = async (sortBy: string, isAsc = true) => {\n        const newData = initialData.sort((a: any, b: any) => {\n            if (sortBy === \"name\") {\n                return isAsc\n                    ? a.name.length - b.name.length\n                    : b.name.length - a.name.length;\n            } else if (sortBy === \"total\") {\n                return isAsc ? a.total - b.total : b.total - a.total;\n            }\n\n            return a.length - b.length;\n        });\n        setData(newData);\n    };\n\n    return {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSort,\n        handleSearch,\n        handleChangeTable,\n    };\n};\n\nexport { useExpenseList };\n","import React from \"react\";\n\n// talons\nimport { useExpenseForm } from \"../../../talons/Expense/useExpenseForm\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { DatePicker, Form, Input, InputNumber, Select } from \"antd\";\n\n// types\nimport { FORM_TYPE } from \"../../../types/app.types\";\n\n// styles\nimport defaultClasses from \"./expenseForm.module.css\";\n\ninterface Props {\n    classes?: object;\n    view: FORM_TYPE;\n}\n\nconst ExpenseForm = ({ classes: propsClasses, view }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        form,\n        type,\n        expense,\n        handleCancel,\n        onSubmit,\n        onChange,\n        handleChangeType,\n    } = useExpenseForm({\n        view,\n    });\n\n    let title = null;\n    let buttonText = null;\n\n    switch (view) {\n        case \"ADD\":\n            title = \"Thêm thông tin phiếu chi\";\n            buttonText = \"Thêm\";\n            break;\n        case \"EDIT\":\n            title = \"Sửa thông tin phiếu chi\";\n            buttonText = \"Lưu thông tin\";\n            break;\n        case \"VIEW\":\n            title = \"Thông tin chi tiết phiếu chi\";\n            buttonText = \"Sửa\";\n            break;\n        default:\n            title = \"Thông tin phiếu chi\";\n            buttonText = \"\";\n    }\n\n    return (\n        <div className={classes.root}>\n            <h2 className={classes.title}>{title}</h2>\n\n            <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={onSubmit}\n                onValuesChange={onChange}\n                form={form}\n                initialValues={expense || {}}\n                key={Math.random()}\n            >\n                <Form.Item label=\"Ngày\" name=\"date\">\n                    <DatePicker />\n                </Form.Item>\n                <Form.Item\n                    label=\"Tên\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Mô tả\"\n                    name=\"description\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input description\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Phương thức thanh toán\"\n                    name=\"paymentMethod\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input payment method\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Số tài khoản ngân hàng\"\n                    name=\"bankAccountNumber\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập số tài khoản ngân hàng\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item label=\"Kiểu phiếu chi\" name=\"type\">\n                    <Select\n                        disabled={view !== \"ADD\"}\n                        defaultValue={type}\n                        onChange={handleChangeType}\n                    >\n                        <Select.Option value=\"SERVICE\">Dịch vụ</Select.Option>\n                        <Select.Option value=\"EMPLOYEE_SALARY\">\n                            Lương nhân viên\n                        </Select.Option>\n                        <Select.Option value=\"SHOPPING\">Mua sắm</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                {type === \"SHOPPING\" && (\n                    <React.Fragment>\n                        <Form.Item\n                            label=\"Số lượng\"\n                            name=\"quantity\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Xin hãy nhập số lượng\",\n                                },\n                            ]}\n                        >\n                            <InputNumber\n                                disabled={view === \"VIEW\"}\n                                formatter={(value) =>\n                                    `${value}`.replace(\n                                        /\\B(?=(\\d{3})+(?!\\d))/g,\n                                        \",\"\n                                    )\n                                }\n                                parser={(value: any) =>\n                                    (value &&\n                                        value.replace(/\\$\\s?|(,*)/g, \"\")) ||\n                                    \"\"\n                                }\n                                min={0}\n                            />\n                        </Form.Item>{\" \"}\n                        <Form.Item\n                            label=\"Đơn giá\"\n                            name=\"priceUnit\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Xin hãy nhập đơn giá\",\n                                },\n                            ]}\n                        >\n                            <InputNumber\n                                disabled={view === \"VIEW\"}\n                                formatter={(value) =>\n                                    `${value}`.replace(\n                                        /\\B(?=(\\d{3})+(?!\\d))/g,\n                                        \",\"\n                                    )\n                                }\n                                parser={(value: any) =>\n                                    (value &&\n                                        value.replace(/\\$\\s?|(,*)/g, \"\")) ||\n                                    \"\"\n                                }\n                                min={0}\n                            />\n                        </Form.Item>\n                    </React.Fragment>\n                )}\n\n                {type === \"EMPLOYEE_SALARY\" && (\n                    <Form.Item\n                        label=\"So hieu nhan vien\"\n                        name=\"staffID\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input user ID\",\n                            },\n                        ]}\n                    >\n                        <Input disabled={view === \"VIEW\"} />\n                    </Form.Item>\n                )}\n\n                <Form.Item\n                    label=\"Tổng tiền\"\n                    name=\"total\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name for revenue\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\" || type === \"SHOPPING\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>\n\n                <div className={classes.btnGroup}>\n                    <button type=\"submit\" className={classes.btn}>\n                        {buttonText}\n                    </button>\n                    <button className={classes.btn} onClick={handleCancel}>\n                        Hủy\n                    </button>\n                </div>\n            </Form>\n        </div>\n    );\n};\n\nexport default ExpenseForm;\n","import { Form, message, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { TExpense } from \"../../types/expense.types\";\nimport { useExpense } from \"./useExpense\";\nimport moment from \"moment\";\nimport { randomDate } from \"../../utils/helper\";\nimport faker from \"faker\";\nimport client from \"../../api/client\";\n\nconst useExpenseForm = ({ view }: { view: FORM_TYPE }) => {\n    const [form] = Form.useForm();\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    const [type, setType] = useState<TExpense>(\"EMPLOYEE_SALARY\");\n    const [expense, setExpense] = useState<any | null>(null);\n\n    const { addExpense, fetchExpense, updateExpense } = useExpense({ type });\n\n    useEffect(() => {\n        // mockData();\n    }, []);\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchExpense();\n        }\n    }, [params.id]);\n\n    const handleFetchExpense = async () => {\n        const id = params?.id && ~~params.id;\n        if (id === 0) return;\n        const data = await fetchExpense(~~id);\n        if (!data) {\n            history.push(\"/revenue\");\n            message.error(\"Không tồn tại phiếu thu với id này\");\n        }\n        form.setFieldsValue({\n            bankAccountNumber: data.bankAccount.accountNumber,\n            date: moment(new Date(data.date)),\n            staffID: data.staff.id,\n        });\n        if (data.hasOwnProperty(\"productID\")) setType(\"SHOPPING\");\n        else if (data.hasOwnProperty(\"employeeID\")) setType(\"EMPLOYEE_SALARY\");\n        else setType(\"SERVICE\");\n        setExpense(data);\n    };\n\n    const onSubmit = (values: any) => {\n        if (view === \"ADD\") {\n            handleAddExpense(values);\n        } else if (view === \"EDIT\") {\n            Modal.confirm({\n                title: \"Lưu\",\n                content: \"Bạn có chắc muốn lưu lại tất cả các thay đổi không ?\",\n                okText: \"Lưu\",\n                cancelText: \"Hủy\",\n                onOk: () => handleUpdateExpense(values),\n            });\n        } else {\n            history.push(`/expense/edit/${params.id}`);\n        }\n    };\n\n    const handleAddExpense = async (values: any) => {\n        const response = await addExpense(values);\n        if (response.status === 201) {\n            message.success(\"Them moi thanh cong\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const mockData = async () => {\n        let additionalInfo = {};\n\n        const types: TExpense[] = [\"EMPLOYEE_SALARY\", \"SERVICE\", \"SHOPPING\"];\n        [...Array(500)].map(async () => {\n            const type: TExpense =\n                types[Math.floor(Math.random() * types.length)];\n\n            let endpoint = \"/expense\";\n\n            switch (type) {\n                case \"EMPLOYEE_SALARY\":\n                    endpoint = `/expense/employeeSalary`;\n                    break;\n                case \"SERVICE\":\n                    endpoint = `/expense/service`;\n                    break;\n                default:\n                    endpoint = `/expense/shopping`;\n                    break;\n            }\n\n            switch (type) {\n                case \"SHOPPING\":\n                    const quantity = faker.datatype.number({\n                        min: 1,\n                        max: 100,\n                    });\n                    const priceUnit = faker.datatype.number({\n                        min: 1,\n                        max: 100,\n                    });\n                    additionalInfo = {\n                        quantity,\n                        priceUnit,\n                        total: quantity * priceUnit,\n                    };\n                    break;\n                case \"EMPLOYEE_SALARY\":\n                    additionalInfo = {\n                        staffID: 1,\n                        total: faker.datatype.number({\n                            min: 1000,\n                            max: 1000000,\n                        }),\n                    };\n                    break;\n                default:\n                    additionalInfo = {\n                        total: faker.datatype.number({\n                            min: 10000,\n                            max: 1000000,\n                        }),\n                    };\n            }\n\n            const values = {\n                date: randomDate(\n                    new Date(\"01-01-2021\"),\n                    new Date(\"12-31-2021\"),\n                    0,\n                    24\n                ),\n                type,\n                name: faker.lorem.word(),\n                bankAccountNumber: 1,\n                staffID: 1,\n                description: faker.lorem.sentence(),\n                paymentMethod: faker.lorem.word(),\n                ...additionalInfo,\n            };\n            await client.post(endpoint, values);\n        });\n    };\n\n    const handleUpdateExpense = async (values: any) => {\n        const response = await updateExpense(values, ~~params.id);\n        console.log(`response`, response);\n        if (response.status === 200) {\n            message.success(\"Update thành công!\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const onChange = (values: any, allValues: any) => {\n        if (allValues.priceUnit && allValues.quantity) {\n            form.setFieldsValue({\n                total: allValues.priceUnit * allValues.quantity,\n            });\n        }\n    };\n\n    const handleCancel = () => {\n        history.push(\"/expense\");\n    };\n\n    const handleChangeType = (value: TExpense) => {\n        setType(value);\n    };\n\n    return {\n        form,\n        type,\n        expense,\n        onSubmit,\n        onChange,\n        handleCancel,\n        handleChangeType,\n    };\n};\n\nexport { useExpenseForm };\n","import React, { Component } from \"react\";\nimport Logo from \"../../Logo\";\n\nimport classes from \"./printPage.module.css\";\n\nclass PrintPage extends Component {\n    render() {\n        const { children } = this.props;\n\n        return (\n            <div className={classes.printWrapper}>\n                <div className={classes.header}>\n                    <Logo />\n                    <p>Công ty trách nhiệm hữu hạn 1 thành viên</p>\n                </div>\n                <div className={classes.content}>{children}</div>\n                <div className={classes.footer}>\n                    <p>Copy right. All right reserved @2020</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PrintPage;\n","import React from \"react\";\nimport { iStaff } from \"../../../types/user.types\";\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\nimport defaultClasses from \"./reportStaffInfo.module.css\";\n\ninterface Props {\n    classes?: object;\n    data: iStaff;\n}\n\nconst ReportStaffInfo = ({ classes: propsClasses, data }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    return (\n        <section className={classes.root}>\n            <p>Nhân viên lập báo cáo: </p>\n            <p>Tên: {data.name}</p>\n            <p> Chức vụ: {data.role}</p>\n            <p>Số điện thoại: {data.phoneNumber}</p>\n            <p>Phòng ban: {data.department}</p>\n            <p>Địa chỉ email : {data.email}</p>\n        </section>\n    );\n};\n\nexport default ReportStaffInfo;\n","import React from \"react\";\nimport { iReport } from \"../../../types/report.types\";\nimport { formatNumber } from \"../../../utils/helper\";\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\nimport defaultClasses from \"./reportSummary.module.css\";\n\ninterface Props {\n    classes?: object;\n    data: Partial<iReport>;\n}\n\nconst ReportSummary = ({ classes: propsClasses, data }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    if (!data || !data.budget || !data.expense || !data.profit) return null;\n\n    console.log((data.expense * 100) / (data.budget > 0 ? data.budget : 1));\n\n    const expensePercent =\n        Math.round((data.expense * 1e4) / (data.budget > 0 ? data.budget : 1)) /\n        100;\n\n    return (\n        <div className={classes.root}>\n            <p>Tổng kết : </p>\n            <p>\n                Ngân sách:{\" \"}\n                <strong\n                    style={{\n                        color: \"green\",\n                    }}\n                >\n                    {formatNumber(data.budget)}\n                </strong>\n            </p>\n            <p>\n                Tổng chi:{\" \"}\n                <strong\n                    style={{\n                        color: \"red\",\n                    }}\n                >\n                    {formatNumber(data.expense)}\n                </strong>\n            </p>\n            <p>\n                Tổng thu:{\" \"}\n                <strong\n                    style={{\n                        color: \"green\",\n                    }}\n                >\n                    {formatNumber(data.revenue)}\n                </strong>\n            </p>\n            <p>\n                Lợi nhuận:{\" \"}\n                <strong\n                    style={{\n                        color: `${data.profit > 0 ? \"blue\" : \"red\"}`,\n                    }}\n                >\n                    {formatNumber(data.profit)}\n                </strong>\n            </p>\n            <p>\n                Phần trăm chi / ngân sách:{\" \"}\n                <strong\n                    style={{\n                        color: `${expensePercent < 100 ? \"green\" : \"red\"}`,\n                    }}\n                >\n                    {expensePercent}%\n                </strong>\n            </p>\n            <p>\n                Đơn vị: <strong>VND</strong>\n            </p>\n        </div>\n    );\n};\n\nexport default ReportSummary;\n","import React from \"react\";\n\n// components\nimport ReportStaffInfo from \"../ReportStaffInfo\";\nimport ReportSummary from \"../ReportSummary\";\nimport { Table } from \"antd\";\n\n// styles\nimport classes from \"./reportDetail.module.css\";\n\n// types\nimport { iCustomReport } from \"../../../types/report.types\";\nimport { formatNumber } from \"../../../utils/helper\";\n\ninterface Props {\n    data: iCustomReport;\n}\n\nconst ReportDetail = ({ data }: Props) => {\n    const columns = [\n        {\n            title: \"Mã\",\n            dataIndex: \"id\",\n            width: 50,\n        },\n        {\n            title: \"Ngày\",\n            dataIndex: \"date\",\n            width: 100,\n        },\n        {\n            title: \"Tổng thu\",\n            dataIndex: \"totalRevenue\",\n            width: 100,\n            render: (value: number) => {\n                return <strong>{formatNumber(value) || 0} VND</strong>;\n            },\n        },\n        {\n            title: \"Tổng chi\",\n            dataIndex: \"totalExpense\",\n            width: 100,\n            render: (value: number) => {\n                return <strong>{formatNumber(value)} VND</strong>;\n            },\n        },\n        {\n            title: \"Lợi nhuận\",\n            dataIndex: \"profit\",\n            width: 100,\n            render: (value: number) => {\n                return <strong>{formatNumber(value)} VND</strong>;\n            },\n        },\n    ];\n\n    return (\n        <Table\n            columns={columns}\n            dataSource={data?.row}\n            pagination={false}\n            bordered\n            title={() => (\n                <strong>\n                    Báo cáo thống kê từ ngày{\" \"}\n                    {new Date(\n                        (data && data.dateFrom) || (data && data.reportFrom)\n                    ).toLocaleDateString()}\n                    đến{\" \"}\n                    {new Date(\n                        (data && data.dateTo) || (data && data.reportTo)\n                    ).toLocaleDateString()}\n                </strong>\n            )}\n            footer={() => {\n                if (!data) return <p>Loading...</p>;\n                return (\n                    <div className={classes.summary}>\n                        <ReportSummary\n                            data={{\n                                budget: (data && data.budget) || 0,\n                                expense: data.expense || 0,\n                                profit: data.profit || 0,\n                            }}\n                        />\n                        <div>Mô tả : {data.description}</div>\n\n                        <ReportStaffInfo data={data.staff} />\n                    </div>\n                );\n            }}\n        />\n    );\n};\n\nexport default ReportDetail;\n","import React, { useRef } from \"react\";\n\n// talons\nimport { useGenerateReport } from \"../../../talons/Report/useGenerateReport\";\n\n// components\nimport { Form, DatePicker, Button, Table, Empty } from \"antd\";\nimport ReactToPrint from \"react-to-print\";\nimport PrintPage from \"../../Print/PrintPage\";\nimport ReportDetail from \"../ReportDetail\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport ReportStaffInfo from \"../ReportStaffInfo\";\nimport ReportSummary from \"../ReportSummary\";\n\n// styles\nimport classes from \"./reportGenerator.module.css\";\n\n// types\nimport { FORM_TYPE } from \"../../../types/app.types\";\nimport { formatNumber } from \"../../../utils/helper\";\nimport Loading from \"../../Loading\";\n\ninterface Props {\n    view: FORM_TYPE;\n}\n\nconst { RangePicker } = DatePicker;\n\nconst ReportGenerator = ({ view }: Props) => {\n    const { data, loading, handleGenerateReport, handleGetInfoForReport } =\n        useGenerateReport({\n            view,\n        });\n\n    const printComponentRef = useRef(null);\n\n    const columns = [\n        {\n            title: \"Mã\",\n            dataIndex: \"id\",\n            width: 50,\n        },\n        {\n            title: \"Ngày\",\n            dataIndex: \"date\",\n            width: 100,\n        },\n        {\n            title: \"Tổng thu\",\n            dataIndex: \"totalRevenue\",\n            width: 100,\n            render: (value: number) => {\n                return <p>{formatNumber(value)} VND</p>;\n            },\n        },\n        {\n            title: \"Tổng chi\",\n            dataIndex: \"totalExpense\",\n            width: 100,\n            render: (value: number) => {\n                return <p>{formatNumber(value)} VND</p>;\n            },\n        },\n        {\n            title: \"Lợi nhuận\",\n            dataIndex: \"profit\",\n            width: 100,\n            render: (value: number) => {\n                return <p>{formatNumber(value)} VND</p>;\n            },\n        },\n    ];\n\n    if(loading || !data){\n        return <Loading />\n    }\n\n    return (\n        <div className={classes.root}>\n            {view !== \"VIEW\" && (\n                <header className={classes.header}>\n                    <Form layout=\"inline\" onFinish={handleGetInfoForReport}>\n                        <Form.Item\n                            label=\"Tạo báo cáo theo tháng\"\n                            name=\"range\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message:\n                                        \"Xin hãy chọn tháng để xem báo cáo\",\n                                },\n                            ]}\n                        >\n                            <RangePicker />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Tạo báo cáo\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </header>\n            )}\n\n            <section className={classes.main}>\n                {(data && (data.revenue !== 0 || data.expense !== 0) && (\n                    <Table\n                        columns={columns}\n                        dataSource={data?.row}\n                        loading={loading}\n                        pagination={false}\n                        scroll={{ y: 300 }}\n                        bordered\n                        title={() => (\n                            <strong>\n                                Báo cáo thống kê từ ngày{\" \"}\n                                {new Date(\n                                    (data && data.dateFrom) ||\n                                        (data && data.reportFrom)\n                                ).toLocaleDateString()}\n                                đến{\" \"}\n                                {new Date(\n                                    (data && data.dateTo) ||\n                                        (data && data.reportTo)\n                                ).toLocaleDateString()}\n                            </strong>\n                        )}\n                        footer={() => {\n                            if (!data) return <p>Loading...</p>;\n                            return (\n                                <React.Fragment>\n                                    <div className={classes.summary}>\n                                        <ReportSummary\n                                            data={{\n                                                budget:\n                                                    (data && data.budget) || 0,\n                                                expense: data.expense || 0,\n                                                profit: data.profit || 0,\n                                                revenue: data.revenue || 0,\n                                            }}\n                                        />\n\n                                        <Form\n                                            onFinish={handleGenerateReport}\n                                            key={Math.random()}\n                                        >\n                                            <Form.Item\n                                                label=\"Mô tả báo cáo\"\n                                                name=\"description\"\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message:\n                                                            \"Xin hãy nhập mô tả cho báo cáo\",\n                                                    },\n                                                ]}\n                                            >\n                                                <TextArea\n                                                    disabled={view === \"VIEW\"}\n                                                    defaultValue={\n                                                        data.description\n                                                    }\n                                                />\n                                            </Form.Item>\n                                            {view === \"VIEW\" && (\n                                                <ReportStaffInfo\n                                                    data={data.staff}\n                                                />\n                                            )}\n                                            <Form.Item>\n                                                {view !== \"VIEW\" && (\n                                                    <Button\n                                                        type=\"primary\"\n                                                        htmlType=\"submit\"\n                                                    >\n                                                        Lưu báo cáo\n                                                    </Button>\n                                                )}\n                                                {view === \"VIEW\" && (\n                                                    <React.Fragment>\n                                                        <div\n                                                            className={\n                                                                classes.print\n                                                            }\n                                                        >\n                                                            <ReactToPrint\n                                                                trigger={() => (\n                                                                    <Button\n                                                                        type=\"primary\"\n                                                                        className={\n                                                                            classes.pdfBtn\n                                                                        }\n                                                                    >\n                                                                        Xuất PDF\n                                                                    </Button>\n                                                                )}\n                                                                content={() =>\n                                                                    printComponentRef.current\n                                                                }\n                                                            />\n                                                            <PrintPage\n                                                                ref={\n                                                                    printComponentRef\n                                                                }\n                                                            >\n                                                                <ReportDetail\n                                                                    data={data}\n                                                                />\n                                                            </PrintPage>\n                                                        </div>\n                                                    </React.Fragment>\n                                                )}\n                                            </Form.Item>\n                                        </Form>\n                                    </div>\n                                </React.Fragment>\n                            );\n                        }}\n                    />\n                )) || <Empty description=\"Không thể truy xuất data\" />}\n            </section>\n        </div>\n    );\n};\n\nexport default ReportGenerator;\n","import { useReport } from \"./useReport\";\n\nimport moment from \"moment\";\nimport { message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { iCustomReport, iReport } from \"../../types/report.types\";\nimport { iExpense } from \"../../types/expense.types\";\nimport { iRevenue } from \"../../types/revenue.types\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { useHistory, useParams } from \"react-router\";\n\ntype Props = {\n    view: FORM_TYPE;\n};\n\nconst useGenerateReport = ({ view }: Props) => {\n    const { fetchReport, generateReport, getInformationForReport } =\n        useReport();\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [data, setData] = useState<iReport | null>(null);\n    const [customData, setCustomData] = useState<iCustomReport | null>(null);\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (params?.id) {\n            handleGetReport(params.id);\n        }\n    }, [params.id]);\n\n    const parseFromReportToCustomReport = (data: iReport) => {\n        const result: iCustomReport = {\n            dateFrom: data.dateFrom || data.reportFrom,\n            dateTo: data.dateTo || data.reportTo,\n            description: data.description,\n            expense: data.expense,\n            revenue: data.revenue,\n            staffID: data.staffID,\n            reportDate: new Date(),\n            profit: 0,\n            row: [],\n            staff: data?.staff,\n            budget: data.budget,\n        };\n        const { expenses, revenues } = data;\n        const tempRow: any = {};\n        expenses.forEach((expense: iExpense) => {\n            const { date, total } = expense;\n            const createdAt = new Date(date).toLocaleDateString();\n            if (tempRow.hasOwnProperty(createdAt)) {\n                tempRow[createdAt].expenses += total;\n            } else {\n                tempRow[createdAt] = {\n                    expenses: total,\n                    revenues: 0,\n                };\n            }\n        });\n\n        revenues.forEach((revenue: iRevenue) => {\n            const { createdAt, total } = revenue;\n            const date = new Date(createdAt).toLocaleDateString();\n            if (tempRow.hasOwnProperty(date)) {\n                tempRow[date].revenues += total;\n            } else {\n                tempRow[date] = {\n                    expenses: 0,\n                    revenues: total,\n                };\n            }\n        });\n\n        result.row =\n            tempRow &&\n            Object.entries(tempRow)\n                .map(([key, value], idx) => {\n                    const { expenses, revenues } = value as any;\n                    const profit = revenues - expenses;\n                    result.profit += profit;\n                    return {\n                        id: idx + 1,\n                        date: key,\n                        totalExpense: expenses,\n                        totalRevenue: revenues,\n                        profit,\n                    };\n                })\n                .sort((a: any, b: any) => a.id - b.id);\n        // .sort((a: any, b: any) => {\n        //     const { date: dateA } = a;\n        //     const { date: dateB } = b;\n        //     return dateA.localeCompare(dateB);\n        // });\n\n        return result;\n    };\n\n    const handleGetInfoForReport = async (values: any) => {\n        const dateFrom = moment(values.range[0]).toDate().toLocaleDateString();\n        const dateTo = moment(values.range[1]).toDate().toLocaleDateString();\n\n        const dataDTO = {\n            dateFrom,\n            dateTo,\n            staffID: 1,\n        };\n        setLoading(true);\n        const response = await getInformationForReport(dataDTO);\n        if (response.status === 200) {\n            const temp = parseFromReportToCustomReport(response.data);\n            setCustomData(temp);\n            setData(response.data);\n        } else {\n            message.error(response.message);\n        }\n\n        setLoading(false);\n    };\n\n    const handleGenerateReport = async (values: any) => {\n        setLoading(true);\n\n        const description = values?.description || \"\";\n        const response = await generateReport({\n            ...data,\n            description,\n        });\n        if (response.status === 201) {\n            message.success(\"Tạo báo cáo thành công\");\n            history.push(`/report/${response.data.id}`);\n        } else {\n            message.error(response.message);\n        }\n\n        setLoading(false);\n    };\n\n    const handleGetReport = async (id: string) => {\n        setLoading(true);\n        console.log(`loading`, loading);\n        const response = await fetchReport(~~id);\n        if (response.status === 200) {\n            const temp = parseFromReportToCustomReport(response.data);\n            setLoading(false);\n            setCustomData(temp);\n        } else {\n            message.error(response.message);\n            history.push(\"/report\");\n        }\n        setLoading(false);\n        console.log(`loading`, loading);\n    };\n\n    return {\n        loading,\n        data: customData,\n        handleGenerateReport,\n        handleGetInfoForReport,\n    };\n};\n\nexport { useGenerateReport };\n","import React from \"react\";\nimport { merge } from \"lodash\";\nimport ReactEcharts from \"echarts-for-react\";\n\ninterface Props {\n    title: string;\n    option?: object;\n    height?: number;\n    width?: number | string;\n    padding?: number | string;\n}\n\nconst SmoothedLineChart = ({\n    title,\n    option = {},\n    height = 500,\n    width = 500,\n    padding = 0,\n}: Props) => {\n    const defaultOption = {\n        title: {\n            text: title,\n        },\n        tooltip: {\n            trigger: \"axis\",\n            formatter: function (params: any) {\n                params = params && params[0];\n                var date = new Date(params.name);\n                return (\n                    date.getDate() +\n                    \"/\" +\n                    (date.getMonth() + 1) +\n                    \"/\" +\n                    date.getFullYear() +\n                    \" : \" +\n                    params.value[1]\n                );\n            },\n            axisPointer: {\n                animation: false,\n            },\n        },\n        xAxis: {\n            type: \"time\",\n            splitLine: {\n                show: true,\n            },\n        },\n        yAxis: {\n            type: \"value\",\n            boundaryGap: [0, \"100%\"],\n            splitLine: {\n                show: false,\n            },\n        },\n        dataZoom: [\n            {\n                show: true,\n                type: \"inside\",\n                filterMode: \"none\",\n                xAxisIndex: [0],\n            },\n            {\n                show: true,\n                type: \"inside\",\n                filterMode: \"none\",\n                yAxisIndex: [0],\n            },\n        ],\n    };\n\n    return (\n        <ReactEcharts\n            style={{ height, width, padding }}\n            option={merge({}, defaultOption, option)}\n        />\n    );\n};\n\nexport default SmoothedLineChart;\n","import React from \"react\";\nimport { formatNumber } from \"../../../utils/helper\";\nimport SmoothedLineChart from \"../../CompareChart/SmoothedLineChart\";\n\ninterface Props {\n    data: any;\n    option: any;\n    classes: any;\n}\n\nconst RevenueReport = ({ data, option, classes }: Props) => {\n    const { smallest, largest, total } = data;\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.main}>\n                <SmoothedLineChart\n                    title=\"Thống kê doanh thu\"\n                    option={option}\n                    width=\"700px\"\n                />\n            </div>\n            <footer className={classes.footer}>\n                <ul className={classes.statisticList}>\n                    <li className={classes.statisticListItem}>\n                        <strong>Doanh thu nhỏ nhất: </strong>\n                        <span>{smallest?.amount} </span>\n                        đạt được vào ngày:\n                        <span> {smallest?.day}</span>\n                    </li>\n                    <li className={classes.statisticListItem}>\n                        <strong>Doanh thu lớn nhất: </strong>\n                        <span>{formatNumber(largest?.amount || \"\")} </span>\n                        đạt được vào ngày:\n                        <span> {largest?.day}</span>\n                    </li>\n                    <li className={classes.statisticListItem}>\n                        <strong>Tổng doanh thu : </strong>\n                        <span> {formatNumber(total)}</span>\n                    </li>\n                </ul>\n            </footer>\n        </div>\n    );\n};\n\nexport default RevenueReport;\n","import React, { useRef } from \"react\";\n\n// talons\nimport { useRevenueStatistic } from \"../../../talons/Revenue/useRevenueStatistic\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\nimport { formatNumber } from \"../../../utils/helper\";\n\n// components\nimport { Form, Button, DatePicker, Empty } from \"antd\";\nimport ReactToPrint from \"react-to-print\";\nimport PrintPage from \"../../Print/PrintPage\";\nimport RevenueReport from \"../RevenueReport\";\nimport SmoothedLineChart from \"../../CompareChart/SmoothedLineChart\";\n\n// styles\nimport defaultClasses from \"./revenueStatistic.module.css\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst { RangePicker } = DatePicker;\n\nconst RevenueStatistic = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const { data, largest, smallest, total, option, handleGenerateStatistic } =\n        useRevenueStatistic();\n\n    const printComponentRef = useRef(null);\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <h2 className={classes.heading}>Thống kê doanh thu</h2>\n                <Form layout=\"inline\" onFinish={handleGenerateStatistic}>\n                    <Form.Item\n                        label=\"Xem thống kê theo khoảng ngày\"\n                        name=\"dateRange\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Xin hãy chọn khoảng để xem thống kê\",\n                            },\n                        ]}\n                    >\n                        <RangePicker />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Trích xuất\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </header>\n            <div className={classes.main}>\n                {(data && (\n                    <SmoothedLineChart\n                        title=\"Thống kê doanh thu\"\n                        option={option}\n                        width=\"100%\"\n                    />\n                )) || <Empty description={false} />}\n            </div>\n            {data && (\n                <footer className={classes.footer}>\n                    <ul className={classes.statisticList}>\n                        <li className={classes.statisticListItem}>\n                            <strong>Doanh thu nhỏ nhất: </strong>\n                            <span>{smallest?.amount} </span>\n                            đạt được vào ngày:\n                            <span> {smallest?.day}</span>\n                        </li>\n                        <li className={classes.statisticListItem}>\n                            <strong>Doanh thu lớn nhất: </strong>\n                            <span>{formatNumber(largest?.amount || \"\")} </span>\n                            đạt được vào ngày:\n                            <span> {largest?.day}</span>\n                        </li>\n                        <li className={classes.statisticListItem}>\n                            <strong>Tổng doanh thu : </strong>\n                            <span> {formatNumber(total)}</span>\n                        </li>\n                        <div className={classes.print}>\n                            <ReactToPrint\n                                trigger={() => (\n                                    <Button\n                                        type=\"primary\"\n                                        className={classes.pdfBtn}\n                                    >\n                                        Xuất PDF\n                                    </Button>\n                                )}\n                                content={() => printComponentRef.current}\n                            />\n                            <PrintPage ref={printComponentRef}>\n                                <RevenueReport\n                                    data={{\n                                        largest,\n                                        smallest,\n                                        total,\n                                    }}\n                                    option={option}\n                                    classes={classes}\n                                />\n                            </PrintPage>\n                        </div>\n                    </ul>\n                </footer>\n            )}\n        </div>\n    );\n};\n\nexport default RevenueStatistic;\n","import { useRevenue } from \"./useRevenue\";\n\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { iRevenueStatistic } from \"../../types/revenue.types\";\nimport { message } from \"antd\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that provides revenue statistic logic\n * @kind function.\n *\n *\n * @return {{\n * option: object,\n * data: iRevenueStatistic,\n * handleGenerateStatistic: func\n * }}\n *\n * */\n\nconst useRevenueStatistic = () => {\n    const [data, setData] = useState<iRevenueStatistic[] | null>(null);\n    const [option, setOption] = useState<any>(null);\n    const [largest, setLargest] =\n        useState<{\n            day: String | Date;\n            amount: Number;\n        } | null>(null);\n    const [smallest, setSmallest] =\n        useState<{\n            day: String | Date;\n            amount: Number;\n        } | null>(null);\n    const [total, setTotal] = useState<Number>(0);\n\n    const { fetchRevenuesInRange } = useRevenue();\n\n    const handleGenerateStatistic = async (values: any) => {\n        const dateFrom = moment(values.dateRange[0])\n            .toDate()\n            .toLocaleDateString();\n        const dateTo = moment(values.dateRange[1])\n            .toDate()\n            .toLocaleDateString();\n        const data = await fetchRevenuesInRange(dateFrom, dateTo);\n\n        if (data.status === 200) {\n            setData(data.data);\n            const allData = data.data;\n            const mappingData: any = {};\n            let tempLargest = {\n                day: new Date(),\n                amount: 0,\n            };\n            let tempSmallest = {\n                day: new Date(),\n                amount: Number.MAX_SAFE_INTEGER,\n            };\n\n            let sum = 0;\n\n            allData.forEach((data: any) => {\n                const { createdAt, total } = data;\n\n                if (total > tempLargest.amount) {\n                    tempLargest = {\n                        day: createdAt.toLocaleString(),\n                        amount: total,\n                    };\n                }\n\n                if (total < tempSmallest.amount) {\n                    tempSmallest = {\n                        day: createdAt.toLocaleString(),\n                        amount: total,\n                    };\n                }\n\n                sum += total;\n\n                if (mappingData.hasOwnProperty(createdAt)) {\n                    mappingData[createdAt] += total;\n                } else {\n                    mappingData[createdAt] = total;\n                }\n            });\n            const newOption = {\n                series: [\n                    {\n                        data: Object.entries(mappingData)\n                            .sort((a: any, b: any) => {\n                                return (\n                                    a &&\n                                    a[0] &&\n                                    b &&\n                                    b[0] &&\n                                    a[0].localeCompare(b[0])\n                                );\n                            })\n                            .map(([day, value]) => {\n                                return {\n                                    name: day,\n                                    value: [day, value],\n                                };\n                            }),\n                        type: \"line\",\n                        smooth: true,\n                    },\n                ],\n            };\n            setOption(newOption);\n            setTotal(sum);\n            setLargest(tempLargest);\n            setSmallest(tempSmallest);\n        } else {\n            message.error(\"Something went wrong. Please try again later\");\n        }\n    };\n\n    return {\n        data,\n        total,\n        option,\n        largest,\n        smallest,\n\n        handleGenerateStatistic,\n    };\n};\n\nexport { useRevenueStatistic };\n","import React from \"react\";\nimport { merge } from \"lodash\";\nimport ReactEcharts from \"echarts-for-react\";\n\ninterface Props {\n    title: string;\n    option?: object;\n    height?: number | string;\n    width?: number | string;\n    padding?: number | string;\n}\n\nconst PieChart = ({\n    title,\n    option = {},\n    height = 500,\n    width = 500,\n    padding = 0,\n}: Props) => {\n    const defaultOption = {\n        title: {\n            text: title,\n            left: \"center\",\n        },\n        tooltip: {\n            trigger: \"item\",\n        },\n        legend: {\n            orient: \"vertical\",\n            left: \"left\",\n        },\n    };\n\n    return (\n        <ReactEcharts\n            style={{ height, width, padding }}\n            option={merge({}, defaultOption, option)}\n        />\n    );\n};\n\nexport default PieChart;\n","import React from \"react\";\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\nimport defaultClasses from \"./expenseStatistic.module.css\";\nimport { Form, DatePicker, Button, Empty } from \"antd\";\nimport { useExpenseStatistic } from \"../../../talons/Expense/useExpenseStatistic\";\nimport SmoothedLineChart from \"../../CompareChart/SmoothedLineChart/SmoothedLineChart\";\nimport PieChart from \"../../CompareChart/PieChart\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst { RangePicker } = DatePicker;\n\nconst ExpenseStatistic = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const { data, optionByDate, optionByType, handleGenerateStatistic } =\n        useExpenseStatistic();\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <h2 className={classes.heading}>Thống kê chi phí </h2>\n\n                <Form layout=\"inline\" onFinish={handleGenerateStatistic}>\n                    <Form.Item\n                        label=\"Xem thống kê theo khoảng ngày\"\n                        name=\"dateRange\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Xin hãy chọn khoảng để xem thống kê\",\n                            },\n                        ]}\n                    >\n                        <RangePicker />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Xem thống kê\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </header>\n            {(data && (\n                <div className={classes.main}>\n                    <div className={classes.item}>\n                        <SmoothedLineChart\n                            title=\"Thống kê chi phí\"\n                            option={optionByDate}\n                            width={\"100%\"}\n                            padding=\"2rem\"\n                        />\n                    </div>\n                    <div className={classes.item}>\n                        <PieChart\n                            title=\"Thống kê theo loại chi phí\"\n                            option={optionByType}\n                            width={\"100%\"}\n                            padding=\"2rem\"\n                        />\n                    </div>\n                </div>\n            )) || <Empty description={false} />}\n        </div>\n    );\n};\n\nexport default ExpenseStatistic;\n","import { message } from \"antd\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { iExpenseStatisticByDate } from \"../../types/expense.types\";\nimport { useExpense } from \"./useExpense\";\n\nconst useExpenseStatistic = () => {\n    const [dataByDate, setDataByDate] =\n        useState<iExpenseStatisticByDate[] | null>(null);\n    const [optionByDate, setOptionByDate] = useState<any>(null);\n    const [optionByType, setOptionByType] = useState<any>(null);\n\n    const { fetchExpenseInRange } = useExpense({ type: \"BASE\" });\n\n    const handleGenerateStatistic = async (values: any) => {\n        const dateFrom = moment(values.dateRange[0])\n            .toDate()\n            .toLocaleDateString();\n        const dateTo = moment(values.dateRange[1])\n            .toDate()\n            .toLocaleDateString();\n        const data = await fetchExpenseInRange(dateFrom, dateTo);\n\n        if (data.status === 200) {\n            setDataByDate(data.data);\n            generateDateStatistic(data.data);\n            generateTypeStatistic(data.data);\n        } else {\n            message.error(\"Something went wrong. Please try again later\");\n        }\n    };\n\n    const generateDateStatistic = (data: any) => {\n        const allData = [...data];\n        const mappingData: any = {};\n        allData.forEach((data: any) => {\n            const { date, total } = data;\n            const createdAt = date.slice(0, 10);\n            if (mappingData.hasOwnProperty(createdAt)) {\n                mappingData[createdAt] += total;\n            } else {\n                mappingData[createdAt] = total;\n            }\n        });\n        const newOption = {\n            series: [\n                {\n                    data: Object.entries(mappingData)\n                        .sort((a: any, b: any) => {\n                            return a[0].localeCompare(b[0]);\n                        })\n                        .map(([day, value]) => {\n                            return {\n                                name: day,\n                                value: [day, value],\n                            };\n                        }),\n                    type: \"line\",\n                    smooth: true,\n                },\n            ],\n        };\n        setOptionByDate(newOption);\n    };\n\n    const generateTypeStatistic = (data: any) => {\n        const allData = [...data];\n        const mappingData: any = {\n            \"Mua sắm\": 0,\n            \"Trả lương\": 0,\n            \"Trang thiết bị\": 0,\n        };\n        allData.forEach((e: any) => {\n            let type = \"Mua sắm\";\n            if (e.hasOwnProperty(\"productID\")) type = \"Mua sắm\";\n            else if (e.hasOwnProperty(\"employeeID\")) type = \"Trả lương\";\n            else type = \"Trang thiết bị\";\n            mappingData[type] += e.total || 0;\n        });\n        const newOption = {\n            series: [\n                {\n                    type: \"pie\",\n                    radius: \"50%\",\n                    data: Object.entries(mappingData).map(([key, value]) => {\n                        return {\n                            name: key,\n                            value: value,\n                        };\n                    }),\n                    emphasis: {\n                        itemStyle: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: \"rgba(0, 0, 0, 0.5)\",\n                        },\n                    },\n                },\n            ],\n        };\n        setOptionByType(newOption);\n    };\n\n    return {\n        data: dataByDate,\n        optionByDate,\n        optionByType,\n        handleGenerateStatistic,\n    };\n};\n\nexport { useExpenseStatistic };\n","import React from \"react\";\nimport { formatNumber } from \"../../utils/helper\";\n\n// utils\nimport mergeClasses from \"../../utils/mergeClasses\";\n\n// styles\nimport defaultClasses from \"./dataView.module.css\";\n\n// state\n\ninterface Props {\n    classes?: object;\n    data: any;\n    params: any;\n    title: string;\n    onGoBack: () => void;\n    onGoToEdit: () => void;\n}\n\nconst DataView = ({\n    classes: propsClasses,\n    data,\n    title,\n    params,\n    onGoBack,\n    onGoToEdit,\n}: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    return (\n        <div className={classes.root}>\n            <h2 className={classes.heading}>{title}</h2>\n            <div className={classes.main}>\n                <ul className={classes.list}>\n                    {data &&\n                        Object.entries(data).map(([key, value], idx) => {\n                            let viewValue = value;\n\n                            if (key === \"password\" || !value) return null;\n\n                            if (typeof value === \"object\") {\n                                viewValue = (value as { id: number }).id;\n                            }\n\n                            if (typeof value === \"number\") {\n                                viewValue = formatNumber(viewValue);\n                            }\n\n                            return (\n                                <li\n                                    className={classes.item}\n                                    key={`${title}-${params?.id || \"\"}-${idx}`}\n                                >\n                                    <span className={classes.itemTitle}>\n                                        {key}\n                                    </span>\n                                    <span\n                                        className={classes.itemValue}\n                                    >{`${viewValue}`}</span>\n                                </li>\n                            );\n                        })}\n                </ul>\n                <div className={classes.footer}>\n                    <button className={classes.btn} onClick={onGoToEdit}>\n                        Edit\n                    </button>\n                    <button className={classes.btn} onClick={onGoBack}>\n                        Back\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DataView;\n","import React from \"react\";\n\n// talons\nimport { useRevenueView } from \"../../../talons/Revenue/useRevenueView\";\n\n// components\nimport DataView from \"../../DataView\";\n\nconst RevenueView = () => {\n    const { revenue, params, onGoBack, onGoToEdit } = useRevenueView();\n\n    return (\n        <DataView\n            data={revenue}\n            onGoBack={onGoBack}\n            onGoToEdit={onGoToEdit}\n            params={params}\n            title=\"Thông tin phiếu thu\"\n        />\n    );\n};\n\nexport default RevenueView;\n","import { message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { iRevenue } from \"../../types/revenue.types\";\nimport { useRevenue } from \"./useRevenue\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that contains bank account detail component\n *\n * @kind function.\n *\n * @return {{\n * params: any,\n * revenue: iRevenue,\n * onGoBack: func,\n * onGoToEdit: func,\n *}}\n * */\nconst useRevenueView = () => {\n    const history = useHistory();\n    const params: { id: string } = useParams();\n\n    const { fetchRevenue } = useRevenue();\n    const [revenue, setRevenue] = useState<iRevenue | any>(null);\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchRevenue();\n        }\n    }, [params.id]);\n\n    const handleFetchRevenue = async () => {\n        if (params?.id) {\n            const id = ~~params.id;\n            const data = await fetchRevenue(id);\n            if (!data) {\n                history.push(\"/revenue\");\n                message.error(\"Không tồn tại phiếu thu với id này\");\n            }\n            setRevenue(data);\n        }\n    };\n\n    const onGoBack = () => history.goBack();\n\n    const onGoToEdit = () => history.push(`/revenue/edit/${params.id}`);\n\n    return {\n        params,\n        revenue,\n\n        onGoBack,\n        onGoToEdit,\n    };\n};\n\nexport { useRevenueView };\n","import React from \"react\";\n\n// talons\nimport { useExpenseView } from \"../../../talons/Expense/useExpenseView\";\n\n// utils\nimport DataView from \"../../DataView\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst ExpenseView = ({ classes: propsClasses }: Props) => {\n    const { expense, params, onGoBack, onGoToEdit } = useExpenseView();\n\n    return (\n        <DataView\n            data={expense}\n            onGoBack={onGoBack}\n            onGoToEdit={onGoToEdit}\n            params={params}\n            title=\"Thông tin phiếu chi\"\n        />\n    );\n};\n\nexport default ExpenseView;\n","import { message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { iExpense } from \"../../types/expense.types\";\nimport { useExpense } from \"./useExpense\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that contains bank account detail component\n *\n * @kind function.\n *\n * @return {{\n * params: any,\n * revenue: iRevenue,\n * onGoBack: func,\n * onGoToEdit: func,\n *}}\n * */\nconst useExpenseView = () => {\n    const history = useHistory();\n    const params: { id: string } = useParams();\n\n    const { fetchExpense } = useExpense({ type: \"BASE\" });\n    const [expense, setExpense] = useState<iExpense | any>(null);\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchExpense();\n        }\n    }, [params.id]);\n\n    const handleFetchExpense = async () => {\n        if (params?.id) {\n            const id = ~~params.id;\n            const data = await fetchExpense(id);\n            if (!data) {\n                history.push(\"/expense\");\n                message.error(\"Không tồn tại phiếu thu với id này\");\n            }\n            setExpense(data);\n        }\n    };\n\n    const onGoBack = () => history.goBack();\n\n    const onGoToEdit = () => history.push(`/expense/edit/${params.id}`);\n\n    return {\n        params,\n        expense: expense,\n\n        onGoBack,\n        onGoToEdit,\n    };\n};\n\nexport { useExpenseView };\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that provides budget  logic\n *\n * @kind function.\n *\n * @return {{\n *}}\n * */\n\nimport { useData } from \"../common/useData\";\n\nconst BASE_BACKEND_URL = `${process.env.REACT_APP_API_LINK}/budget`;\n\nconst useBudget = () => {\n    const { fetchList, fetchOne, addOne, updateOne, deleteOne } = useData({\n        endpoint: \"/budget\",\n    });\n\n    const fetchBudgets = async () => {\n        const response = await fetchList();\n        return response;\n    };\n\n    const fetchBudget = async (budgetID: number) => {\n        const response = await fetchOne(budgetID);\n        return response.data;\n    };\n\n    const addBudget = async (data: any) => {\n        if (!data.managerID) {\n            data.managerID = 2;\n        }\n        const response = await addOne(data);\n        return response;\n    };\n\n    const updateBudget = async (data: any, budgetID: number) => {\n        if (!data.managerID) {\n            data.managerID = 2;\n        }\n        const response = await updateOne(budgetID, data);\n        return response;\n    };\n\n    const deleteBudget = async (budgetID: number) => {\n        const response = await deleteOne(budgetID);\n        return response;\n    };\n\n    const fetchBudgetInRange = async (dateFrom: String, dateTo: String) => {\n        const response = await fetch(\n            `${BASE_BACKEND_URL}/statistic?dayStart=${dateFrom}&dayEnd=${dateTo}`\n        );\n        const data = await response.json();\n        return data;\n    };\n\n    return {\n        addBudget,\n        fetchBudget,\n        fetchBudgets,\n        updateBudget,\n        deleteBudget,\n        fetchBudgetInRange,\n    };\n};\n\nexport { useBudget };\n","import React from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// talons\nimport { useBudgetList } from \"../../../talons/Budget/useBudgetList\";\n\n// components\nimport { Button, DatePicker, Form, Space, Table, Tag } from \"antd\";\n\n// icons\nimport { Delete, Edit3, Eye } from \"react-feather\";\n\n// types\nimport { iBankAccount } from \"../../../types/bankAccount.types\";\n\n// styles\nimport defaultClasses from \"./budgetList.module.css\";\nimport { formatNumber } from \"../../../utils/helper\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst BudgetList = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        data,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n    } = useBudgetList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: 150,\n        },\n        {\n            title: \"Tên\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 200,\n        },\n        {\n            title: \"Tháng\",\n            dataIndex: \"month\",\n            key: \"month\",\n            width: 200,\n        },\n        {\n            title: \"Năm\",\n            dataIndex: \"year\",\n            key: \"year\",\n            width: 200,\n        },\n        {\n            title: \"Mô tả\",\n            dataIndex: \"description\",\n            key: \"description\",\n            width: 250,\n            render: (record: string) => {\n                if (record.length > 50) return <p>{record.slice(0, 50)}...</p>;\n                return <p>{record}</p>;\n            },\n        },\n        {\n            title: \"Tổng tiền\",\n            dataIndex: \"total\",\n            key: \"total\",\n            width: 150,\n            render: (number: number) => {\n                return (\n                    <p\n                        style={{\n                            color: \"red\",\n                            fontWeight: \"bold\",\n                        }}\n                    >\n                        {formatNumber(number)}\n                    </p>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: any) => (\n                <Space size=\"middle\">\n                    <button className={cn(classes.btn, classes.view)}>\n                        <Link to={`/budget/view/${record.id}`}>\n                            <Eye />\n                        </Link>\n                    </button>\n                    <button className={cn(classes.btn, classes.edit)}>\n                        <Link to={`/budget/edit/${record.id}`}>\n                            <Edit3 />\n                        </Link>\n                    </button>\n                    <button\n                        className={cn(classes.btn, classes.delete)}\n                        onClick={() => onDelete(record.id)}\n                    >\n                        <Delete />\n                    </button>\n                </Space>\n            ),\n            width: 200,\n            fixed: \"right\" as \"right\",\n        },\n    ];\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Link to=\"/budget/add\">\n                    <Button type=\"primary\">Thêm mới</Button>\n                </Link>\n\n                <div className={classes.search}>\n                    <Form layout=\"inline\" onFinish={handleSearch}>\n                        <Form.Item label=\"Tìm kiếm theo ngày\" name=\"createdAt\">\n                            <DatePicker />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Tìm kiếm\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </header>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default BudgetList;\n","import { message, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { iBudget } from \"../../types/budget.types\";\nimport { useBudget } from \"./useBudget\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that provides budget list logic\n * @kind function.\n *\n *\n * @return {{\n * data: iBudget[]\n * }}\n *\n * */\nconst useBudgetList = () => {\n    const [data, setData] = useState<iBudget[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { fetchBudgets, deleteBudget } = useBudget();\n\n    useEffect(() => {\n        handleFetchBudgets();\n    }, []);\n\n    const handleFetchBudgets = async () => {\n        setLoading(true);\n        const data = await fetchBudgets();\n        setData(data.data);\n        setTotalNumber(data.data.length);\n        setLoading(false);\n    };\n\n    const handleSearch = () => {};\n\n    const onDelete = (budgetID: number) => {\n        Modal.confirm({\n            title: \"Xóa ngân sách này này?\",\n            content: `Bạn có chắc muốn xóa ngân sách này không? \n                Tất cả các báo cáo liên quan đến ngân sách này cũng sẽ bị xóa`,\n            okText: \"Xác nhận xóa\",\n            cancelText: \"Hủy\",\n            onOk: async () => {\n                const data = await deleteBudget(budgetID);\n                await handleFetchBudgets();\n                if (data.status === 200) {\n                    message.success(\"Xóa ngân sách thành công\");\n                } else {\n                    message.error(\"Đã xảy ra lỗi. Xin thử lại sau\");\n                }\n            },\n        });\n    };\n\n    return {\n        data,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n    };\n};\n\nexport { useBudgetList };\n","import React from \"react\";\n\n// talons\nimport { useBudgetForm } from \"../../../talons/Budget/useBudgetForm\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { DatePicker, Form, Input, InputNumber } from \"antd\";\n\n// types\nimport { FORM_TYPE } from \"../../../types/app.types\";\n\n// styles\nimport defaultClasses from \"./budgetForm.module.css\";\n\ninterface Props {\n    classes?: object;\n    view: FORM_TYPE;\n}\n\nconst BudgetForm = ({ classes: propsClasses, view }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const { form, budget, handleCancel, onSubmit, onChange } = useBudgetForm({\n        view,\n    });\n\n    let title = null;\n    let buttonText = null;\n\n    switch (view) {\n        case \"ADD\":\n            title = \"Thêm thông tin ngân sách\";\n            buttonText = \"Thêm\";\n            break;\n        case \"EDIT\":\n            title = \"Sửa thông tin ngân sách\";\n            buttonText = \"Lưu thông tin\";\n            break;\n        case \"VIEW\":\n            title = \"Thông tin chi tiết ngân sách\";\n            buttonText = \"Sửa\";\n            break;\n        default:\n            title = \"Thông tin ngân sách\";\n            buttonText = \"\";\n    }\n\n    return (\n        <div className={classes.root}>\n            <h2 className={classes.title}>{title}</h2>\n\n            <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={onSubmit}\n                onValuesChange={onChange}\n                form={form}\n                initialValues={budget || {}}\n                key={Math.random()}\n            >\n                <Form.Item\n                    label=\"Ngân sách cho tháng\"\n                    name=\"date\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập tháng cho ngân sách\",\n                        },\n                    ]}\n                >\n                    <DatePicker picker=\"month\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"Tên\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Mô tả\"\n                    name=\"description\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input description\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Tổng tiền\"\n                    name=\"total\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name for revenue\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>\n                <div className={classes.btnGroup}>\n                    <button type=\"submit\" className={classes.btn}>\n                        {buttonText}\n                    </button>\n                    <button className={classes.btn} onClick={handleCancel}>\n                        Hủy\n                    </button>\n                </div>\n            </Form>\n        </div>\n    );\n};\n\nexport default BudgetForm;\n","import { Form, message, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { TExpense } from \"../../types/expense.types\";\nimport { useBudget } from \"./useBudget\";\nimport moment from \"moment\";\n\nconst useBudgetForm = ({ view }: { view: FORM_TYPE }) => {\n    const [form] = Form.useForm();\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    const [type, setType] = useState<TExpense>(\"EMPLOYEE_SALARY\");\n    const [budget, setBudget] = useState<any | null>(null);\n\n    const { addBudget, fetchBudget, updateBudget } = useBudget();\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchBudget();\n        }\n    }, [params.id]);\n\n    const handleFetchBudget = async () => {\n        const id = params?.id && ~~params.id;\n        if (id === 0) return;\n        const data = await fetchBudget(~~id);\n        if (!data) {\n            history.push(\"/budget\");\n            message.error(\"Không tồn tại khoản chi với id này\");\n        }\n        form.setFieldsValue({\n            date: moment(\n                new Date(`${data.month}-01-${data.year}`).toLocaleDateString()\n            ),\n        });\n        setBudget(data);\n    };\n\n    const onSubmit = (values: any) => {\n        if (view === \"ADD\") {\n            handleAddBudget(values);\n        } else if (view === \"EDIT\") {\n            Modal.confirm({\n                title: \"Lưu\",\n                content: \"Bạn có chắc muốn lưu lại tất cả các thay đổi không ?\",\n                okText: \"Lưu\",\n                cancelText: \"Hủy\",\n                onOk: () => handleUpdateBudget(values),\n            });\n        } else {\n            history.push(`/budget/edit/${params.id}`);\n        }\n    };\n\n    const handleAddBudget = async (values: any) => {\n        const body = populateMonthAndYearToBody(values);\n        const response = await addBudget(body);\n        if (response.status === 201) {\n            message.success(\"Them moi thanh cong\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const handleUpdateBudget = async (values: any) => {\n        const body = populateMonthAndYearToBody(values);\n        try {\n            const response = await updateBudget(body, ~~params.id);\n            if (response.status === 200) {\n                message.success(\"Update thành công!\");\n            } else {\n                message.error(response.message);\n            }\n        } catch (error) {\n            message.error(\"Ngân sách cho tháng này đã tồn tại\");\n        }\n    };\n\n    const populateMonthAndYearToBody = (values: any) => {\n        const date = moment(values.date).toDate();\n        const month = date.getMonth() + 1;\n        const year = date.getFullYear();\n        values.month = month;\n        values.year = year;\n        return {\n            ...values,\n        };\n    };\n\n    const onChange = () => {};\n\n    const handleCancel = () => {\n        history.push(\"/budget\");\n    };\n\n    const handleChangeType = (value: TExpense) => {\n        setType(value);\n    };\n\n    return {\n        form,\n        type,\n        budget,\n        onSubmit,\n        onChange,\n        handleCancel,\n        handleChangeType,\n    };\n};\n\nexport { useBudgetForm };\n","import React from \"react\";\n\n// talons\nimport { useBudgetView } from \"../../../talons/Budget/useBudgetView\";\n\n// utils\nimport DataView from \"../../DataView\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst BudgetView = ({ classes: propsClasses }: Props) => {\n    const { budget, params, onGoBack, onGoToEdit } = useBudgetView();\n\n    return (\n        <DataView\n            data={budget}\n            onGoBack={onGoBack}\n            onGoToEdit={onGoToEdit}\n            params={params}\n            title=\"Thông tin phiếu chi\"\n        />\n    );\n};\n\nexport default BudgetView;\n","import { message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { iBudget } from \"../../types/budget.types\";\nimport { useBudget } from \"./useBudget\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that contains bank account detail component\n *\n * @kind function.\n *\n * @return {{\n * params: any,\n * revenue: iRevenue,\n * onGoBack: func,\n * onGoToEdit: func,\n *}}\n * */\n\nconst useBudgetView = () => {\n    const history = useHistory();\n    const params: { id: string } = useParams();\n\n    const { fetchBudget } = useBudget();\n    const [budget, setBudget] = useState<iBudget | any>(null);\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchExpense();\n        }\n    }, [params.id]);\n\n    const handleFetchExpense = async () => {\n        if (params?.id) {\n            const id = ~~params.id;\n            const data = await fetchBudget(id);\n            if (!data) {\n                history.push(\"/budget\");\n                message.error(\"Không tồn tại ngân sách với id này\");\n            }\n            setBudget(data);\n        }\n    };\n\n    const onGoBack = () => history.goBack();\n\n    const onGoToEdit = () => history.push(`/budget/edit/${params.id}`);\n\n    return {\n        params,\n        budget,\n\n        onGoBack,\n        onGoToEdit,\n    };\n};\n\nexport { useBudgetView };\n","import { TUser } from \"../../types/user.types\";\nimport { useData } from \"../common/useData\";\n\nconst useUser = ({ type = \"staff\" }: { type: TUser }) => {\n    let ADDITIONAL_ENDPOINT = \"/users\";\n\n    switch (type) {\n        case \"manager\":\n            ADDITIONAL_ENDPOINT = \"/users/manager\";\n            break;\n        case \"staff\":\n            ADDITIONAL_ENDPOINT = \"/users/staff\";\n            break;\n    }\n\n    const { addOne, deleteOne, fetchList, fetchOne, updateOne } = useData({\n        endpoint: \"/users\",\n        additionalEndpoint: ADDITIONAL_ENDPOINT,\n    });\n\n    const fetchUsers = async () => {\n        const response = await fetchList();\n        return response.data;\n    };\n\n    const fetchUser = async (userID: number) => {\n        const response = await fetchOne(userID);\n        return response.data;\n    };\n\n    const addUser = async (data: any) => {\n        const response = await addOne(data);\n        return response;\n    };\n\n    const updateUser = async (data: any, userID: number) => {\n        const response = await updateOne(userID, data);\n        return response;\n    };\n\n    const deleteUser = async (userID: number) => {\n        const response = await deleteOne(userID);\n        return response;\n    };\n\n    return {\n        addUser,\n        fetchUser,\n        fetchUsers,\n        updateUser,\n        deleteUser,\n    };\n};\n\nexport { useUser };\n","import React from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// talons\nimport { useUserList } from \"../../../talons/User/useUserList\";\n\n// components\nimport { Button, DatePicker, Form, Input, Space, Table, Tag } from \"antd\";\n\n// icons\nimport { Delete, Edit3, Eye } from \"react-feather\";\n\n// styles\nimport defaultClasses from \"./userList.module.css\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst UserList = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n    } = useUserList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: 150,\n        },\n        {\n            title: \"Tên\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 200,\n        },\n        {\n            title: \"Email\",\n            dataIndex: \"email\",\n            key: \"email\",\n            width: 200,\n        },\n        {\n            title: \"Username\",\n            dataIndex: \"username\",\n            key: \"username\",\n            width: 200,\n        },\n        {\n            title: \"Số điện thoại\",\n            dataIndex: \"phoneNumber\",\n            key: \"phoneNumber\",\n            width: 200,\n        },\n        {\n            title: \"Quyền\",\n            dataIndex: \"role\",\n            key: \"role\",\n            width: 150,\n            render: (role: any) => {\n                let color = \"volcano\";\n\n                switch (role) {\n                    case \"staff\":\n                        color = \"geekblue\";\n                        break;\n                    case \"manager\":\n                        color = \"green\";\n                        break;\n                }\n\n                return (\n                    <span>\n                        <Tag color={color}>{role}</Tag>\n                    </span>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: any) => (\n                <Space size=\"middle\">\n                    <button className={cn(classes.btn, classes.view)}>\n                        <Link to={`/user/view/${record.id}`}>\n                            <Eye />\n                        </Link>\n                    </button>\n                    <button className={cn(classes.btn, classes.edit)}>\n                        <Link to={`/user/edit/${record.id}`}>\n                            <Edit3 />\n                        </Link>\n                    </button>\n                    <button\n                        className={cn(classes.btn, classes.delete)}\n                        onClick={() => onDelete(record.id)}\n                    >\n                        <Delete />\n                    </button>\n                </Space>\n            ),\n            width: 200,\n            fixed: \"right\" as \"right\",\n        },\n    ];\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Link to=\"/user/add\">\n                    <Button type=\"primary\">Thêm mới</Button>\n                </Link>\n\n                <div className={classes.search}>\n                    <Form layout=\"inline\" onFinish={handleSearch}>\n                        <Form.Item label=\"Tìm kiếm theo tên\" name=\"name\">\n                            <Input />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Tìm kiếm\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </header>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: pageSize,\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default UserList;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { pageSizeState } from \"../../states/app.state\";\nimport { message, Modal } from \"antd\";\nimport { useUser } from \"./useUser\";\nimport { iUser } from \"../../types/user.types\";\n\nconst useUserList = () => {\n    const pageSize = useRecoilValue(pageSizeState);\n    const [pageNumber, setPageNumber] = useState<number>(1);\n    const [initialData, setInitialData] = useState<any[]>([]);\n    const [data, setData] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { fetchUsers, deleteUser } = useUser({ type: \"staff\" });\n\n    useEffect(() => {\n        handleFetchUsers();\n    }, []);\n\n    const handleFetchUsers = async (sortBy = 4, isAsc = true) => {\n        setLoading(true);\n        const data = await fetchUsers();\n        const filteredData =\n            data &&\n            data.length > 0 &&\n            data.filter((e: iUser) => e.role !== \"admin\");\n        setInitialData(filteredData);\n        setTotalNumber(filteredData.length);\n        setData(filteredData);\n        setLoading(false);\n    };\n\n    const handleSearch = async (values: any) => {\n        if (!values.name) {\n            setData(initialData);\n            setPageNumber(1);\n        } else {\n            const keyword = values.name.toLowerCase();\n            const searchData = initialData.filter((item: iUser) => {\n                return item.name.toLocaleLowerCase().includes(keyword);\n            });\n            setData(searchData);\n        }\n    };\n\n    const onDelete = (expenseID: number) => {\n        Modal.confirm({\n            title: \"Xóa người dùng này?\",\n            content: `Bạn có chắc muốn xóa người dùng này không? \n                Tất cả các tài liệu, thông tin liên quan đến người dùng này cũng sẽ bị xóa`,\n            okText: \"Xác nhận xóa\",\n            cancelText: \"Hủy\",\n            onOk: async () => {\n                const data = await deleteUser(expenseID);\n                setPageNumber(1);\n                await handleFetchUsers();\n                if (data.status === 200) {\n                    message.success(\"Xóa người dùng thành công\");\n                } else {\n                    message.error(\"Đã xảy ra lỗi. Xin thử lại sau\");\n                }\n            },\n        });\n    };\n\n    return {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n    };\n};\n\nexport { useUserList };\n","import React from \"react\";\n\n// talons\nimport { useUserForm } from \"../../../talons/User/useUserForm\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { Form, Input, InputNumber, Select } from \"antd\";\n\n// types\nimport { FORM_TYPE } from \"../../../types/app.types\";\n\n// styles\nimport defaultClasses from \"./userForm.module.css\";\n\ninterface Props {\n    classes?: object;\n    view: FORM_TYPE;\n}\n\nconst UserForm = ({ classes: propsClasses, view }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        form,\n        type,\n        user,\n        handleCancel,\n        onSubmit,\n        onChange,\n        handleChangeType,\n    } = useUserForm({\n        view,\n    });\n\n    let title = null;\n    let buttonText = null;\n\n    switch (view) {\n        case \"ADD\":\n            title = \"Thêm thông tin tài khoản\";\n            buttonText = \"Thêm\";\n            break;\n        case \"EDIT\":\n            title = \"Sửa thông tin tài khoản\";\n            buttonText = \"Lưu thông tin\";\n            break;\n    }\n\n    console.log(`type`, type);\n\n    return (\n        <div className={classes.root}>\n            <h2 className={classes.title}>{title}</h2>\n\n            <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={onSubmit}\n                onValuesChange={onChange}\n                form={form}\n                initialValues={user || {}}\n                key={Math.random()}\n            >\n                <Form.Item\n                    label=\"Tên người dùng\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập tên người dùng\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Tên tài khoản (username)\"\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập tên tài khoản\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                {view === \"ADD\" && (\n                    <React.Fragment>\n                        <Form.Item\n                            label=\"Mật khẩu\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Xin hãy nhập mật khẩu tài khoản\",\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Xác nhận mật khẩu\"\n                            name=\"passwordConfirm\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Xin hãy xác nhận mật khẩu\",\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </React.Fragment>\n                )}\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập email\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Số điện thoại\"\n                    name=\"phoneNumber\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập số điện thoại\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Quyền\" name=\"role\">\n                    <Select\n                        disabled={view !== \"ADD\"}\n                        defaultValue={type}\n                        onChange={handleChangeType}\n                    >\n                        <Select.Option value=\"staff\">Nhân viên</Select.Option>\n                        <Select.Option value=\"manager\">Quản lí</Select.Option>\n                    </Select>\n                </Form.Item>\n                {(type === \"staff\" && (\n                    <Form.Item\n                        label=\"Phòng ban\"\n                        name=\"department\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Xin hãy nhập phòng ban\",\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                )) || (\n                    <Form.Item\n                        label=\"Vị trí công tác\"\n                        name=\"position\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Xin hxay nhập vị trí công tác\",\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                )}\n                <div className={classes.btnGroup}>\n                    <button type=\"submit\" className={classes.btn}>\n                        {buttonText}\n                    </button>\n                    <button className={classes.btn} onClick={handleCancel}>\n                        Hủy\n                    </button>\n                </div>\n            </Form>\n        </div>\n    );\n};\n\nexport default UserForm;\n","import { Form, message, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { TUser } from \"../../types/user.types\";\nimport { useUser } from \"./useUser\";\n\nconst useUserForm = ({ view }: { view: FORM_TYPE }) => {\n    const [form] = Form.useForm();\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    const [type, setType] = useState<TUser>(\"staff\");\n    const [user, setUser] = useState<any | null>(null);\n\n    const { addUser, fetchUser, updateUser } = useUser({ type });\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchUser();\n        }\n    }, [params.id]);\n\n    const handleFetchUser = async () => {\n        const id = params?.id && ~~params.id;\n        if (id === 0) return;\n        const data = await fetchUser(~~id);\n        if (!data) {\n            history.push(\"/users\");\n            message.error(\"Không tồn tại người dùng với id này\");\n        }\n        setUser(data);\n        if (data.hasOwnProperty(\"department\")) setType(\"staff\");\n        else setType(\"manager\");\n    };\n\n    const onSubmit = (values: any) => {\n        if (view === \"ADD\") {\n            handleAddUser(values);\n        } else if (view === \"EDIT\") {\n            Modal.confirm({\n                title: \"Lưu\",\n                content: \"Bạn có chắc muốn lưu lại tất cả các thay đổi không ?\",\n                okText: \"Lưu\",\n                cancelText: \"Hủy\",\n                onOk: () => handleUpdateUser(values),\n            });\n        } else {\n            history.push(`/user/edit/${params.id}`);\n        }\n    };\n\n    const handleAddUser = async (values: any) => {\n        console.log(`values`, values);\n        if (values.password !== values.passwordConfirm) {\n            message.error(\"Mật khẩu không trùng khớp,  xin kiểm tra lại\");\n        } else {\n            const response = await addUser(values);\n            if (response.status === 201) {\n                message.success(\"Them moi thanh cong\");\n            } else {\n                message.error(response.message);\n            }\n        }\n    };\n\n    const handleUpdateUser = async (values: any) => {\n        const response = await updateUser(values, ~~params.id);\n        if (response.status === 200) {\n            message.success(\"Update thành công!\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const onChange = () => {};\n\n    const handleCancel = () => {\n        history.push(\"/users\");\n    };\n\n    const handleChangeType = (value: TUser) => {\n        setType(value);\n    };\n\n    return {\n        form,\n        type,\n        user,\n        onSubmit,\n        onChange,\n        handleCancel,\n        handleChangeType,\n    };\n};\n\nexport { useUserForm };\n","import React from \"react\";\n\n// talons\nimport { useUserView } from \"../../../talons/User/useUserView\";\n\n// utils\nimport DataView from \"../../DataView\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst UserView = ({ classes: propsClasses }: Props) => {\n    const { user, params, onGoBack, onGoToEdit } = useUserView();\n\n    return (\n        <DataView\n            data={user}\n            onGoBack={onGoBack}\n            onGoToEdit={onGoToEdit}\n            params={params}\n            title=\"Thông tin tài khoản\"\n        />\n    );\n};\n\nexport default UserView;\n","import { message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { iExpense } from \"../../types/expense.types\";\nimport { iUser } from \"../../types/user.types\";\nimport { useUser } from \"./useUser\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that contains bank account detail component\n *\n * @kind function.\n *\n * @return {{\n * params: any,\n * revenue: iRevenue,\n * onGoBack: func,\n * onGoToEdit: func,\n *}}\n * */\nconst useUserView = () => {\n    const history = useHistory();\n    const params: { id: string } = useParams();\n\n    const { fetchUser } = useUser({ type: \"staff\" });\n    const [user, setUser] = useState<iUser | any>(null);\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchUser();\n        }\n    }, [params.id]);\n\n    const handleFetchUser = async () => {\n        if (params?.id) {\n            const id = ~~params.id;\n            const data = await fetchUser(id);\n            if (!data) {\n                history.push(\"/users\");\n                message.error(\"Không tồn tại phiếu thu với id này\");\n            }\n            setUser(data);\n        }\n    };\n\n    const onGoBack = () => history.goBack();\n\n    const onGoToEdit = () => history.push(`/user/edit/${params.id}`);\n\n    return {\n        params,\n        user,\n\n        onGoBack,\n        onGoToEdit,\n    };\n};\n\nexport { useUserView };\n","import React from \"react\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// icons\nimport { ArrowDownOutlined, ArrowUpOutlined } from \"@ant-design/icons\";\n\n// styles\nimport defaultClasses from \"./overviewCard.module.css\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    classes?: object;\n    name: string;\n    number: number;\n    percent?: number;\n    isInc?: boolean;\n    icon?: any;\n    key?: any;\n}\n\nconst OverviewCard = ({\n    classes: propsClasses,\n    name,\n    number,\n    percent,\n    isInc,\n    icon,\n}: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n    return (\n        <article className={classes.root}>\n            <div className={classes.left}>\n                <h4 className={classes.name}>{name}</h4>\n                <p className={classes.number}>\n                    {`${number.toString()}`.replace(\n                        /\\B(?=(\\d{3})+(?!\\d))/g,\n                        \",\"\n                    )}\n                </p>\n                {percent && (\n                    <p\n                        className={classNames(classes.percent, {\n                            [classes.inc]: isInc,\n                        })}\n                    >\n                        ({isInc ? \"+\" : \"-\"} {percent}%){\" \"}\n                        {isInc ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\n                    </p>\n                )}\n            </div>\n            <div className={classes.right}>{icon}</div>\n        </article>\n    );\n};\n\nexport default OverviewCard;\n","import React from \"react\";\nimport { merge } from \"lodash\";\nimport ReactEcharts from \"echarts-for-react\";\n\ninterface Props {\n    title: string;\n    option?: object;\n    height?: number;\n    width?: number | string;\n    padding?: number | string;\n}\n\nconst FinancialChart = ({\n    title,\n    option = {},\n    height = 500,\n    width = 500,\n    padding = 0,\n}: Props) => {\n    const defaultOptions = {\n        title: {\n            text: title,\n        },\n        tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n                type: \"cross\",\n                crossStyle: {\n                    color: \"#999\",\n                },\n            },\n        },\n        toolbox: {\n            feature: {\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: [\"line\", \"bar\"] },\n                restore: { show: true },\n                saveAsImage: { show: true },\n            },\n        },\n        xAxis: [\n            {\n                type: \"category\",\n                data: [...Array(12)].map(\n                    (e, idx: number) => `Tháng ${idx + 1}`\n                ),\n                axisPointer: {\n                    type: \"shadow\",\n                },\n            },\n        ],\n        yAxis: [\n            {\n                type: \"value\",\n                name: \"VNĐ\",\n                min: 0,\n            },\n        ],\n    };\n\n    return (\n        <ReactEcharts\n            style={{ height, width, padding }}\n            option={merge({}, defaultOptions, option)}\n        />\n    );\n};\n\nexport default FinancialChart;\n","import React from \"react\";\nimport { merge } from \"lodash\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { formatNumber } from \"../../../utils/helper\";\n\ninterface Props {\n    title: string;\n    option?: object;\n    height?: number;\n    width?: number | string;\n    padding?: number | string;\n}\n\nconst ForecastChart = ({\n    title,\n    option = {},\n    height = 500,\n    width = 500,\n    padding = 0,\n}: Props) => {\n    const defaultOption = {\n        title: {\n            text: title,\n        },\n        tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n                // 坐标轴指示器，坐标轴触发有效\n                type: \"shadow\", // 默认为直线，可选为：'line' | 'shadow'\n            },\n            formatter: (params: any) => {\n                // console.log(`params`, params[0]);\n                return `${formatNumber(params[0].data)} VND`;\n            },\n        },\n        xAxis: {\n            data: [\"2022\", \"2023\"],\n            axisLabel: {\n                inside: true,\n                textStyle: {\n                    color: \"#fff\",\n                },\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLine: {\n                show: false,\n            },\n            z: 10,\n        },\n        yAxis: {\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                textStyle: {\n                    color: \"#999\",\n                },\n            },\n        },\n        dataZoom: [\n            {\n                type: \"inside\",\n            },\n        ],\n    };\n\n    return (\n        <ReactEcharts\n            key=\"theanhdz\"\n            style={{ height, width, padding }}\n            option={merge({}, defaultOption, option)}\n        />\n    );\n};\n\nexport default ForecastChart;\n","import React from \"react\";\n\n// talons\nimport { useFinancialForecasting } from \"../../talons/FinancialForecasting/useFinancialForecasting\";\n\n// utils\nimport mergeClasses from \"../../utils/mergeClasses\";\n\n// components\nimport { Table } from \"antd\";\nimport OverviewCard from \"../Cards/OverviewCard\";\nimport Loading from \"../Loading\";\n\n// classes\nimport defaultClasses from \"./financialForecasting.module.css\";\nimport FinancialChart from \"./FinancialChart/FinancialChart\";\nimport ForecastChart from \"./ForecastChart/ForecastChart\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst FinancialForecasting = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const { expenses, avgProfit, profits, revenues, forecastProfits } =\n        useFinancialForecasting();\n\n    if (\n        !revenues ||\n        !expenses ||\n        !profits ||\n        !revenues.length ||\n        !expenses.length ||\n        !profits.length\n    ) {\n        return <Loading />;\n    }\n\n    const totalExpense =\n        expenses?.length > 0 &&\n        expenses.reduce((res: number, curr: number) => (res += curr), 0);\n\n    const totalProfit =\n        profits?.length > 0 &&\n        profits.reduce((res: number, curr: number) => (res += curr), 0);\n\n    const totalRevenue =\n        revenues?.length > 0 &&\n        revenues.reduce((res: number, curr: number) => (res += curr), 0);\n\n    const financialOption = {\n        legend: {\n            data: [\"Doanh thu\", \"Chi phí\", \"Lợi nhuận\"],\n        },\n        series: [\n            {\n                name: \"Doanh thu\",\n                type: \"bar\",\n                data: revenues,\n            },\n            {\n                name: \"Chi phí\",\n                type: \"bar\",\n                data: expenses,\n            },\n            {\n                name: \"Lợi nhuận\",\n                type: \"line\",\n                data: profits,\n            },\n        ],\n    };\n\n    const forecastOption = {\n        series: [\n            {\n                type: \"bar\",\n                showBackground: true,\n                data: forecastProfits,\n            },\n        ],\n    };\n\n    return (\n        <section className={classes.root}>\n            <section className={classes.statistic}>\n                <OverviewCard name=\"Tổng Chi phí\" number={totalExpense || 0} />\n                <OverviewCard\n                    name=\"Tổng Doanh thu\"\n                    number={totalRevenue || 0}\n                />\n                <OverviewCard name=\"Tổng Lợi nhuận\" number={totalProfit || 0} />\n            </section>\n            <FinancialChart\n                title={`Thống kê chi phí, doanh thu và lợi nhuận năm ${new Date().getFullYear()}`}\n                option={financialOption}\n                width={\"100%\"}\n                padding=\"2rem\"\n            />\n            <p className={classes.summary}>\n                Tăng trưởng trung bình mỗi tháng của năm{\" \"}\n                {new Date().getFullYear()} là:\n                <span\n                    style={{\n                        color: avgProfit > 0 ? \"green\" : \"red\",\n                    }}\n                >\n                    {avgProfit} %\n                </span>\n            </p>\n            <section className={classes.forecast}>\n                <ForecastChart\n                    title=\"Dự đoán lợi nhuận 2 năm tới:\"\n                    option={forecastOption}\n                    width={1000}\n                />\n            </section>\n        </section>\n    );\n};\n\nexport default FinancialForecasting;\n","import { useExpense } from \"../Expense/useExpense\";\nimport { useRevenue } from \"../Revenue/useRevenue\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\n\nconst useFinancialForecasting = () => {\n    const [expenses, setExpenses] = useState<number[]>([]);\n    const [revenues, setRevenues] = useState<number[]>([]);\n    const [profits, setProfits] = useState<number[]>([]);\n    const [avgProfit, setAvgProfit] = useState<number>(0);\n    const [forecastProfits, setForecastProfits] = useState<number[]>([]);\n\n    const { fetchRevenuesInRange } = useRevenue();\n    const { fetchExpenseInRange } = useExpense({ type: \"BASE\" });\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    useEffect(() => {\n        if (profits?.length > 1) {\n            calcForecast();\n        }\n    }, [profits]);\n\n    const getTotal = (data: any): number =>\n        data?.reduce((prev: any, curr: any) => prev + curr.total, 0);\n\n    const getData = async () => {\n        const revenueArr: number[] = [...Array(12)].map(() => 0);\n        const expenseArr: number[] = [...Array(12)].map(() => 0);\n        const profitArr: number[] = [...Array(12)].map(() => 0);\n\n        await Promise.all(\n            [...Array(12)].map(async (e: any, monthNumber: number) => {\n                const month = `${monthNumber + 1 < 10 ? \"0\" : \"\"}${\n                    monthNumber + 1\n                }`;\n                const currentYear = new Date().getFullYear();\n                const dateFrom = moment(`${month}${currentYear}`, \"MMYYYY\")\n                    .toDate()\n                    .toLocaleDateString();\n                const dateTo = moment(dateFrom)\n                    .endOf(\"month\")\n                    .toDate()\n                    .toLocaleDateString();\n\n                const revenuesData = await fetchRevenuesInRange(\n                    dateFrom,\n                    dateTo\n                );\n                const expensesData = await fetchExpenseInRange(\n                    dateFrom,\n                    dateTo\n                );\n\n                const revenue = getTotal(revenuesData.data);\n                const expense = getTotal(expensesData.data);\n                const profit = revenue - expense;\n\n                revenueArr[monthNumber] = revenue;\n                expenseArr[monthNumber] = expense;\n                profitArr[monthNumber] = profit;\n            })\n        );\n\n        setExpenses(expenseArr);\n        setRevenues(revenueArr);\n        setProfits(profitArr);\n    };\n\n    const calcForecast = () => {\n        let calc: number = 0;\n        for (let idx = 1; idx <= Math.min(profits.length, 11); idx += 1) {\n            calc += (profits[idx] / Math.max(profits[idx - 1], 1)) * 100 - 100;\n        }\n        calc /= 11;\n        // round to 2 numbers after decimal\n        calc = Math.round(calc * 100) / 100;\n        setAvgProfit(calc);\n        let currProfit = profits.reduce(\n            (res: number, curr: number) => res + curr,\n            0\n        );\n        const futureProfits: number[] = [];\n\n        for (let idx = 0; idx < 2; idx += 1) {\n            currProfit *= (1 + calc/100);\n            futureProfits.push(currProfit);\n        }\n        setForecastProfits(futureProfits);\n    };\n\n    return {\n        expenses,\n        revenues,\n        profits,\n        avgProfit,\n        forecastProfits,\n    };\n};\n\nexport { useFinancialForecasting };\n","import React from \"react\";\n\n// Libs\nimport { Route, Switch } from \"react-router-dom\";\n\n// pages\nimport NotFound from \"../pages/NotFound\";\nimport Overview from \"../pages/Overview\";\nimport ReportList from \"../components/Report/ReportList\";\nimport PrivateRoute from \"../components/route/PrivateRoute\";\nimport RevenueList from \"../components/Revenue/RevenueList\";\nimport RevenueForm from \"../components/Revenue/RevenueForm\";\nimport ExpenseList from \"../components/Expense/ExpenseList\";\nimport ExpenseForm from \"../components/Expense/ExpenseForm\";\nimport ReportGenerator from \"../components/Report/ReportGenerator\";\nimport RevenueStatistic from \"../components/Revenue/RevenueStatistic\";\nimport ExpenseStatistic from \"../components/Expense/ExpenseStatistic\";\nimport RevenueView from \"../components/Revenue/RevenueView\";\nimport ExpenseView from \"../components/Expense/ExpenseView\";\nimport BudgetList from \"../components/Budget/BudgetList\";\nimport BudgetForm from \"../components/Budget/BudgetForm\";\nimport BudgetView from \"../components/Budget/BudgetView\";\nimport UserList from \"../components/User/UserList\";\nimport UserForm from \"../components/User/UserForm\";\nimport UserView from \"../components/User/UserView\";\nimport FinancialForecasting from \"../components/FinancialForecasting\";\n\nconst PrivateRoutesController = () => {\n    return (\n        <Switch>\n            <PrivateRoute exact path=\"/\" component={Overview} />\n\n            {/* ----------------- REVENUE ----------------------- */}\n\n            <PrivateRoute exact path=\"/revenue\" component={RevenueList} />\n            <PrivateRoute\n                exact\n                path=\"/revenue/add\"\n                component={() => <RevenueForm view=\"ADD\" />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/revenue/view/:id\"\n                component={() => <RevenueView />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/revenue/edit/:id\"\n                component={() => <RevenueForm view=\"EDIT\" />}\n            />\n\n            {/* ----------------- BUDGET ----------------------- */}\n\n            <PrivateRoute exact path=\"/budget\" component={BudgetList} />\n            <PrivateRoute\n                exact\n                path=\"/budget/add\"\n                component={() => <BudgetForm view=\"ADD\" />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/budget/view/:id\"\n                component={() => <BudgetView />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/budget/edit/:id\"\n                component={() => <BudgetForm view=\"EDIT\" />}\n            />\n\n            {/* ----------------- EXPENSE ----------------------- */}\n\n            <PrivateRoute exact path=\"/expense\" component={ExpenseList} />\n            <PrivateRoute\n                exact\n                path=\"/expense/add\"\n                component={() => <ExpenseForm view=\"ADD\" />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/expense/view/:id\"\n                component={() => <ExpenseView />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/expense/edit/:id\"\n                component={() => <ExpenseForm view=\"EDIT\" />}\n            />\n\n            {/* ----------------- REPORT ----------------------- */}\n\n            <PrivateRoute exact path=\"/report\" component={ReportList} />\n            <PrivateRoute path=\"/report/generate\" component={ReportGenerator} />\n            <PrivateRoute\n                path=\"/report/:id\"\n                component={() => <ReportGenerator view=\"VIEW\" />}\n            />\n\n            {/* ----------------- STATISTIC ----------------------- */}\n\n            <PrivateRoute\n                exact\n                path=\"/statistic/revenue\"\n                component={RevenueStatistic}\n            />\n            <PrivateRoute\n                exact\n                path=\"/statistic/expense\"\n                component={ExpenseStatistic}\n            />\n\n            {/* ----------------- USER ----------------------- */}\n            <PrivateRoute exact path=\"/users\" component={UserList} />\n            <PrivateRoute\n                exact\n                path=\"/user/add\"\n                component={() => <UserForm view=\"ADD\" />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/user/view/:id\"\n                component={() => <UserView />}\n            />\n            <PrivateRoute\n                exact\n                path=\"/user/edit/:id\"\n                component={() => <UserForm view=\"EDIT\" />}\n            />\n\n            {/* ---------------- FINANCIAL FORECASTING --------------- */}\n            <PrivateRoute\n                exact\n                path=\"/financialForecasting\"\n                component={() => <FinancialForecasting />}\n            />\n            <Route component={NotFound} />\n        </Switch>\n    );\n};\n\nexport default PrivateRoutesController;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router\";\nimport { useRecoilState } from \"recoil\";\n\n// utils\nimport client from \"./api/client\";\n\n// pages\nimport NotFound from \"./pages/NotFound\";\n\n// components\nimport Auth from \"./pages/Auth\";\nimport BaseView from \"./layout/BaseView\";\nimport Loading from \"./components/Loading\";\nimport PublicRoute from \"./components/route/PublicRoute\";\nimport PrivateRouteController from \"./routes/PrivateRouteController\";\n\n// states\nimport { userState } from \"./states/user.state\";\n\nconst App = () => {\n    const [user, setUser] = useRecoilState(userState);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    // router\n    const history = useHistory();\n\n    useEffect(() => {\n        const token =\n            localStorage.getItem(\"token\") &&\n            JSON.parse(localStorage.getItem(\"token\") || \"\");\n        if (token !== null) {\n            getUser();\n        } else {\n            setLoading(false);\n            history.push(\"/login\");\n        }\n    }, []);\n\n    const getUser = async () => {\n        const response = await client.get(\"/users/getMe\");\n        setUser(response.data.data);\n        setLoading(false);\n    };\n\n    if (loading) return <Loading />;\n\n    if (user) {\n        return <PrivateRouteController />;\n    }\n\n    return (\n        <React.Fragment>\n            <Switch>\n                <PublicRoute component={Auth} path=\"/login\" />\n                <Route component={NotFound} />\n            </Switch>\n        </React.Fragment>\n    );\n};\n\nexport default BaseView(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\n// styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"overview_root__3UApf\",\"overviewCards\":\"overview_overviewCards__f_Ac_\",\"title\":\"overview_title__1Tmhe\",\"compareRevenue\":\"overview_compareRevenue__1H5yz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"revenueList_root__2Lq5B\",\"header\":\"revenueList_header___gN_l\",\"btn\":\"revenueList_btn__ucx0H\",\"delete\":\"revenueList_delete__1SPK5\",\"view\":\"revenueList_view__J5V9X\",\"btnAdd\":\"revenueList_btnAdd__f3_GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"revenueForm_root__2QAdL\",\"title\":\"revenueForm_title__3v_Bq\",\"form\":\"revenueForm_form__1djWf\",\"btnGroup\":\"revenueForm_btnGroup__3wnS4\",\"btn\":\"revenueForm_btn__3ZG4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expenseList_root__3W-xz\",\"header\":\"expenseList_header__Q-cD_\",\"search\":\"expenseList_search__1eF4F\",\"btn\":\"expenseList_btn__16Z5d\",\"delete\":\"expenseList_delete__1hrE1\",\"view\":\"expenseList_view__2aQXh\",\"btnAdd\":\"expenseList_btnAdd__34SOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expenseForm_root__KKP6N\",\"title\":\"expenseForm_title__1uKcM\",\"form\":\"expenseForm_form__3RlaR\",\"btnGroup\":\"expenseForm_btnGroup__1hQ7n\",\"btn\":\"expenseForm_btn__UsAUt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"reportSummary_root__2HKyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summaryInfo\":\"reportDetail_summaryInfo__3IqnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"revenueStatistic_root__1LAOg\",\"header\":\"revenueStatistic_header__2ioPI\",\"heading\":\"revenueStatistic_heading__3ITZm\",\"main\":\"revenueStatistic_main__70mN5\",\"statisticList\":\"revenueStatistic_statisticList__3XnjC\",\"statisticListItem\":\"revenueStatistic_statisticListItem__2B0HC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expenseStatistic_root__gSt_9\",\"header\":\"expenseStatistic_header__yv-VI\",\"heading\":\"expenseStatistic_heading__3AjcV\",\"main\":\"expenseStatistic_main__2M0n7\",\"item\":\"expenseStatistic_item__3Vhz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"dataView_root__2KfzW\",\"main\":\"dataView_main__2x79m\",\"list\":\"dataView_list__1Jz4W\",\"heading\":\"dataView_heading__Fvvb-\",\"item\":\"dataView_item__10POO\",\"itemTitle\":\"dataView_itemTitle__1VABR\",\"itemValue\":\"dataView_itemValue__2x2Wo\",\"footer\":\"dataView_footer__qqdCE\",\"btn\":\"dataView_btn__xKXbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"budgetList_root__1DkcV\",\"header\":\"budgetList_header__R6eKr\",\"search\":\"budgetList_search__3yI76\",\"btn\":\"budgetList_btn__2Ynt5\",\"delete\":\"budgetList_delete__3Ecli\",\"view\":\"budgetList_view__3eOlH\",\"btnAdd\":\"budgetList_btnAdd__JQ79b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"budgetForm_root__1bmse\",\"title\":\"budgetForm_title__W3YGV\",\"form\":\"budgetForm_form__30Uvq\",\"btnGroup\":\"budgetForm_btnGroup__OTSvW\",\"btn\":\"budgetForm_btn__39EhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"userList_root__2A_ra\",\"header\":\"userList_header__20-dH\",\"search\":\"userList_search__1fOAu\",\"btn\":\"userList_btn__2yoHv\",\"delete\":\"userList_delete__gC2XI\",\"view\":\"userList_view__38GQa\",\"btnAdd\":\"userList_btnAdd__3ONRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"userForm_root__1hJpt\",\"title\":\"userForm_title__XAqwp\",\"form\":\"userForm_form__1jZb0\",\"btnGroup\":\"userForm_btnGroup__1t7rP\",\"btn\":\"userForm_btn__2Wj8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"overviewCard_root__3nv4G\",\"name\":\"overviewCard_name__C7zl-\",\"number\":\"overviewCard_number__YKwKa\",\"percent\":\"overviewCard_percent__1S19w\",\"inc\":\"overviewCard_inc__3RxeP\",\"right\":\"overviewCard_right__X6kpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"financialForecasting_statistic__3rsyR\",\"summary\":\"financialForecasting_summary__3Rm5Q\",\"forecast\":\"financialForecasting_forecast__3ZcS3\"};","export default __webpack_public_path__ + \"static/media/logo.be5418be.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"sidebar_root__JQqmx\",\"hide\":\"sidebar_hide__NVaH6\",\"mask\":\"sidebar_mask___0Hpp\",\"toggleBtn\":\"sidebar_toggleBtn__3bhUM\",\"LogoRoot\":\"sidebar_LogoRoot__3ARD6\",\"LogoImg\":\"sidebar_LogoImg__1qfKN\",\"item\":\"sidebar_item__K-CfW\",\"itemRoot\":\"sidebar_itemRoot__1yAE6\",\"itemName\":\"sidebar_itemName__3jLwq\",\"btn\":\"sidebar_btn__3fn7p\",\"itemActive\":\"sidebar_itemActive__3PDrn\",\"icon\":\"sidebar_icon__eLg9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expansionPanel_root__3mFNy\",\"panel\":\"expansionPanel_panel__RgL-l\",\"item\":\"expansionPanel_item__3XhTX\",\"icon\":\"expansionPanel_icon__WZBW-\",\"btn\":\"expansionPanel_btn__2A-eZ\",\"name\":\"expansionPanel_name__20FxX\",\"iconArrow\":\"expansionPanel_iconArrow__1uQ8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"reportGenerator_root__2i5YZ\",\"header\":\"reportGenerator_header__3CpZK\",\"main\":\"reportGenerator_main__3ZYf4\",\"staffInfo\":\"reportGenerator_staffInfo__2lirL\",\"summaryInfo\":\"reportGenerator_summaryInfo__3cdGf\",\"pdfBtn\":\"reportGenerator_pdfBtn__3Aely\"};"],"sourceRoot":""}