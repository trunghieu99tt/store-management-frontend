{"version":3,"sources":["pages/NotFound/notfound.module.css","components/User/UserLogo/userLogo.module.css","components/Print/PrintPage/printPage.module.css","pages/Auth/auth.module.css","layout/BaseView/baseView.module.css","components/Report/ReportDetail/reportDetail.module.css","layout/Header/header.module.css","components/Logo/Logo.module.css","components/Report/ReportList/reportList.module.css","components/Cards/OverviewCard/overviewCard.module.css","pages/Overview/overview.module.css","components/Revenue/RevenueList/revenueList.module.css","components/Revenue/RevenueForm/revenueForm.module.css","components/Revenue/RevenueStatistic/revenueStatistic.module.css","components/Expense/ExpenseList/expenseList.module.css","components/Expense/ExpenseForm/expenseForm.module.css","components/Expense/ExpenseStatistic/expenseStatistic.module.css","static/images/logo.jpg","utils/useLocalStorage.ts","utils/mergeClasses.ts","components/Cards/OverviewCard/OverviewCard.tsx","talons/common/useData.ts","talons/Revenue/useRevenue.ts","components/CompareChart/TwoLineCompare/TwoLinesCompare.tsx","talons/useCompareOverview.ts","components/CompareChart/RaceBar/RaceBar.tsx","pages/Overview/Overview.tsx","pages/NotFound/NotFound.tsx","states/app.state.ts","pages/Auth/Auth.tsx","layout/Footer/Footer.tsx","components/User/UserLogo/UserLogo.tsx","layout/Header/Header.tsx","layout/SideBar/ExpansionPanel/ExpansionPanel.tsx","components/Logo/Logo.tsx","layout/SideBar/SideBar.tsx","utils/useWindowSize.ts","layout/BaseView/BaseView.tsx","talons/Report/useReport.ts","components/Report/ReportList/ReportList.tsx","talons/Report/useReportList.ts","components/Revenue/RevenueList/RevenueList.tsx","talons/Revenue/useRevenueList.ts","components/Revenue/RevenueForm/RevenueForm.tsx","talons/Revenue/useRevenueForm.ts","components/Print/PrintPage/PrintPage.tsx","components/Report/ReportDetail/ReportDetail.tsx","components/Report/ReportGenerator/ReportGenerator.tsx","talons/Report/useGenerateReport.ts","components/CompareChart/SmoothedLineChart/SmoothedLineChart.tsx","components/Revenue/RevenueStatistic/RevenueStatistic.tsx","talons/Revenue/useRevenueStatistic.ts","talons/Expense/useExpense.ts","components/Expense/ExpenseList/ExpenseList.tsx","talons/Expense/useExpenseList.ts","components/Expense/ExpenseForm/ExpenseForm.tsx","talons/Expense/useExpenseForm.ts","components/CompareChart/PieChart/PieChart.tsx","components/Expense/ExpenseStatistic/ExpenseStatistic.tsx","talons/Expense/useExpenseStatistic.ts","App.tsx","reportWebVitals.ts","index.tsx","layout/SideBar/sidebar.module.css","layout/SideBar/ExpansionPanel/expansionPanel.module.css","components/Report/ReportGenerator/reportGenerator.module.css"],"names":["module","exports","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","mergeClasses","args","Object","assign","OverviewCard","propsClasses","classes","name","number","percent","isInc","icon","defaultClasses","className","root","left","toString","replace","classNames","inc","ArrowUpOutlined","ArrowDownOutlined","right","useData","backendURL","additionalBackendURL","fetchList","a","fetch","response","json","data","fetchOne","expenseID","addOne","method","body","headers","responseData","updateOne","id","deleteOne","BACKEND_URL","process","useRevenue","fetchRevenues","pageNumber","pageSize","day","sortBy","isAsc","fetchRevenuesInRange","dateFrom","dateTo","fetchRevenue","revenueID","fetch2NearestMonths","addRevenue","staffID","updateRevenue","deleteRevenue","TwoLinesCompare","option","setOption","loading","setLoading","parse2NearestMonthData","status","message","today","Date","currMonth","getMonth","currMonthData","Array","map","prevMonthData","forEach","createdAt","total","date","dayOfWeek","getDay","useCompareOverview","useEffect","parseData","tooltip","trigger","legend","grid","containLabel","toolbox","feature","saveAsImage","xAxis","type","yAxis","series","barGap","emphasis","focus","style","height","width","showLoading","RaceBar","props","dataset","source","visualMap","orient","min","max","text","dimension","inRange","color","encode","x","y","Overview","testData","StockOutlined","FundOutlined","DotChartOutlined","HeatMapOutlined","overviewCards","e","idx","compareRevenue","title","NotFound","main","headingContainer","heading","description","to","authState","atom","default","pageSizeState","layout","labelCol","span","wrapperCol","tailLayout","offset","USERNAME","REACT_APP_USERNAME","PASSWORD","REACT_APP_PASSWORD","Auth","useRecoilState","setAuth","user","setUser","failedCounter","setFailedCounter","fineTime","setFineTime","history","useHistory","push","handleLogin","values","username","password","success","onFinish","dateNow","Math","abs","getTime","onFinishFailed","errorInfo","form","Item","label","rules","required","Password","htmlType","Footer","UserLogo","showDropdown","setShowDropdown","useSetRecoilState","onClick","UserOutlined","cn","dropdown","active","btn","Header","ExpansionPanel","children","isActive","collapsed","setCollapsed","itemActive","iconArrow","panel","maxHeight","Logo","src","require","alt","img","SideBar","hide","setHide","navigation","DashboardOutlined","TransactionOutlined","path","RadarChartOutlined","LineChartOutlined","ContainerOutlined","DatabaseOutlined","FileAddOutlined","renderLevels","itemRoot","itemName","undefined","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Fragment","toggleBtn","MenuOutlined","mask","LogoRoot","LogoImg","BaseView","WrappedComponent","sidebar","useReport","fetchReports","fetchReport","getInformationForReport","generateReport","ReportList","useRecoilValue","setData","totalNumber","setTotalNumber","handleFetchReports","handleSearch","useReportList","columns","dataIndex","render","record","toLocaleDateString","size","header","dataSource","pagination","pageSizeOptions","scroll","RevenueList","setPageNumber","handleFetchRevenues","moment","toDate","handleSort","onDelete","Modal","confirm","content","okText","cancelText","onOk","handleChangeTable","filters","sorter","extra","field","order","current","useRevenueList","b","NaN","length","slice","accountNumber","danger","onChange","RevenueForm","view","propsView","Form","useForm","params","useParams","revenue","setRevenue","handleFetchRevenue","setFieldsValue","bankAccountNumber","bankAccount","handleAddRevenue","handleUpdateRevenue","onSubmit","handleCancel","useRevenueForm","buttonText","onValuesChange","initialValues","disabled","formatter","parser","btnGroup","random","PrintPage","this","printWrapper","footer","Component","ReportDetail","row","bordered","reportFrom","reportTo","summary","summaryInfo","expense","profit","staffInfo","staff","role","phoneNumber","department","email","RangePicker","DatePicker","ReportGenerator","customData","setCustomData","handleGetReport","parseFromReportToCustomReport","result","reportDate","expenses","revenues","tempRow","hasOwnProperty","entries","totalExpense","totalRevenue","sort","dateA","dateB","localeCompare","handleGetInfoForReport","dateRange","dataDTO","temp","handleGenerateReport","useGenerateReport","printComponentRef","useRef","defaultValue","print","pdfBtn","ref","SmoothedLineChart","padding","defaultOption","getDate","getFullYear","axisPointer","animation","splitLine","show","boundaryGap","dataZoom","filterMode","xAxisIndex","yAxisIndex","merge","RevenueStatistic","handleGenerateStatistic","allData","mappingData","newOption","smooth","useRevenueStatistic","BASE_BACKEND_URL","useExpense","fetchExpenses","fetchExpense","addExpense","updateExpense","deleteExpense","fetchExpenseInRange","ExpenseList","initialData","setInitialData","handleFetchExpenses","populateType","populatedData","searchData","filter","newData","useExpenseList","ExpenseForm","setType","setExpense","handleFetchExpense","handleAddExpense","handleUpdateExpense","handleChangeType","useExpenseForm","Option","PieChart","ExpenseStatistic","dataByDate","setDataByDate","optionByDate","setOptionByDate","optionByType","setOptionByType","generateDateStatistic","generateTypeStatistic","radius","itemStyle","shadowBlur","shadowOffsetX","shadowColor","useExpenseStatistic","auth","exact","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fa03507.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"notfound_root__1g4ot\",\"main\":\"notfound_main__33dfY\",\"headingContainer\":\"notfound_headingContainer__28ykm\",\"heading\":\"notfound_heading__1G0Z8\",\"description\":\"notfound_description__1Tlg4\",\"link\":\"notfound_link__DXQzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"userLogo_root__3OU-I\",\"icon\":\"userLogo_icon__2--Jt\",\"dropdown\":\"userLogo_dropdown__12J4t\",\"active\":\"userLogo_active__PfME8\",\"btn\":\"userLogo_btn__3njYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"printPage_header__3g8i-\",\"printWrapper\":\"printPage_printWrapper__VJkjr\",\"logo\":\"printPage_logo__N93Vj\",\"footer\":\"printPage_footer__1Tp0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"auth_root__3h_i-\",\"form\":\"auth_form__1gy8B\",\"title\":\"auth_title__1iBP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"baseView_root__3jlcB\",\"main\":\"baseView_main__171rY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summaryInfo\":\"reportDetail_summaryInfo__3IqnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"header_root__3QUlT\",\"right\":\"header_right__1BpIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Logo_root__32W_W\",\"img\":\"Logo_img__eyDaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"reportList_root__2P1Ry\",\"header\":\"reportList_header__2ZylN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"overviewCard_root__3nv4G\",\"name\":\"overviewCard_name__C7zl-\",\"number\":\"overviewCard_number__YKwKa\",\"percent\":\"overviewCard_percent__1S19w\",\"inc\":\"overviewCard_inc__3RxeP\",\"right\":\"overviewCard_right__X6kpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"overview_root__3UApf\",\"overviewCards\":\"overview_overviewCards__f_Ac_\",\"title\":\"overview_title__1Tmhe\",\"compareRevenue\":\"overview_compareRevenue__1H5yz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"revenueList_root__2Lq5B\",\"header\":\"revenueList_header___gN_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"revenueForm_root__2QAdL\",\"title\":\"revenueForm_title__3v_Bq\",\"btnGroup\":\"revenueForm_btnGroup__3wnS4\",\"btn\":\"revenueForm_btn__3ZG4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"revenueStatistic_root__1LAOg\",\"header\":\"revenueStatistic_header__2ioPI\",\"main\":\"revenueStatistic_main__70mN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expenseList_root__3W-xz\",\"header\":\"expenseList_header__Q-cD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expenseForm_root__KKP6N\",\"title\":\"expenseForm_title__1uKcM\",\"btnGroup\":\"expenseForm_btnGroup__1hQ7n\",\"btn\":\"expenseForm_btn__UsAUt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expenseStatistic_root__gSt_9\",\"header\":\"expenseStatistic_header__yv-VI\",\"main\":\"expenseStatistic_main__2M0n7\",\"item\":\"expenseStatistic_item__3Vhz4\"};","export default __webpack_public_path__ + \"static/media/logo.be5418be.jpg\";","import { useEffect, useState } from \"react\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * Hàm giúp quản lí data từ local storage\n * @kind function.\n *\n *\n * @return {{\n * storedValue: any,\n * setStoredValue: func\n * }}\n *\n * */\n\nconst useLocalStorage = (key: string, initialValue: any) => {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Lấy ra giá trị từ local storage theo key truyền vào\n            const item = window.localStorage.getItem(key);\n\n            // COnvert dữ liệu\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // Nếu không tồn tại object với thằng key truyền vào thì trả về giá trị ban đầu truyền vào\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Hàm  set giá trị mới cho object trong localstorage\n    const setValue = (value: any) => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n};\n\nexport { useLocalStorage };\n","const mergeClasses = (...args: any[]) => Object.assign({}, ...args);\n\nexport default mergeClasses;\n","import React from \"react\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// icons\nimport { ArrowDownOutlined, ArrowUpOutlined } from \"@ant-design/icons\";\n\n// styles\nimport defaultClasses from \"./overviewCard.module.css\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    classes?: object;\n    name: string;\n    number: number;\n    percent: number;\n    isInc: boolean;\n    icon: any;\n    key: any;\n}\n\nconst OverviewCard = ({\n    classes: propsClasses,\n    name,\n    number,\n    percent,\n    isInc,\n    icon,\n}: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n    return (\n        <article className={classes.root}>\n            <div className={classes.left}>\n                <h4 className={classes.name}>{name}</h4>\n                <p className={classes.number}>\n                    {`${number.toString()}`.replace(\n                        /\\B(?=(\\d{3})+(?!\\d))/g,\n                        \",\"\n                    )}\n                </p>\n                <p\n                    className={classNames(classes.percent, {\n                        [classes.inc]: isInc,\n                    })}\n                >\n                    ({isInc ? \"+\" : \"-\"} {percent}%){\" \"}\n                    {isInc ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\n                </p>\n            </div>\n            <div className={classes.right}>{icon}</div>\n        </article>\n    );\n};\n\nexport default OverviewCard;\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that contains data actions logic\n *\n * @kind function.\n *\n * @return {{\n * fetchOne: func,\n * fetchList: func,\n * addOne: func,\n * updateOne: func,\n * deleteOne: func,\n * }}\n */\n\ninterface Props {\n    backendURL: string;\n    additionalBackendURL?: string;\n}\n\nconst useData = ({ backendURL, additionalBackendURL }: Props) => {\n    const fetchList = async () => {\n        const response = await fetch(`${backendURL}`);\n        const data = await response.json();\n        return data;\n    };\n\n    const fetchOne = async (expenseID: number) => {\n        const response = await fetch(`${backendURL}/${expenseID}`);\n        const data = await response.json();\n        return data.data;\n    };\n\n    const addOne = async (data: any) => {\n        const response = await fetch(`${additionalBackendURL || backendURL}`, {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        const responseData = await response.json();\n        return responseData;\n    };\n\n    const updateOne = async (data: any, id: number) => {\n        const response = await fetch(\n            `${additionalBackendURL || backendURL}/${id}`,\n            {\n                method: \"PUT\",\n                body: JSON.stringify(data),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            }\n        );\n        const responseData = await response.json();\n        return responseData;\n    };\n\n    const deleteOne = async (id: number) => {\n        const response = await fetch(`${backendURL}/${id}`, {\n            method: \"DELETE\",\n        });\n        const data = await response.json();\n        return data;\n    };\n\n    return {\n        addOne,\n        fetchOne,\n        fetchList,\n        updateOne,\n        deleteOne,\n    };\n};\n\nexport { useData };\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that contains revenue actions logic\n *\n * @kind function.\n *\n * @return {{\n * fetchRevenues: string,\n * fetchRevenue: func,\n * updateRevenue: func,\n * addRevenue: func,\n * deleteRevenue: func,\n * fetch2NearestMonths: func,\n * fetchRevenuesInRange: func,\n *}}\n * */\n\nimport { useData } from \"../common/useData\";\n\nconst BACKEND_URL = `${process.env.REACT_APP_API_LINK}/revenue`;\n\nconst useRevenue = () => {\n    const { addOne, deleteOne, updateOne } = useData({\n        backendURL: BACKEND_URL,\n    });\n\n    const fetchRevenues = async (\n        pageNumber = 1,\n        pageSize = 10,\n        day: String | null,\n        sortBy = 4,\n        isAsc = true\n    ) => {\n        const response = await fetch(\n            `${BACKEND_URL}?pageSize=${pageSize}&pageNumber=${pageNumber}${\n                (day !== null && `&day=${day}`) || \"\"\n            }&sortBy=${sortBy}&isAsc=${isAsc}`\n        );\n        const data = await response.json();\n        return data;\n    };\n\n    const fetchRevenuesInRange = async (dateFrom: String, dateTo: String) => {\n        const response = await fetch(\n            `${BACKEND_URL}/statistic?dayStart=${dateFrom}&dayEnd=${dateTo}`\n        );\n        const data = await response.json();\n        return data;\n    };\n\n    const fetchRevenue = async (revenueID: number) => {\n        const response = await fetch(`${BACKEND_URL}/${revenueID}`);\n        const data = await response.json();\n        return data.data;\n    };\n\n    const fetch2NearestMonths = async () => {\n        const response = await fetch(`${BACKEND_URL}/get-2-nearest-months`);\n        const data = await response.json();\n        return data;\n    };\n\n    const addRevenue = async (data: any) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await addOne(data);\n        return response;\n    };\n\n    const updateRevenue = async (data: any, revenueID: number) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await updateOne(data, revenueID);\n        return response;\n    };\n\n    const deleteRevenue = async (revenueID: number) => {\n        const response = await deleteOne(revenueID);\n        return response;\n    };\n\n    return {\n        fetchRevenues,\n        fetchRevenue,\n        addRevenue,\n        deleteRevenue,\n        updateRevenue,\n        fetch2NearestMonths,\n        fetchRevenuesInRange,\n    };\n};\n\nexport { useRevenue };\n","import React, { useEffect, useState } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nimport classes from \"./twoLinesCompare.module.css\";\nimport { useCompareOverview } from \"../../../talons/useCompareOverview\";\n\nconst TwoLinesCompare = () => {\n    const [option, setOption] = useState<any>(null);\n\n    const { parse2NearestMonthData, loading } = useCompareOverview();\n\n    useEffect(() => {\n        parseData();\n    }, []);\n\n    const parseData = async () => {\n        const data = await parse2NearestMonthData();\n        if (!data) return;\n        const { currMonthData, prevMonthData } = data;\n        setOption({\n            tooltip: {\n                trigger: \"axis\",\n            },\n            legend: {\n                data: [\"Tháng trước\", \"Tháng hiện tại\"],\n            },\n            grid: {\n                left: \"3%\",\n                right: \"4%\",\n                containLabel: true,\n            },\n            toolbox: {\n                feature: {\n                    saveAsImage: {},\n                },\n            },\n            xAxis: {\n                type: \"category\",\n                data: [\n                    \"Thứ 2\",\n                    \"Thứ 3\",\n                    \"Thứ 4\",\n                    \"Thứ 5\",\n                    \"Thứ 6\",\n                    \"Thứ 7\",\n                    \"Chủ nhật\",\n                ],\n            },\n            yAxis: {\n                type: \"value\",\n            },\n            series: [\n                {\n                    name: \"Tháng trước\",\n                    type: \"line\",\n                    barGap: 0,\n                    emphasis: {\n                        focus: \"series\",\n                    },\n                    data: prevMonthData,\n                },\n                {\n                    name: \"Tháng hiện tại\",\n                    type: \"line\",\n                    barGap: 0,\n                    emphasis: {\n                        focus: \"series\",\n                    },\n                    data: currMonthData,\n                },\n            ],\n        });\n    };\n\n    return (\n        <div className={classes.root}>\n            <ReactEcharts\n                style={{ height: 500, width: \"100%\" }}\n                option={option || {}}\n                showLoading={loading}\n            />\n        </div>\n    );\n};\n\nexport default TwoLinesCompare;\n","import { message } from \"antd\";\nimport { useState } from \"react\";\nimport { iRevenue } from \"../types/revenue.types\";\nimport { useRevenue } from \"./Revenue/useRevenue\";\n\nconst useCompareOverview = () => {\n    const { fetch2NearestMonths } = useRevenue();\n\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const parse2NearestMonthData = async () => {\n        setLoading(true);\n        const response = await fetch2NearestMonths();\n        setLoading(false);\n        if (response.status !== 200) {\n            message.error(\"Fetching Error\");\n        } else {\n            const data = response.data;\n            const today = new Date();\n            const currMonth = today.getMonth();\n            const currMonthData = [...Array(7)].map(() => 0);\n            const prevMonthData = [...Array(7)].map(() => 0);\n            data.forEach((item: iRevenue) => {\n                const { createdAt, total } = item;\n                const date = new Date(createdAt);\n                const dayOfWeek = date.getDay();\n                if (date.getMonth() === currMonth) {\n                    currMonthData[dayOfWeek] += total;\n                } else {\n                    prevMonthData[dayOfWeek] += total;\n                }\n            });\n\n            return {\n                currMonthData: currMonthData,\n                prevMonthData: prevMonthData,\n            };\n        }\n    };\n\n    return { loading, parse2NearestMonthData };\n};\n\nexport { useCompareOverview };\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nimport classes from \"./raceBar.module.css\";\n\ninterface Props {}\n\nconst RaceBar = (props: Props) => {\n    const option = {\n        dataset: {\n            source: [\n                [\"score\", \"amount\", \"product\"],\n                [89.3, 58212, \"Matcha Latte\"],\n                [57.1, 78254, \"Milk Tea\"],\n                [74.4, 41032, \"Cheese Cocoa\"],\n                [50.1, 12755, \"Cheese Brownie\"],\n                [89.7, 20145, \"Matcha Cocoa\"],\n                [68.1, 79146, \"Tea\"],\n                [19.6, 91852, \"Orange Juice\"],\n                [10.6, 101852, \"Lemon Juice\"],\n                [32.7, 20112, \"Walnut Brownie\"],\n            ],\n        },\n        grid: { containLabel: true },\n        xAxis: { name: \"amount\" },\n        yAxis: { type: \"category\" },\n        visualMap: {\n            orient: \"horizontal\",\n            left: \"center\",\n            min: 10,\n            max: 100,\n            text: [\"High Score\", \"Low Score\"],\n            // Map the score column to color\n            dimension: 0,\n            inRange: {\n                color: [\"#65B581\", \"#FFCE34\", \"#FD665F\"],\n            },\n        },\n        series: [\n            {\n                type: \"bar\",\n                encode: {\n                    // Map the \"amount\" column to X axis.\n                    x: \"amount\",\n                    // Map the \"product\" column to Y axis\n                    y: \"product\",\n                },\n            },\n        ],\n    };\n\n    return (\n        <div className={classes.root}>\n            <ReactEcharts\n                style={{ height: 500, width: \"100%\" }}\n                option={option}\n            />\n        </div>\n    );\n};\n\nexport default RaceBar;\n","import React from \"react\";\n\n// components\nimport OverviewCard from \"../../components/Cards/OverviewCard/OverviewCard\";\nimport TwoLinesCompare from \"../../components/CompareChart/TwoLineCompare\";\n\n// utils\nimport mergeClasses from \"../../utils/mergeClasses\";\n\n// icons\nimport {\n    DotChartOutlined,\n    FundOutlined,\n    HeatMapOutlined,\n    StockOutlined,\n} from \"@ant-design/icons\";\n\n// styles\nimport defaultClasses from \"./overview.module.css\";\nimport RaceBar from \"../../components/CompareChart/RaceBar\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst Overview = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const testData = [\n        {\n            name: \"Doanh thu\",\n            isInc: true,\n            icon: <StockOutlined />,\n            number: 19858890,\n            percent: 0.36,\n        },\n\n        {\n            name: \"Lợi nhuận\",\n            isInc: false,\n            icon: <FundOutlined />,\n            number: 2858890,\n            percent: 1.36,\n        },\n\n        {\n            name: \"Sản lượng\",\n            isInc: true,\n            icon: <DotChartOutlined />,\n            number: 1820,\n            percent: 50.2,\n        },\n\n        {\n            name: \"Tỷ suất lợi nhuận\",\n            isInc: true,\n            icon: <HeatMapOutlined />,\n            number: 86.3,\n            percent: 12.5,\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <section className={classes.overviewCards}>\n                {testData.map((e, idx) => {\n                    return <OverviewCard {...e} key={idx} />;\n                })}\n            </section>\n\n            <section className={classes.compareRevenue}>\n                <div>\n                    <h4 className={classes.title}>\n                        Thống kê doanh thu tháng trước và tháng hiện tại\n                    </h4>\n                    <TwoLinesCompare />\n                </div>\n                <RaceBar />\n            </section>\n        </div>\n    );\n};\n\nexport default Overview;\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./notfound.module.css\";\n\nconst NotFound = () => {\n    return (\n        <div className={classes.root}>\n            <div className={classes.main}>\n                <div className={classes.headingContainer}>\n                    <h1 className={classes.heading}>\n                        4<span>0</span>4\n                    </h1>\n                </div>\n                <p className={classes.description}>\n                    Không tìm thấy trang yêu cầu.\n                </p>\n                <Link to=\"/\">\n                    <Button type=\"primary\">Quay về trang chủ</Button>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import { atom } from \"recoil\";\nimport { iStudent } from \"../types/app.types\";\n\nexport const authState = atom<boolean>({\n    key: \"authState\",\n    default: false,\n});\n\nexport const studentState = atom<iStudent[]>({\n    key: \"studentState\",\n    default: [],\n});\n\nexport const pageSizeState = atom<number>({\n    key: \"pageSizeState\",\n    default: 10,\n});\n","import React, { useEffect, useState } from \"react\";\n\n// talons\nimport { useRecoilState } from \"recoil\";\nimport { useHistory } from \"react-router\";\n\n// components\nimport { Form, Input, Button, message } from \"antd\";\n\n// styles\nimport classes from \"./auth.module.css\";\n\n// states\nimport { authState } from \"../../states/app.state\";\nimport { useLocalStorage } from \"../../utils/useLocalStorage\";\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\ninterface iLoginForm {\n    username: string;\n    password: string;\n}\n\nconst USERNAME = process.env.REACT_APP_USERNAME;\nconst PASSWORD = process.env.REACT_APP_PASSWORD;\n\nconst Auth = () => {\n    const [auth, setAuth] = useRecoilState(authState);\n    const [user, setUser] = useLocalStorage(\"user\", false);\n    const [failedCounter, setFailedCounter] = useState<number>(0);\n    const [fineTime, setFineTime] = useState<Date | null>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (user) history.push(\"/\");\n    }, []);\n\n    const onFinish = (values: iLoginForm) => {\n        if (fineTime) {\n            const dateNow = new Date();\n            const diffTime = Math.abs(dateNow.getTime() - fineTime.getTime());\n            if (diffTime / 1000 >= 5 * 60) {\n                handleLogin(values);\n            } else {\n                message.error(\n                    \"Bạn đã nhập sai thông tin quá nhiều, xin chờ ít nhất 5 phút và thử lại\"\n                );\n            }\n        } else {\n            handleLogin(values);\n        }\n    };\n\n    const handleLogin = (values: iLoginForm) => {\n        const { username, password } = values;\n\n        if (username === USERNAME && password === PASSWORD) {\n            message.success(\"Đăng nhập thành công\");\n            setAuth(true);\n            history.push(\"/\");\n            setUser(true);\n        } else {\n            message.error(\"Thông tin đăng nhập không chính xác\");\n            setFailedCounter((value) => value + 1);\n            if (failedCounter >= 5) {\n                setFineTime(new Date());\n                setFailedCounter(0);\n            }\n        }\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        message.error(\"Error\");\n    };\n\n    return (\n        <div className={classes.root}>\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                className={classes.form}\n            >\n                <h2 className={classes.title}>Đăng nhập</h2>\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập username\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập password!\",\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default Auth;\n","import React from \"react\";\n\ninterface Props {}\n\nconst Footer = (props: Props) => {\n    return <div></div>;\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport cn from \"classnames\";\n\n// talons\nimport { useHistory } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport { useLocalStorage } from \"../../../utils/useLocalStorage\";\n\n// icons\nimport { UserOutlined } from \"@ant-design/icons\";\n\n// styles\nimport classes from \"./userLogo.module.css\";\n\n// states\nimport { authState } from \"../../../states/app.state\";\n\nconst UserLogo = () => {\n    const [showDropdown, setShowDropdown] = useState(false);\n    const setAuth = useSetRecoilState(authState);\n    const [, setUser] = useLocalStorage(\"user\", false);\n    const history = useHistory();\n\n    return (\n        <div className={classes.root}>\n            <button\n                className={classes.icon}\n                onClick={() => setShowDropdown((value) => !value)}\n            >\n                <UserOutlined />\n            </button>\n\n            <div\n                className={cn(classes.dropdown, {\n                    [classes.active]: showDropdown,\n                })}\n            >\n                <button\n                    className={classes.btn}\n                    onClick={() => {\n                        setAuth(false);\n                        setUser(false);\n                        history.push(\"/auth\");\n                    }}\n                >\n                    Logout\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default UserLogo;\n","import React from \"react\";\nimport UserLogo from \"../../components/User/UserLogo\";\n\nimport classes from \"./header.module.css\";\n\ninterface Props {}\n\nconst Header = (props: Props) => {\n    return (\n        <header className={classes.root}>\n            <div className={classes.right}>\n                <UserLogo />\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport cn from \"classnames\";\n\n// icons\nimport { ChevronDown, ChevronRight } from \"react-feather\";\n// styles\nimport classes from \"./expansionPanel.module.css\";\nimport { SideBarItemType } from \"../SideBar\";\n\n// types\n\ninterface Props {\n    key: any;\n    children: any;\n    classes?: object;\n    isActive: boolean;\n    item: SideBarItemType;\n}\n\nconst ExpansionPanel = ({\n    item,\n    classes: propsClasses,\n    children,\n    isActive,\n}: Props) => {\n    const [collapsed, setCollapsed] = useState<boolean>(true);\n\n    const handleToggleCollapse = () => setCollapsed((value) => !value);\n\n    return (\n        <div className={classes.root}>\n            <button\n                onClick={handleToggleCollapse}\n                className={cn(classes.btn, {\n                    [classes.itemActive]: isActive,\n                })}\n            >\n                <div className={classes.item}>\n                    {item?.icon && (\n                        <div className={classes.icon}>{item.icon}</div>\n                    )}\n                    <p className={classes.name}>{item?.name}</p>\n                    {(collapsed && (\n                        <ChevronRight className={classes.iconArrow} />\n                    )) || <ChevronDown className={classes.iconArrow} />}\n                </div>\n            </button>\n\n            <div\n                className={classes.panel}\n                style={{\n                    maxHeight: collapsed ? \"0px\" : \"1000px\",\n                }}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default ExpansionPanel;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// styles\nimport classes from \"./Logo.module.css\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst Logo = ({ classes: propsClasses }: Props) => {\n    return (\n        <figure className={classes.root}>\n            <Link to=\"/\">\n                <img\n                    src={require(\"../../static/images/logo.jpg\").default}\n                    alt=\"logo\"\n                    width={150}\n                    height={50}\n                    className={classes.img}\n                />\n            </Link>\n        </figure>\n        // <div className={classes.root}>SMA</div>\n    );\n};\nexport default Logo;\n","import React, { useState } from \"react\";\nimport cn from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\n// talons\nimport { useWindowSize } from \"../../utils/useWindowSize\";\n\n// components\nimport ExpansionPanel from \"./ExpansionPanel\";\n\n// styles\nimport classes from \"./sidebar.module.css\";\n\nimport {\n    ContainerOutlined,\n    DashboardOutlined,\n    DatabaseOutlined,\n    FileAddOutlined,\n    LineChartOutlined,\n    MenuOutlined,\n    RadarChartOutlined,\n    TransactionOutlined,\n    UserOutlined,\n} from \"@ant-design/icons\";\n\nimport Logo from \"../../components/Logo\";\n\n// types\nimport { Size } from \"../../types/app.types\";\n\ninterface Props {\n    classes?: object;\n}\n\nexport type SideBarItemType = {\n    name: string;\n    path?: string;\n    icon?: any;\n    children?: SideBarItemType[];\n};\n\nconst SideBar = ({ classes: propsClasses }: Props) => {\n    const [hide, setHide] = useState<boolean>(true);\n\n    const navigation = [\n        {\n            name: \"Quản lí thu chi\",\n            icon: <DashboardOutlined />,\n            children: [\n                {\n                    name: \"Quản lí thu\",\n                    icon: <TransactionOutlined />,\n                    path: \"revenue\",\n                },\n                {\n                    name: \"Quản lí chi\",\n                    icon: <TransactionOutlined />,\n                    path: \"expense\",\n                },\n            ],\n        },\n        {\n            name: \"Thống kê tài chính\",\n            icon: <RadarChartOutlined />,\n            children: [\n                {\n                    name: \"Thống kê theo doanh thu\",\n                    icon: <LineChartOutlined />,\n                    path: \"statistic/revenue\",\n                },\n                {\n                    name: \"Thống kê theo chi phí\",\n                    icon: <LineChartOutlined />,\n                    path: \"statistic/expense\",\n                },\n            ],\n        },\n        {\n            name: \"Báo cáo\",\n            icon: <ContainerOutlined />,\n            children: [\n                {\n                    name: \"Danh sách báo cáo\",\n                    icon: <DatabaseOutlined />,\n                    path: \"report\",\n                },\n                {\n                    name: \"Tạo báo cáo\",\n                    icon: <FileAddOutlined />,\n                    path: \"report/generate\",\n                },\n            ],\n        },\n        {\n            name: \"Quản lí người dùng\",\n            icon: <UserOutlined />,\n            path: \"users\",\n        },\n    ];\n\n    const renderLevels = (data: SideBarItemType[]) => {\n        return data.map((item, idx) => {\n            const isActive = false;\n\n            if (item.children) {\n                return (\n                    <ExpansionPanel\n                        item={item}\n                        key={idx}\n                        isActive={isActive}\n                        classes={{\n                            itemActive: classes.itemActive,\n                            item: classes.item,\n                        }}\n                    >\n                        {renderLevels(item.children)}\n                    </ExpansionPanel>\n                );\n            }\n            return (\n                <Link to={`/${item.path}`}>\n                    <button\n                        key={item.name}\n                        name=\"child\"\n                        className={cn(classes.btn, classes.itemRoot, {\n                            [classes.itemActive]: isActive,\n                        })}\n                    >\n                        <div className={classes.item}>\n                            {item.icon}\n                            <span className={classes.itemName}>\n                                {item.name}\n                            </span>\n                        </div>\n                    </button>\n                </Link>\n            );\n        });\n    };\n\n    const size: Size = useWindowSize();\n\n    const { width } = size || {};\n\n    if (width && width <= 1024) {\n        return (\n            <React.Fragment>\n                <button\n                    className={classes.toggleBtn}\n                    onClick={() => setHide((value) => !value)}\n                >\n                    {(hide && <MenuOutlined />) || \"X\"}\n                </button>\n                {!hide && (\n                    <div\n                        className={classes.mask}\n                        onClick={() => setHide(true)}\n                    ></div>\n                )}\n                <div\n                    className={cn(classes.root, {\n                        [classes.hide]: hide,\n                    })}\n                >\n                    <Logo\n                        classes={{\n                            root: classes.LogoRoot,\n                            img: classes.LogoImg,\n                        }}\n                    />\n                    {renderLevels(navigation)}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div className={classes.root}>\n            <Logo\n                classes={{\n                    root: classes.LogoRoot,\n                    img: classes.LogoImg,\n                }}\n            />\n            {renderLevels(navigation)}\n        </div>\n    );\n};\n\nexport default SideBar;\n","import { useEffect, useState } from \"react\";\nimport { Size } from \"../types/app.types\";\n\n/**\n * Hàm trả về kích thước của cửa sổ hiện tại\n */\nfunction useWindowSize(): Size {\n    const [windowSize, setWindowSize] = useState<Size>({\n        width: undefined,\n        height: undefined,\n    });\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    return windowSize;\n}\n\nexport { useWindowSize };\n","import React from \"react\";\n\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\nimport SideBar from \"../SideBar\";\n\nimport classes from \"./baseView.module.css\";\n\nconst BaseView = <P extends object>(\n    WrappedComponent: React.ComponentType<P>\n) => (props: P) => {\n    return (\n        <section className={classes.root}>\n            <aside className={classes.sidebar}>\n                <SideBar />\n            </aside>\n            <main className={classes.main}>\n                <Header />\n                <WrappedComponent {...props} />\n                <Footer />\n            </main>\n        </section>\n    );\n};\n\nexport default BaseView;\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that provides report action logic\n * @kind function.\n *\n *\n * @return {{\n * fetchReport: func,\n * fetchReports: func,\n * generateReport: func,\n * getInformationForReport: func\n * }}\n *\n * */\n\nconst BACKEND_URL = `${process.env.REACT_APP_API_LINK}/report`;\n\nconst useReport = () => {\n    const fetchReports = async (pageNumber = 1, pageSize = 10) => {\n        const response = await fetch(\n            `${BACKEND_URL}?pageSize=${pageSize}&pageNumber=${pageNumber}`\n        );\n        const data = await response.json();\n        return data;\n    };\n\n    const fetchReport = async (id: number) => {\n        const response = await fetch(`${BACKEND_URL}/${id}`);\n        const data = await response.json();\n        return data;\n    };\n\n    const getInformationForReport = async (data: any) => {\n        const { dateFrom, dateTo, staffID } = data;\n        const response = await fetch(\n            `${BACKEND_URL}/generate?dateFrom=${dateFrom}&dateTo=${dateTo}&staffID=${staffID}`\n        );\n        const responseData = await response.json();\n        return responseData;\n    };\n\n    const generateReport = async (data: any) => {\n        const response = await fetch(`${BACKEND_URL}/generate`, {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        const responseData = await response.json();\n        return responseData;\n    };\n\n    return {\n        fetchReport,\n        fetchReports,\n        generateReport,\n        getInformationForReport,\n    };\n};\n\nexport { useReport };\n","import { Button, DatePicker, Form, Space, Table } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useReportList } from \"../../../talons/Report/useReportList\";\nimport { iCustomReport } from \"../../../types/report.types\";\nimport { iStaff } from \"../../../types/user.types\";\n\nimport classes from \"./reportList.module.css\";\n\ninterface Props {}\n\nconst ReportList = (props: Props) => {\n    const {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n        handleSearch,\n    } = useReportList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n        },\n        {\n            title: \"Ngày tạo\",\n            dataIndex: \"reportDate\",\n            key: \"reportDate\",\n            width: 300,\n            render: (record: Date) => {\n                return <p>{new Date(record).toLocaleDateString()}</p>;\n            },\n        },\n        {\n            title: \"Mô tả\",\n            dataIndex: \"description\",\n            key: \"description\",\n            width: 300,\n        },\n\n        {\n            title: \"Người tạo\",\n            dataIndex: \"staff\",\n            key: \"staff\",\n            width: 300,\n            render: (record: iStaff) => {\n                return (\n                    <p>\n                        {record.id} - {record.name}\n                    </p>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: iCustomReport) => (\n                <Space size=\"middle\">\n                    <Link to={`/report/${record.id}`}>\n                        <Button type=\"primary\">Xem</Button>\n                    </Link>\n                </Space>\n            ),\n            width: 300,\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <Link to=\"/report/generate\">\n                <Button type=\"primary\">Tạo báo cáo</Button>\n            </Link>\n\n            <div className={classes.header}>\n                <Form layout=\"inline\" onFinish={handleSearch}>\n                    <Form.Item label=\"Tìm kiếm theo ngày\" name=\"createdAt\">\n                        <DatePicker />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Tìm kiếm\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: pageSize,\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default ReportList;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { pageSizeState } from \"../../states/app.state\";\nimport { iReport } from \"../../types/report.types\";\nimport { useReport } from \"./useReport\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that provides report list logic\n * @kind function.\n *\n *\n * @return {{\n * data: iReport\n * }}\n *\n * */\nconst useReportList = () => {\n    const pageSize = useRecoilValue(pageSizeState);\n    const [pageNumber, setPageNumber] = useState<number>(1);\n    const [data, setData] = useState<iReport[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { fetchReports } = useReport();\n\n    useEffect(() => {\n        handleFetchReports();\n    }, [pageNumber]);\n\n    const handleFetchReports = async () => {\n        setLoading(true);\n        const data = await fetchReports(pageNumber, pageSize);\n        setData(data.data);\n        setTotalNumber(data.total);\n        setLoading(false);\n    };\n\n    const handleSearch = () => {};\n\n    return {\n        data,\n        loading,\n        pageSize,\n        totalNumber,\n        handleSearch,\n    };\n};\n\nexport { useReportList };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// talons\nimport { useRevenueList } from \"../../../talons/Revenue/useRevenueList\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { Button, DatePicker, Form, Space, Table } from \"antd\";\n\n// styles\nimport defaultClasses from \"./revenueList.module.css\";\n\n// types\nimport { iRevenue } from \"../../../types/revenue.types\";\nimport { iBankAccount } from \"../../../types/bankAccount.types\";\nimport { iStaff } from \"../../../types/user.types\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst RevenueList = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n        handleChangeTable,\n    } = useRevenueList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n        },\n        {\n            title: \"Tên\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 300,\n            sorter: (a: any, b: any) => NaN,\n        },\n        {\n            title: \"Mô tả\",\n            dataIndex: \"description\",\n            key: \"description\",\n            width: 300,\n            render: (record: string) => {\n                if (record.length > 50) return <p>{record.slice(0, 50)}...</p>;\n                return <p>{record}</p>;\n            },\n        },\n        {\n            title: \"Ngày tạo\",\n            dataIndex: \"createdAt\",\n            key: \"createdAt\",\n            width: 300,\n            render: (record: Date) => {\n                return <p>{new Date(record).toLocaleDateString()}</p>;\n            },\n        },\n        {\n            title: \"Số lượng\",\n            dataIndex: \"quantity\",\n            key: \"quantity\",\n            width: 150,\n            sorter: (a: any, b: any) => NaN,\n        },\n        {\n            title: \"Đơn giá\",\n            dataIndex: \"priceUnit\",\n            key: \"priceUnit\",\n            width: 150,\n            sorter: (a: any, b: any) => NaN,\n        },\n        {\n            title: \"Tổng tiền\",\n            dataIndex: \"total\",\n            key: \"total\",\n            width: 150,\n            sorter: (a: any, b: any) => NaN,\n        },\n\n        {\n            title: \"Số tài khoản ngân hàng\",\n            dataIndex: \"bankAccount\",\n            key: \"bankAccount\",\n            width: 300,\n            render: (record: iBankAccount) => {\n                return <p>{record.accountNumber}</p>;\n            },\n        },\n        {\n            title: \"Nhân viên \",\n            dataIndex: \"staff\",\n            key: \"staff\",\n            width: 300,\n            render: (record: iStaff) => {\n                return (\n                    <p>\n                        {record.id} - {record.name}\n                    </p>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: iRevenue) => (\n                <Space size=\"middle\">\n                    <Link to={`/revenue/view/${record.id}`}>\n                        <Button type=\"primary\">Xem</Button>\n                    </Link>\n                    <Link to={`/revenue/edit/${record.id}`}>\n                        <Button type=\"primary\">Sửa</Button>\n                    </Link>\n                    <Button\n                        type=\"primary\"\n                        danger\n                        onClick={() => onDelete(record.id)}\n                    >\n                        Xóa\n                    </Button>\n                </Space>\n            ),\n            width: 300,\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <Link to=\"/revenue/add\">\n                <Button type=\"primary\">Thêm mới</Button>\n            </Link>\n\n            <div className={classes.header}>\n                <Form layout=\"inline\" onFinish={handleSearch}>\n                    <Form.Item label=\"Tìm kiếm theo ngày\" name=\"createdAt\">\n                        <DatePicker />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Tìm kiếm\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: pageSize,\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                onChange={handleChangeTable}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default RevenueList;\n","import { message, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { iRevenue } from \"../../types/revenue.types\";\nimport { useRevenue } from \"./useRevenue\";\n\nimport moment from \"moment\";\nimport { useRecoilValue } from \"recoil\";\nimport { pageSizeState } from \"../../states/app.state\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that provides revenue list logic\n * @kind function.\n *\n *\n * @return {{\n * data: iRevenue,\n * pageSize: number,\n * totalNumber: number,\n * revenueList: iRevenue,\n * onDelete: func,\n * handleSearch: func\n * handleChangeTable: func\n * }}\n *\n * */\n\nconst useRevenueList = () => {\n    const pageSize = useRecoilValue(pageSizeState);\n    const [pageNumber, setPageNumber] = useState<number>(1);\n    const [data, setData] = useState<iRevenue[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { deleteRevenue, fetchRevenues } = useRevenue();\n\n    useEffect(() => {\n        handleFetchRevenues();\n    }, [pageNumber]);\n\n    const handleFetchRevenues = async (sortBy = 4, isAsc = true) => {\n        setLoading(true);\n        const data = await fetchRevenues(\n            pageNumber,\n            pageSize,\n            null,\n            sortBy,\n            isAsc\n        );\n        setData(data.data);\n        setTotalNumber(data.total);\n        setLoading(false);\n    };\n\n    const handleChangeTable = (\n        pagination: any,\n        filters: any,\n        sorter: any,\n        extra: any\n    ) => {\n        let sortBy = 4;\n        let isAsc = true;\n        switch (sorter.field) {\n            case \"name\":\n                sortBy = 4;\n                break;\n            case \"quantity\":\n                sortBy = 1;\n                break;\n            case \"priceUnit\":\n                sortBy = 2;\n                break;\n            case \"total\":\n                sortBy = 3;\n                break;\n            default:\n                sortBy = 4;\n        }\n\n        if (sorter.order === \"descend\") {\n            isAsc = false;\n        }\n        handleSort(sortBy, isAsc);\n        setPageNumber(pagination.current);\n    };\n\n    const handleSearch = async (values: any) => {\n        if (!values.createdAt) {\n            handleFetchRevenues();\n            setPageNumber(1);\n        } else {\n            const day = moment(values.createdAt).toDate().toLocaleDateString();\n            const response = await fetchRevenues(1, pageSize, day);\n            if (response.status === 200) {\n                setData(response.data);\n                setTotalNumber(response.total);\n            }\n        }\n    };\n\n    const onDelete = (revenueID: number) => {\n        Modal.confirm({\n            title: \"Xóa phiếu thu này?\",\n            content:\n                \"Bạn có chắc muốn xóa phiếu thu này không? Tất cả các báo cáo liên quan đến phiếu thu này cũng sẽ bị xóa \",\n            okText: \"Xác nhận xóa\",\n            cancelText: \"Hủy\",\n            onOk: async () => {\n                const data = await deleteRevenue(revenueID);\n                setPageNumber(1);\n                await handleFetchRevenues();\n                if (data.status === 200) {\n                    message.success(\"Xóa phiếu thu thành công\");\n                } else {\n                    message.error(\"Đã xảy ra lỗi. Xin thử lại sau\");\n                }\n            },\n        });\n    };\n\n    const handleSort = async (sortBy = 4, isAsc = true) => {\n        await handleFetchRevenues(sortBy, isAsc);\n    };\n\n    return {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSort,\n        handleSearch,\n        handleChangeTable,\n    };\n};\n\nexport { useRevenueList };\n","import React from \"react\";\n\n// talons\nimport { useRevenueForm } from \"../../../talons/Revenue/useRevenueForm\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { Button, Form, Input, InputNumber } from \"antd\";\n\n// styles\nimport defaultClasses from \"./revenueForm.module.css\";\n\n// types'\nimport { FORM_TYPE } from \"../../../types/app.types\";\n\ninterface Props {\n    classes?: object;\n    view: FORM_TYPE;\n}\n\nconst RevenueForm = ({ classes: propsClasses, view }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const { form, revenue, handleCancel, onChange, onSubmit } = useRevenueForm({\n        view,\n    });\n\n    let title = null;\n    let buttonText = null;\n\n    switch (view) {\n        case \"ADD\":\n            title = \"Thêm thông tin doanh thu\";\n            buttonText = \"Thêm\";\n            break;\n        case \"EDIT\":\n            title = \"Sửa thông tin doanh thu\";\n            buttonText = \"Lưu thông tin\";\n            break;\n        case \"VIEW\":\n            title = \"Thông tin chi tiết doanh thu\";\n            buttonText = \"Sửa\";\n            break;\n        default:\n            title = \"Thông tin doanh thu\";\n            buttonText = \"\";\n    }\n\n    return (\n        <div className={classes.root}>\n            <h2 className={classes.title}>{title}</h2>\n\n            <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={onSubmit}\n                onValuesChange={onChange}\n                form={form}\n                initialValues={revenue || {}}\n                key={Math.random()}\n            >\n                {view !== \"ADD\" && (\n                    <Form.Item label=\"Ngày tạo\" name=\"createdAt\">\n                        <Input disabled />\n                    </Form.Item>\n                )}\n                <Form.Item\n                    label=\"Tên\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập tên cho phiếu thu\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Mô tả\"\n                    name=\"description\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập mô tả cho phiếu thu\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Số lượng\"\n                    name=\"quantity\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập số lượng\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>{\" \"}\n                <Form.Item\n                    label=\"Đơn giá\"\n                    name=\"priceUnit\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập đơn giá\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>\n                <Form.Item\n                    label=\"Tổng tiền\"\n                    name=\"total\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name for revenue\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>\n                <Form.Item\n                    label=\"Số tài khoản ngân hàng\"\n                    name=\"bankAccountNumber\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập số tài khoản ngân hàng\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item className={classes.btnGroup}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className={classes.btn}\n                    >\n                        {buttonText}\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        className={classes.btn}\n                        onClick={handleCancel}\n                    >\n                        Hủy\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default RevenueForm;\n","import { Form, message } from \"antd\";\nimport { Modal } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { iRevenue, iRevenueDTO } from \"../../types/revenue.types\";\nimport { useRevenue } from \"./useRevenue\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that revenue form  logic\n *\n * @kind function.\n *\n * @return {{\n * form: formRef\n * revenue: iRevenue\n * onSubmit: func,\n * onChange: func,\n * handleCancel: func\n * }}\n * */\n\nconst useRevenueForm = ({ view: propsView }: { view: FORM_TYPE }) => {\n    const [form] = Form.useForm();\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    const [revenue, setRevenue] = useState<iRevenue | null>(null);\n\n    const { fetchRevenue, addRevenue, updateRevenue } = useRevenue();\n\n    const handleFetchRevenue = async () => {\n        const id = params?.id && ~~params.id;\n        if (id === 0) return;\n        const data = await fetchRevenue(~~id);\n        if (!data) {\n            history.push(\"/revenue\");\n            message.error(\"Không tồn tại phiếu thu với id này\");\n        }\n        setRevenue(data);\n        form.setFieldsValue({\n            bankAccountNumber: data.bankAccount.accountNumber,\n            createdAt: new Date(data.createdAt).toLocaleDateString(),\n        });\n    };\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchRevenue();\n        }\n    }, [params.id]);\n\n    const onSubmit = (values: iRevenueDTO) => {\n        if (propsView === \"ADD\") {\n            handleAddRevenue(values);\n        } else if (propsView === \"EDIT\") {\n            Modal.confirm({\n                title: \"Lưu\",\n                content: \"Bạn có chắc muốn lưu lại tất cả các thay đổi không ?\",\n                okText: \"Lưu\",\n                cancelText: \"Hủy\",\n                onOk: () => handleUpdateRevenue(values),\n            });\n        } else {\n            history.push(`/revenue/edit/${params.id}`);\n        }\n    };\n\n    const onChange = () => {};\n\n    const handleCancel = () => {\n        history.push(\"/revenue\");\n    };\n\n    const handleAddRevenue = async (values: iRevenueDTO) => {\n        const response = await addRevenue(values);\n        if (response.status === 201) {\n            message.success(\"Them moi thanh cong\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const handleUpdateRevenue = async (values: iRevenueDTO) => {\n        const response = await updateRevenue(values, ~~params.id);\n        console.log(`response`, response);\n        if (response.status === 200) {\n            message.success(\"Update thành công!\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    return {\n        form,\n        revenue,\n\n        onSubmit,\n        onChange,\n        handleCancel,\n    };\n};\nexport { useRevenueForm };\n","import React, { Component } from \"react\";\nimport Logo from \"../../Logo\";\n\nimport classes from \"./printPage.module.css\";\n\nclass PrintPage extends Component {\n    render() {\n        const { children } = this.props;\n\n        return (\n            <div className={classes.printWrapper}>\n                <div className={classes.header}>\n                    <Logo />\n                    <p>Công ty trách nhiệm hữu hạn 1 thành viên</p>\n                </div>\n                <div className={classes.content}>{children}</div>\n                <div className={classes.footer}>\n                    <p>Copy right. All right reserved @2020</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PrintPage;\n","import { Form, Table } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React from \"react\";\nimport { iCustomReport } from \"../../../types/report.types\";\n\nimport classes from \"./reportDetail.module.css\";\n\ninterface Props {\n    data: iCustomReport;\n}\n\nconst ReportDetail = ({ data }: Props) => {\n    const columns = [\n        {\n            title: \"Mã\",\n            dataIndex: \"id\",\n            width: 50,\n        },\n        {\n            title: \"Ngày\",\n            dataIndex: \"date\",\n            width: 100,\n        },\n        {\n            title: \"Tổng thu\",\n            dataIndex: \"totalRevenue\",\n            width: 100,\n        },\n        {\n            title: \"Tổng chi\",\n            dataIndex: \"totalExpense\",\n            width: 100,\n        },\n        {\n            title: \"Lợi nhuận\",\n            dataIndex: \"profit\",\n            width: 100,\n        },\n    ];\n\n    return (\n        <Table\n            columns={columns}\n            dataSource={data?.row}\n            pagination={false}\n            bordered\n            title={() => (\n                <p>\n                    Báo cáo thống kê từ ngày{\" \"}\n                    {new Date(\n                        (data && data.dateFrom) || (data && data.reportFrom)\n                    ).toLocaleDateString()}\n                    đến{\" \"}\n                    {new Date(\n                        (data && data.dateTo) || (data && data.reportTo)\n                    ).toLocaleDateString()}\n                </p>\n            )}\n            footer={() => {\n                if (!data) return <p>Loading...</p>;\n                return (\n                    <div className={classes.summary}>\n                        <div className={classes.summaryInfo}>\n                            <p>Tổng kết : </p>\n                            <p>\n                                Tổng chi: <strong>{data.expense}</strong>\n                            </p>\n                            <p>\n                                Tổng thu: <strong>{data.revenue}</strong>\n                            </p>\n                            <p>\n                                Lợi nhuận: <strong>{data.profit}</strong>\n                            </p>\n                            <p>\n                                Đơn vị: <strong>VND</strong>\n                            </p>\n                        </div>\n\n                        <div>Mô tả : {data.description}</div>\n\n                        <div className={classes.staffInfo}>\n                            <p>Nhân viên lập báo cáo: </p>\n                            <p>\n                                Ten: <strong>{data.staff.name}</strong>\n                            </p>\n                            <p>\n                                {\" \"}\n                                Chức vụ:\n                                <strong>{data.staff.role}</strong>\n                            </p>\n                            <p>\n                                Số điện thoại:{\" \"}\n                                <strong>{data.staff.phoneNumber}</strong>\n                            </p>\n                            <p>\n                                Phòng ban:{\" \"}\n                                <strong>{data.staff.department}</strong>\n                            </p>\n                            <p>\n                                Địa chỉ email :{\" \"}\n                                <strong>{data.staff.email}</strong>\n                            </p>\n                        </div>\n                    </div>\n                );\n            }}\n        />\n    );\n};\n\nexport default ReportDetail;\n","import React, { useRef } from \"react\";\n\n// talons\nimport { useGenerateReport } from \"../../../talons/Report/useGenerateReport\";\n\n// components\nimport { Form, DatePicker, Button, Table, Empty } from \"antd\";\nimport ReactToPrint from \"react-to-print\";\nimport PrintPage from \"../../Print/PrintPage\";\nimport ReportDetail from \"../ReportDetail\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\n// styles\nimport classes from \"./reportGenerator.module.css\";\n\n// types\nimport { FORM_TYPE } from \"../../../types/app.types\";\nimport { dataTool } from \"echarts\";\n\ninterface Props {\n    view: FORM_TYPE;\n}\n\nconst { RangePicker } = DatePicker;\n\nconst ReportGenerator = ({ view }: Props) => {\n    const {\n        data,\n        loading,\n        handleGenerateReport,\n        handleGetInfoForReport,\n    } = useGenerateReport({\n        view,\n    });\n\n    const printComponentRef = useRef(null);\n\n    const columns = [\n        {\n            title: \"Mã\",\n            dataIndex: \"id\",\n            width: 50,\n        },\n        {\n            title: \"Ngày\",\n            dataIndex: \"date\",\n            width: 100,\n        },\n        {\n            title: \"Tổng thu\",\n            dataIndex: \"totalRevenue\",\n            width: 100,\n        },\n        {\n            title: \"Tổng chi\",\n            dataIndex: \"totalExpense\",\n            width: 100,\n        },\n        {\n            title: \"Lợi nhuận\",\n            dataIndex: \"profit\",\n            width: 100,\n        },\n    ];\n\n    return (\n        <div className={classes.root}>\n            {view !== \"VIEW\" && (\n                <header className={classes.header}>\n                    <Form layout=\"inline\" onFinish={handleGetInfoForReport}>\n                        <Form.Item\n                            label=\"Lấy báo cáo theo khoảng ngày\"\n                            name=\"dateRange\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message:\n                                        \"Xin hãy chọn khoảng để xem báo cáo\",\n                                },\n                            ]}\n                        >\n                            <RangePicker />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Trích xuất\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </header>\n            )}\n\n            <section className={classes.main}>\n                {(data && (data.revenue !== 0 || data.expense !== 0) && (\n                    <Table\n                        columns={columns}\n                        dataSource={data?.row}\n                        loading={loading}\n                        pagination={false}\n                        scroll={{ y: 300 }}\n                        bordered\n                        title={() => (\n                            <p>\n                                Báo cáo thống kê từ ngày{\" \"}\n                                {new Date(\n                                    (data && data.dateFrom) ||\n                                        (data && data.reportFrom)\n                                ).toLocaleDateString()}\n                                đến{\" \"}\n                                {new Date(\n                                    (data && data.dateTo) ||\n                                        (data && data.reportTo)\n                                ).toLocaleDateString()}\n                            </p>\n                        )}\n                        footer={() => {\n                            if (!data) return <p>Loading...</p>;\n                            return (\n                                <div className={classes.summary}>\n                                    <div className={classes.summaryInfo}>\n                                        <p>Tổng kết : </p>\n                                        <p>\n                                            Tổng chi:{\" \"}\n                                            <strong>{data.expense}</strong>\n                                        </p>\n                                        <p>\n                                            Tổng thu:{\" \"}\n                                            <strong>{data.revenue}</strong>\n                                        </p>\n                                        <p>\n                                            Lợi nhuận:{\" \"}\n                                            <strong>{data.profit}</strong>\n                                        </p>\n                                        <p>\n                                            Đơn vị: <strong>VND</strong>\n                                        </p>\n                                    </div>\n\n                                    <Form\n                                        onFinish={handleGenerateReport}\n                                        key={Math.random()}\n                                    >\n                                        <Form.Item\n                                            label=\"Mô tả báo cáo\"\n                                            name=\"description\"\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message:\n                                                        \"Xin hãy nhập mô tả cho báo cáo\",\n                                                },\n                                            ]}\n                                        >\n                                            <TextArea\n                                                disabled={view === \"VIEW\"}\n                                                defaultValue={data.description}\n                                            />\n                                        </Form.Item>\n                                        {view === \"VIEW\" && (\n                                            <div className={classes.staffInfo}>\n                                                <p>Nhân viên lập báo cáo: </p>\n                                                <p>Ten: {data.staff.name}</p>\n                                                <p>\n                                                    {\" \"}\n                                                    Chức vụ: {data.staff.role}\n                                                </p>\n                                                <p>\n                                                    Số điện thoại:{\" \"}\n                                                    {data.staff.phoneNumber}\n                                                </p>\n                                                <p>\n                                                    Phòng ban:{\" \"}\n                                                    {data.staff.department}\n                                                </p>\n                                                <p>\n                                                    Địa chỉ email :{\" \"}\n                                                    {data.staff.email}\n                                                </p>\n                                            </div>\n                                        )}\n                                        <Form.Item>\n                                            {view !== \"VIEW\" && (\n                                                <Button\n                                                    type=\"primary\"\n                                                    htmlType=\"submit\"\n                                                >\n                                                    Lưu báo cáo\n                                                </Button>\n                                            )}\n                                            {view === \"VIEW\" && (\n                                                <React.Fragment>\n                                                    <div\n                                                        className={\n                                                            classes.print\n                                                        }\n                                                    >\n                                                        <ReactToPrint\n                                                            trigger={() => (\n                                                                <Button\n                                                                    type=\"primary\"\n                                                                    className={\n                                                                        classes.pdfBtn\n                                                                    }\n                                                                >\n                                                                    Xuất PDF\n                                                                </Button>\n                                                            )}\n                                                            content={() =>\n                                                                printComponentRef.current\n                                                            }\n                                                        />\n                                                        <PrintPage\n                                                            ref={\n                                                                printComponentRef\n                                                            }\n                                                        >\n                                                            <ReportDetail\n                                                                data={data}\n                                                            />\n                                                        </PrintPage>\n                                                    </div>\n                                                </React.Fragment>\n                                            )}\n                                        </Form.Item>\n                                    </Form>\n                                </div>\n                            );\n                        }}\n                    />\n                )) || <Empty description=\"Không thể truy xuất data\" />}\n            </section>\n        </div>\n    );\n};\n\nexport default ReportGenerator;\n","import { useReport } from \"./useReport\";\n\nimport moment from \"moment\";\nimport { message } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { iCustomReport, iReport } from \"../../types/report.types\";\nimport { iExpense } from \"../../types/expense.types\";\nimport { iRevenue } from \"../../types/revenue.types\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { useHistory, useParams } from \"react-router\";\n\ntype Props = {\n    view: FORM_TYPE;\n};\n\nconst useGenerateReport = ({ view }: Props) => {\n    const {\n        fetchReport,\n        generateReport,\n        getInformationForReport,\n    } = useReport();\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [data, setData] = useState<iReport | null>(null);\n    const [customData, setCustomData] = useState<iCustomReport | null>(null);\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (params?.id) {\n            handleGetReport(params.id);\n        }\n    }, [params.id]);\n\n    const parseFromReportToCustomReport = (data: iReport) => {\n        const result: iCustomReport = {\n            dateFrom: data.dateFrom || data.reportFrom,\n            dateTo: data.dateTo || data.reportTo,\n            description: data.description,\n            expense: data.expense,\n            revenue: data.revenue,\n            staffID: data.staffID,\n            reportDate: new Date(),\n            profit: 0,\n            row: [],\n            staff: data?.staff,\n        };\n        const { expenses, revenues } = data;\n        const tempRow: any = {};\n        expenses.forEach((expense: iExpense) => {\n            const { date, total } = expense;\n            const createdAt = new Date(date).toLocaleDateString();\n            if (tempRow.hasOwnProperty(createdAt)) {\n                tempRow[createdAt].expenses += total;\n            } else {\n                tempRow[createdAt] = {\n                    expenses: total,\n                    revenues: 0,\n                };\n            }\n        });\n\n        revenues.forEach((revenue: iRevenue) => {\n            const { createdAt, total } = revenue;\n            const date = new Date(createdAt).toLocaleDateString();\n            console.log(`date`, date);\n            if (tempRow.hasOwnProperty(date)) {\n                tempRow[date].revenues += total;\n            } else {\n                tempRow[date] = {\n                    expenses: 0,\n                    revenues: total,\n                };\n            }\n        });\n\n        result.row =\n            tempRow &&\n            Object.entries(tempRow)\n                .map(([key, value], idx) => {\n                    const { expenses, revenues } = value as any;\n                    const profit = revenues - expenses;\n                    result.profit += profit;\n                    return {\n                        id: idx + 1,\n                        date: key,\n                        totalExpense: expenses,\n                        totalRevenue: revenues,\n                        profit,\n                    };\n                })\n                .sort((a: any, b: any) => {\n                    const { date: dateA } = a;\n                    const { date: dateB } = b;\n                    return dateA.localeCompare(dateB);\n                });\n\n        return result;\n    };\n\n    const handleGetInfoForReport = async (values: any) => {\n        const dateFrom = moment(values.dateRange[0])\n            .toDate()\n            .toLocaleDateString();\n\n        const dateTo = moment(values.dateRange[1])\n            .toDate()\n            .toLocaleDateString();\n\n        const dataDTO = {\n            dateFrom,\n            dateTo,\n            staffID: 1,\n        };\n\n        setLoading(true);\n\n        const response = await getInformationForReport(dataDTO);\n        if (response.status === 200) {\n            const temp = parseFromReportToCustomReport(response.data);\n            setCustomData(temp);\n            setData(response.data);\n        } else {\n            message.error(response.message);\n        }\n\n        setLoading(false);\n    };\n\n    const handleGenerateReport = async (values: any) => {\n        const description = values?.description || \"\";\n        const response = await generateReport({\n            ...data,\n            description,\n        });\n        if (response.status === 201) {\n            message.success(\"Tạo báo cáo thành công\");\n            history.push(`/report/${response.data.id}`);\n            console.log(`response.data`, response.data);\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const handleGetReport = async (id: string) => {\n        const response = await fetchReport(~~id);\n        if (response.status === 200) {\n            const temp = parseFromReportToCustomReport(response.data);\n            setCustomData(temp);\n        } else {\n            message.error(response.message);\n            history.push(\"/report\");\n        }\n    };\n\n    return {\n        loading,\n        data: customData,\n        handleGenerateReport,\n        handleGetInfoForReport,\n    };\n};\n\nexport { useGenerateReport };\n","import React from \"react\";\nimport { merge } from \"lodash\";\nimport ReactEcharts from \"echarts-for-react\";\n\ninterface Props {\n    title: string;\n    option?: object;\n    height?: number;\n    width?: number | string;\n    padding?: number | string;\n}\n\nconst SmoothedLineChart = ({\n    title,\n    option = {},\n    height = 500,\n    width = 500,\n    padding = 0,\n}: Props) => {\n    const defaultOption = {\n        title: {\n            text: title,\n        },\n        tooltip: {\n            trigger: \"axis\",\n            formatter: function (params: any) {\n                params = params && params[0];\n                var date = new Date(params.name);\n                return (\n                    date.getDate() +\n                    \"/\" +\n                    (date.getMonth() + 1) +\n                    \"/\" +\n                    date.getFullYear() +\n                    \" : \" +\n                    params.value[1]\n                );\n            },\n            axisPointer: {\n                animation: false,\n            },\n        },\n        xAxis: {\n            type: \"time\",\n            splitLine: {\n                show: true,\n            },\n        },\n        yAxis: {\n            type: \"value\",\n            boundaryGap: [0, \"100%\"],\n            splitLine: {\n                show: false,\n            },\n        },\n        dataZoom: [\n            {\n                show: true,\n                type: \"inside\",\n                filterMode: \"none\",\n                xAxisIndex: [0],\n            },\n            {\n                show: true,\n                type: \"inside\",\n                filterMode: \"none\",\n                yAxisIndex: [0],\n            },\n        ],\n    };\n\n    return (\n        <ReactEcharts\n            style={{ height, width, padding }}\n            option={merge({}, defaultOption, option)}\n        />\n    );\n};\n\nexport default SmoothedLineChart;\n","import React from \"react\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { Form, Button, DatePicker, Empty } from \"antd\";\n\nimport defaultClasses from \"./revenueStatistic.module.css\";\nimport { useRevenueStatistic } from \"../../../talons/Revenue/useRevenueStatistic\";\nimport SmoothedLineChart from \"../../CompareChart/SmoothedLineChart\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst { RangePicker } = DatePicker;\n\nconst RevenueStatistic = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const { data, option, handleGenerateStatistic } = useRevenueStatistic();\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Form layout=\"inline\" onFinish={handleGenerateStatistic}>\n                    <Form.Item\n                        label=\"Xem thống kê theo khoảng ngày\"\n                        name=\"dateRange\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Xin hãy chọn khoảng để xem thống kê\",\n                            },\n                        ]}\n                    >\n                        <RangePicker />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Trích xuất\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </header>\n            <div className={classes.main}>\n                {(data && (\n                    <SmoothedLineChart\n                        title=\"Thống kê doanh thu\"\n                        option={option}\n                        width=\"100%\"\n                    />\n                )) || <Empty description={false} />}\n            </div>\n        </div>\n    );\n};\n\nexport default RevenueStatistic;\n","import { useRevenue } from \"./useRevenue\";\n\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { iRevenueStatistic } from \"../../types/revenue.types\";\nimport { message } from \"antd\";\n\n/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html}\n * that provides revenue statistic logic\n * @kind function.\n *\n *\n * @return {{\n * option: object,\n * data: iRevenueStatistic,\n * handleGenerateStatistic: func\n * }}\n *\n * */\n\nconst useRevenueStatistic = () => {\n    const [data, setData] = useState<iRevenueStatistic[] | null>(null);\n    const [option, setOption] = useState<any>(null);\n\n    const { fetchRevenuesInRange } = useRevenue();\n\n    const handleGenerateStatistic = async (values: any) => {\n        const dateFrom = moment(values.dateRange[0])\n            .toDate()\n            .toLocaleDateString();\n        const dateTo = moment(values.dateRange[1])\n            .toDate()\n            .toLocaleDateString();\n        const data = await fetchRevenuesInRange(dateFrom, dateTo);\n\n        if (data.status === 200) {\n            setData(data.data);\n            const allData = data.data;\n            const mappingData: any = {};\n            allData.forEach((data: any) => {\n                const { createdAt, total } = data;\n\n                if (mappingData.hasOwnProperty(createdAt)) {\n                    mappingData[createdAt] += total;\n                } else {\n                    mappingData[createdAt] = total;\n                }\n            });\n            const newOption = {\n                series: [\n                    {\n                        data: Object.entries(mappingData)\n                            .sort((a: any, b: any) => {\n                                return (\n                                    a &&\n                                    a[0] &&\n                                    b &&\n                                    b[0] &&\n                                    a[0].localeCompare(b[0])\n                                );\n                            })\n                            .map(([day, value]) => {\n                                return {\n                                    name: day,\n                                    value: [day, value],\n                                };\n                            }),\n                        type: \"line\",\n                        smooth: true,\n                    },\n                ],\n            };\n            setOption(newOption);\n        } else {\n            message.error(\"Something went wrong. Please try again later\");\n        }\n    };\n\n    return {\n        data,\n        option,\n        handleGenerateStatistic,\n    };\n};\n\nexport { useRevenueStatistic };\n","/**\n * A [React Hook]{@link https://reactjs.org/docs/hooks-intro.html} that expense list logic\n *\n * @kind function.\n *\n * @return {{\n *}}\n * */\n\nimport { TExpense } from \"../../types/expense.types\";\nimport { useData } from \"../common/useData\";\n\nconst BASE_BACKEND_URL = `${process.env.REACT_APP_API_LINK}/expense`;\n\nconst useExpense = ({ type }: { type: TExpense }) => {\n    let BACKEND_URL = BASE_BACKEND_URL;\n\n    switch (type) {\n        case \"EMPLOYEE_SALARY\":\n            BACKEND_URL = `${BASE_BACKEND_URL}/employeeSalary`;\n            break;\n        case \"SERVICE\":\n            BACKEND_URL = `${BASE_BACKEND_URL}/service`;\n            break;\n        case \"SHOPPING\":\n            BACKEND_URL = `${BASE_BACKEND_URL}/shopping`;\n            break;\n    }\n\n    const { fetchList, fetchOne, addOne, updateOne, deleteOne } = useData({\n        backendURL: BASE_BACKEND_URL,\n        additionalBackendURL: BACKEND_URL,\n    });\n\n    const fetchExpenses = async () => {\n        const response = await fetchList();\n        return response;\n    };\n\n    const fetchExpense = async (expenseID: number) => {\n        const response = await fetchOne(expenseID);\n        return response;\n    };\n\n    const addExpense = async (data: any) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await addOne(data);\n        return response;\n    };\n\n    const updateExpense = async (data: any, expenseID: number) => {\n        if (!data.staffID) {\n            data.staffID = 1;\n        }\n        const response = await updateOne(data, expenseID);\n        return response;\n    };\n\n    const deleteExpense = async (expenseID: number) => {\n        const response = await deleteOne(expenseID);\n        return response;\n    };\n\n    const fetchExpenseInRange = async (dateFrom: String, dateTo: String) => {\n        const response = await fetch(\n            `${BASE_BACKEND_URL}/statistic?dayStart=${dateFrom}&dayEnd=${dateTo}`\n        );\n        const data = await response.json();\n        return data;\n    };\n\n    return {\n        addExpense,\n        fetchExpense,\n        fetchExpenses,\n        updateExpense,\n        deleteExpense,\n        fetchExpenseInRange,\n    };\n};\n\nexport { useExpense };\n","import { Button, DatePicker, Form, Space, Table, Tag } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useExpenseList } from \"../../../talons/Expense/useExpenseList\";\nimport { iBankAccount } from \"../../../types/bankAccount.types\";\nimport { iStaff } from \"../../../types/user.types\";\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\nimport defaultClasses from \"./expenseList.module.css\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst ExpenseList = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSearch,\n        handleChangeTable,\n    } = useExpenseList();\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\",\n        },\n        {\n            title: \"Tên\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 300,\n            sorter: (a: any, b: any) => NaN,\n        },\n        {\n            title: \"Mô tả\",\n            dataIndex: \"description\",\n            key: \"description\",\n            width: 300,\n            render: (record: string) => {\n                if (record.length > 50) return <p>{record.slice(0, 50)}...</p>;\n                return <p>{record}</p>;\n            },\n        },\n        {\n            title: \"Ngày tạo\",\n            dataIndex: \"date\",\n            key: \"date\",\n            width: 300,\n            render: (record: Date) => {\n                return <p>{new Date(record).toLocaleDateString()}</p>;\n            },\n        },\n        {\n            title: \"Loại\",\n            dataIndex: \"type\",\n            key: \"type\",\n            width: 150,\n            render: (type: any) => {\n                let color = \"volcano\";\n\n                switch (type) {\n                    case \"Mua sắm\":\n                        color = \"geekblue\";\n                        break;\n                    case \"Trang thiết bị\":\n                        color = \"green\";\n                        break;\n                    case \"Trả lương\":\n                        color = \"volcano\";\n                        break;\n                }\n\n                return (\n                    <span>\n                        <Tag color={color}>{type}</Tag>\n                    </span>\n                );\n            },\n        },\n        {\n            title: \"Tổng tiền\",\n            dataIndex: \"total\",\n            key: \"total\",\n            width: 150,\n            sorter: (a: any, b: any) => NaN,\n        },\n\n        {\n            title: \"Số tài khoản ngân hàng\",\n            dataIndex: \"bankAccount\",\n            key: \"bankAccount\",\n            width: 300,\n            render: (record: iBankAccount) => {\n                return <p>{record.accountNumber}</p>;\n            },\n        },\n        {\n            title: \"Nhân viên \",\n            dataIndex: \"staff\",\n            key: \"staff\",\n            width: 300,\n            render: (record: iStaff) => {\n                return (\n                    <p>\n                        {record.id} - {record.name}\n                    </p>\n                );\n            },\n        },\n\n        {\n            title: \"Thao tác\",\n            key: \"action\",\n            render: (text: any, record: any) => (\n                <Space size=\"middle\">\n                    <Link to={`/expense/view/${record.id}`}>\n                        <Button type=\"primary\">Xem</Button>\n                    </Link>\n                    <Link to={`/expense/edit/${record.id}`}>\n                        <Button type=\"primary\">Sửa</Button>\n                    </Link>\n                    <Button\n                        type=\"primary\"\n                        danger\n                        onClick={() => onDelete(record.id)}\n                    >\n                        Xóa\n                    </Button>\n                </Space>\n            ),\n            width: 300,\n        },\n    ];\n    return (\n        <div className={classes.root}>\n            <Link to=\"/expense/add\">\n                <Button type=\"primary\">Thêm mới</Button>\n            </Link>\n\n            <div className={classes.header}>\n                <Form layout=\"inline\" onFinish={handleSearch}>\n                    <Form.Item label=\"Tìm kiếm theo ngày\" name=\"createdAt\">\n                        <DatePicker />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Tìm kiếm\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n            <Table\n                columns={columns}\n                dataSource={data}\n                pagination={{\n                    pageSize: pageSize,\n                    total: totalNumber,\n                    pageSizeOptions: [\"10\", \"20\", \"30\"],\n                }}\n                onChange={handleChangeTable}\n                scroll={{ x: \"500px\" }}\n                loading={loading}\n            />\n        </div>\n    );\n};\n\nexport default ExpenseList;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { pageSizeState } from \"../../states/app.state\";\nimport { iExpense } from \"../../types/expense.types\";\nimport { useExpense } from \"./useExpense\";\nimport moment from \"moment\";\nimport { message, Modal } from \"antd\";\n\nconst useExpenseList = () => {\n    const pageSize = useRecoilValue(pageSizeState);\n    const [pageNumber, setPageNumber] = useState<number>(1);\n    const [initialData, setInitialData] = useState<any[]>([]);\n    const [data, setData] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [totalNumber, setTotalNumber] = useState<number>(0);\n\n    const { fetchExpenses, deleteExpense } = useExpense({ type: \"BASE\" });\n\n    useEffect(() => {\n        handleFetchExpenses();\n    }, []);\n\n    const populateType = (data: any) => {\n        return data.map((e: any) => {\n            let type = \"Mua sắm\";\n            if (e.hasOwnProperty(\"productID\")) type = \"Mua sắm\";\n            else if (e.hasOwnProperty(\"employeeID\")) type = \"Trả lương\";\n            else type = \"Trang thiết bị\";\n            return {\n                ...e,\n                type,\n            };\n        });\n    };\n\n    const handleFetchExpenses = async (sortBy = 4, isAsc = true) => {\n        setLoading(true);\n        const data = await fetchExpenses();\n        const populatedData = populateType(data.data);\n        setInitialData(populatedData);\n        setTotalNumber(populatedData);\n        setData(populatedData);\n        setLoading(false);\n    };\n\n    const handleChangeTable = (\n        pagination: any,\n        filters: any,\n        sorter: any,\n        extra: any\n    ) => {\n        let isAsc = true;\n        if (sorter.order === \"descend\") {\n            isAsc = false;\n        }\n        if (sorter?.field) handleSort(sorter.field, isAsc);\n    };\n\n    const handleSearch = async (values: any) => {\n        console.log(`values`, values);\n        if (!values.createdAt) {\n            setData(initialData);\n            setPageNumber(1);\n        } else {\n            const day = moment(values.createdAt).toDate().toLocaleDateString();\n            const searchData = initialData.filter((item: any) => {\n                const date = new Date(item.date).toLocaleDateString();\n                return date == day;\n            });\n            setData(searchData);\n        }\n    };\n\n    const onDelete = (expenseID: number) => {\n        Modal.confirm({\n            title: \"Xóa phiếu chi này?\",\n            content: `Bạn có chắc muốn xóa phiếu chi này không? \n                Tất cả các báo cáo liên quan đến phiếu chi này cũng sẽ bị xóa`,\n            okText: \"Xác nhận xóa\",\n            cancelText: \"Hủy\",\n            onOk: async () => {\n                const data = await deleteExpense(expenseID);\n                setPageNumber(1);\n                await handleFetchExpenses();\n                if (data.status === 200) {\n                    message.success(\"Xóa phiếu chi thành công\");\n                } else {\n                    message.error(\"Đã xảy ra lỗi. Xin thử lại sau\");\n                }\n            },\n        });\n    };\n\n    const handleSort = async (sortBy: string, isAsc = true) => {\n        const newData = initialData.sort((a: any, b: any) => {\n            if (sortBy === \"name\") {\n                return isAsc\n                    ? a.name.length - b.name.length\n                    : b.name.length - a.name.length;\n            } else if (sortBy === \"total\") {\n                return isAsc ? a.total - b.total : b.total - a.total;\n            }\n\n            return a.length - b.length;\n        });\n        setData(newData);\n    };\n\n    return {\n        data,\n        pageSize,\n        loading,\n        totalNumber,\n\n        onDelete,\n        handleSort,\n        handleSearch,\n        handleChangeTable,\n    };\n};\n\nexport { useExpenseList };\n","import React from \"react\";\n\n// talons\nimport { useExpenseForm } from \"../../../talons/Expense/useExpenseForm\";\n\n// utils\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\n// components\nimport { Button, Form, Input, InputNumber, Select } from \"antd\";\n\n// types\nimport { FORM_TYPE } from \"../../../types/app.types\";\n\n// styles\nimport defaultClasses from \"./expenseForm.module.css\";\n\ninterface Props {\n    classes?: object;\n    view: FORM_TYPE;\n}\n\nconst ExpenseForm = ({ classes: propsClasses, view }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        form,\n        type,\n        expense,\n        handleCancel,\n        onSubmit,\n        onChange,\n        handleChangeType,\n    } = useExpenseForm({\n        view,\n    });\n\n    let title = null;\n    let buttonText = null;\n\n    switch (view) {\n        case \"ADD\":\n            title = \"Thêm thông tin phiếu chi\";\n            buttonText = \"Thêm\";\n            break;\n        case \"EDIT\":\n            title = \"Sửa thông tin phiếu chi\";\n            buttonText = \"Lưu thông tin\";\n            break;\n        case \"VIEW\":\n            title = \"Thông tin chi tiết phiếu chi\";\n            buttonText = \"Sửa\";\n            break;\n        default:\n            title = \"Thông tin phiếu chi\";\n            buttonText = \"\";\n    }\n\n    console.log(`type`, type);\n\n    return (\n        <div className={classes.root}>\n            <h2 className={classes.title}>{title}</h2>\n\n            <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={onSubmit}\n                onValuesChange={onChange}\n                form={form}\n                initialValues={expense || {}}\n                key={Math.random()}\n            >\n                {view !== \"ADD\" && (\n                    <Form.Item label=\"Ngày tạo\" name=\"createdAt\">\n                        <Input disabled />\n                    </Form.Item>\n                )}\n                <Form.Item\n                    label=\"Tên\"\n                    name=\"name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Mô tả\"\n                    name=\"description\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input description\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Phương thức thanh toán\"\n                    name=\"paymentMethod\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input payment method\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item\n                    label=\"Số tài khoản ngân hàng\"\n                    name=\"bankAccountNumber\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Xin hãy nhập số tài khoản ngân hàng\",\n                        },\n                    ]}\n                >\n                    <Input disabled={view === \"VIEW\"} />\n                </Form.Item>\n                <Form.Item label=\"Kiểu phiếu chi\" name=\"type\">\n                    <Select\n                        disabled={view !== \"ADD\"}\n                        defaultValue={type}\n                        onChange={handleChangeType}\n                    >\n                        <Select.Option value=\"SERVICE\">Dịch vụ</Select.Option>\n                        <Select.Option value=\"EMPLOYEE_SALARY\">\n                            Lương nhân viên\n                        </Select.Option>\n                        <Select.Option value=\"SHOPPING\">Mua sắm</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                {type === \"SHOPPING\" && (\n                    <React.Fragment>\n                        <Form.Item\n                            label=\"Số lượng\"\n                            name=\"quantity\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Xin hãy nhập số lượng\",\n                                },\n                            ]}\n                        >\n                            <InputNumber\n                                disabled={view === \"VIEW\"}\n                                formatter={(value) =>\n                                    `${value}`.replace(\n                                        /\\B(?=(\\d{3})+(?!\\d))/g,\n                                        \",\"\n                                    )\n                                }\n                                parser={(value: any) =>\n                                    (value &&\n                                        value.replace(/\\$\\s?|(,*)/g, \"\")) ||\n                                    \"\"\n                                }\n                                min={0}\n                            />\n                        </Form.Item>{\" \"}\n                        <Form.Item\n                            label=\"Đơn giá\"\n                            name=\"priceUnit\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Xin hãy nhập đơn giá\",\n                                },\n                            ]}\n                        >\n                            <InputNumber\n                                disabled={view === \"VIEW\"}\n                                formatter={(value) =>\n                                    `${value}`.replace(\n                                        /\\B(?=(\\d{3})+(?!\\d))/g,\n                                        \",\"\n                                    )\n                                }\n                                parser={(value: any) =>\n                                    (value &&\n                                        value.replace(/\\$\\s?|(,*)/g, \"\")) ||\n                                    \"\"\n                                }\n                                min={0}\n                            />\n                        </Form.Item>\n                    </React.Fragment>\n                )}\n\n                {type === \"EMPLOYEE_SALARY\" && (\n                    <Form.Item\n                        label=\"So hieu nhan vien\"\n                        name=\"staffID\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input user ID\",\n                            },\n                        ]}\n                    >\n                        <Input disabled={view === \"VIEW\"} />\n                    </Form.Item>\n                )}\n\n                <Form.Item\n                    label=\"Tổng tiền\"\n                    name=\"total\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input name for revenue\",\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        disabled={view === \"VIEW\"}\n                        formatter={(value) =>\n                            `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }\n                        parser={(value: any) =>\n                            (value && value.replace(/\\$\\s?|(,*)/g, \"\")) || \"\"\n                        }\n                        min={0}\n                    />\n                </Form.Item>\n\n                <Form.Item className={classes.btnGroup}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className={classes.btn}\n                    >\n                        {buttonText}\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        className={classes.btn}\n                        onClick={handleCancel}\n                    >\n                        Hủy\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default ExpenseForm;\n","import { Form, message, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { FORM_TYPE } from \"../../types/app.types\";\nimport { TExpense } from \"../../types/expense.types\";\nimport { useExpense } from \"./useExpense\";\n\nconst useExpenseForm = ({ view }: { view: FORM_TYPE }) => {\n    const [form] = Form.useForm();\n\n    const params: { id: string } = useParams();\n    const history = useHistory();\n\n    const [type, setType] = useState<TExpense>(\"EMPLOYEE_SALARY\");\n    const [expense, setExpense] = useState<any | null>(null);\n\n    const { addExpense, fetchExpense, updateExpense } = useExpense({ type });\n\n    useEffect(() => {\n        if (params?.id) {\n            handleFetchExpense();\n        }\n    }, [params.id]);\n\n    const handleFetchExpense = async () => {\n        const id = params?.id && ~~params.id;\n        if (id === 0) return;\n        const data = await fetchExpense(~~id);\n        if (!data) {\n            history.push(\"/revenue\");\n            message.error(\"Không tồn tại phiếu thu với id này\");\n        }\n        setExpense(data);\n        form.setFieldsValue({\n            bankAccountNumber: data.bankAccount.accountNumber,\n            createdAt: new Date(data.date).toLocaleDateString(),\n            staffID: data.staff.id,\n        });\n\n        if (data.hasOwnProperty(\"productID\")) setType(\"SHOPPING\");\n        else if (data.hasOwnProperty(\"employeeID\")) setType(\"EMPLOYEE_SALARY\");\n        else setType(\"SERVICE\");\n    };\n\n    const onSubmit = (values: any) => {\n        if (view === \"ADD\") {\n            handleAddExpense(values);\n        } else if (view === \"EDIT\") {\n            Modal.confirm({\n                title: \"Lưu\",\n                content: \"Bạn có chắc muốn lưu lại tất cả các thay đổi không ?\",\n                okText: \"Lưu\",\n                cancelText: \"Hủy\",\n                onOk: () => handleUpdateExpense(values),\n            });\n        } else {\n            history.push(`/expense/edit/${params.id}`);\n        }\n    };\n\n    const handleAddExpense = async (values: any) => {\n        const response = await addExpense(values);\n        if (response.status === 201) {\n            message.success(\"Them moi thanh cong\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const handleUpdateExpense = async (values: any) => {\n        const response = await updateExpense(values, ~~params.id);\n        console.log(`response`, response);\n        if (response.status === 200) {\n            message.success(\"Update thành công!\");\n        } else {\n            message.error(response.message);\n        }\n    };\n\n    const onChange = () => {};\n\n    const handleCancel = () => {\n        history.push(\"/expense\");\n    };\n\n    const handleChangeType = (value: TExpense) => {\n        setType(value);\n    };\n\n    return {\n        form,\n        type,\n        expense,\n        onSubmit,\n        onChange,\n        handleCancel,\n        handleChangeType,\n    };\n};\n\nexport { useExpenseForm };\n","import React from \"react\";\nimport { merge } from \"lodash\";\nimport ReactEcharts from \"echarts-for-react\";\n\ninterface Props {\n    title: string;\n    option?: object;\n    height?: number | string;\n    width?: number | string;\n    padding?: number | string;\n}\n\nconst PieChart = ({\n    title,\n    option = {},\n    height = 500,\n    width = 500,\n    padding = 0,\n}: Props) => {\n    const defaultOption = {\n        title: {\n            text: title,\n            left: \"center\",\n        },\n        tooltip: {\n            trigger: \"item\",\n        },\n        legend: {\n            orient: \"vertical\",\n            left: \"left\",\n        },\n    };\n\n    return (\n        <ReactEcharts\n            style={{ height, width, padding }}\n            option={merge({}, defaultOption, option)}\n        />\n    );\n};\n\nexport default PieChart;\n","import React from \"react\";\nimport mergeClasses from \"../../../utils/mergeClasses\";\n\nimport defaultClasses from \"./expenseStatistic.module.css\";\nimport { Form, DatePicker, Button, Empty } from \"antd\";\nimport { useExpenseStatistic } from \"../../../talons/Expense/useExpenseStatistic\";\nimport SmoothedLineChart from \"../../CompareChart/SmoothedLineChart/SmoothedLineChart\";\nimport PieChart from \"../../CompareChart/PieChart\";\n\ninterface Props {\n    classes?: object;\n}\n\nconst { RangePicker } = DatePicker;\n\nconst ExpenseStatistic = ({ classes: propsClasses }: Props) => {\n    const classes = mergeClasses(defaultClasses, propsClasses);\n\n    const {\n        data,\n        optionByDate,\n        optionByType,\n        handleGenerateStatistic,\n    } = useExpenseStatistic();\n\n    console.log(`optionByType`, optionByType);\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Form layout=\"inline\" onFinish={handleGenerateStatistic}>\n                    <Form.Item\n                        label=\"Xem thống kê theo khoảng ngày\"\n                        name=\"dateRange\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Xin hãy chọn khoảng để xem thống kê\",\n                            },\n                        ]}\n                    >\n                        <RangePicker />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Trích xuất\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </header>\n            <div className={classes.main}>\n                {(data && (\n                    <React.Fragment>\n                        <div className={classes.item}>\n                            <SmoothedLineChart\n                                title=\"Thống kê chi phí\"\n                                option={optionByDate}\n                                width={\"100%\"}\n                                padding=\"2rem\"\n                            />\n                        </div>\n                        <div className={classes.item}>\n                            <PieChart\n                                title=\"Thống kê theo loại chi phí\"\n                                option={optionByType}\n                                width={\"100%\"}\n                                padding=\"2rem\"\n                            />\n                        </div>\n                    </React.Fragment>\n                )) || <Empty description={false} />}\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseStatistic;\n","import { message } from \"antd\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { iExpenseStatisticByDate } from \"../../types/expense.types\";\nimport { useExpense } from \"./useExpense\";\n\nconst useExpenseStatistic = () => {\n    const [dataByDate, setDataByDate] = useState<\n        iExpenseStatisticByDate[] | null\n    >(null);\n    const [optionByDate, setOptionByDate] = useState<any>(null);\n    const [optionByType, setOptionByType] = useState<any>(null);\n\n    const { fetchExpenseInRange } = useExpense({ type: \"BASE\" });\n\n    const handleGenerateStatistic = async (values: any) => {\n        const dateFrom = moment(values.dateRange[0])\n            .toDate()\n            .toLocaleDateString();\n        const dateTo = moment(values.dateRange[1])\n            .toDate()\n            .toLocaleDateString();\n        const data = await fetchExpenseInRange(dateFrom, dateTo);\n\n        if (data.status === 200) {\n            setDataByDate(data.data);\n            generateDateStatistic(data.data);\n            generateTypeStatistic(data.data);\n        } else {\n            message.error(\"Something went wrong. Please try again later\");\n        }\n    };\n\n    const generateDateStatistic = (data: any) => {\n        const allData = [...data];\n        const mappingData: any = {};\n        allData.forEach((data: any) => {\n            const { date, total } = data;\n            const createdAt = date.slice(0, 10);\n            if (mappingData.hasOwnProperty(createdAt)) {\n                mappingData[createdAt] += total;\n            } else {\n                mappingData[createdAt] = total;\n            }\n        });\n        const newOption = {\n            series: [\n                {\n                    data: Object.entries(mappingData)\n                        .sort((a: any, b: any) => {\n                            return a[0].localeCompare(b[0]);\n                        })\n                        .map(([day, value]) => {\n                            return {\n                                name: day,\n                                value: [day, value],\n                            };\n                        }),\n                    type: \"line\",\n                    smooth: true,\n                },\n            ],\n        };\n        setOptionByDate(newOption);\n    };\n\n    const generateTypeStatistic = (data: any) => {\n        const allData = [...data];\n        const mappingData: any = {\n            \"Mua sắm\": 0,\n            \"Trả lương\": 0,\n            \"Trang thiết bị\": 0,\n        };\n        allData.forEach((e: any) => {\n            let type = \"Mua sắm\";\n            if (e.hasOwnProperty(\"productID\")) type = \"Mua sắm\";\n            else if (e.hasOwnProperty(\"employeeID\")) type = \"Trả lương\";\n            else type = \"Trang thiết bị\";\n            mappingData[type] += e.total || 0;\n        });\n        const newOption = {\n            series: [\n                {\n                    type: \"pie\",\n                    radius: \"50%\",\n                    data: Object.entries(mappingData).map(([key, value]) => {\n                        return {\n                            name: key,\n                            value: value,\n                        };\n                    }),\n                    emphasis: {\n                        itemStyle: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: \"rgba(0, 0, 0, 0.5)\",\n                        },\n                    },\n                },\n            ],\n        };\n        setOptionByType(newOption);\n    };\n\n    return {\n        data: dataByDate,\n        optionByDate,\n        optionByType,\n        handleGenerateStatistic,\n    };\n};\n\nexport { useExpenseStatistic };\n","import React from \"react\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router\";\nimport { useRecoilState } from \"recoil\";\n\n// utils\nimport { useLocalStorage } from \"./utils/useLocalStorage\";\n\n// pages\nimport Overview from \"./pages/Overview\";\nimport NotFound from \"./pages/NotFound\";\n\n// components\nimport Auth from \"./pages/Auth\";\nimport BaseView from \"./layout/BaseView\";\nimport ReportList from \"./components/Report/ReportList\";\nimport RevenueList from \"./components/Revenue/RevenueList\";\nimport RevenueForm from \"./components/Revenue/RevenueForm\";\n// import ReportDetail from \"./components/Report/ReportDetail\";\nimport ReportGenerator from \"./components/Report/ReportGenerator\";\nimport RevenueStatistic from \"./components/Revenue/RevenueStatistic\";\nimport ExpenseList from \"./components/Expense/ExpenseList\";\nimport ExpenseForm from \"./components/Expense/ExpenseForm\";\nimport ExpenseStatistic from \"./components/Expense/ExpenseStatistic\";\n\n// styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\n// states\nimport { authState } from \"./states/app.state\";\n\nconst App = () => {\n    const [user, setUser] = useLocalStorage(\"user\", false);\n    const [auth, setAuth] = useRecoilState(authState);\n\n    const history = useHistory();\n\n    return (\n        <React.Fragment>\n            <Switch>\n                <Route exact path=\"/\" component={Overview} />\n                <Route\n                    exact\n                    path=\"/auth\"\n                    render={() =>\n                        (auth && <Redirect to=\"/\"></Redirect>) || <Auth />\n                    }\n                    component={Auth}\n                ></Route>\n\n                {/* ----------------- REVENUE ----------------------- */}\n\n                <Route exact path=\"/revenue\" component={RevenueList} />\n                <Route\n                    exact\n                    path=\"/revenue/add\"\n                    component={() => <RevenueForm view=\"ADD\" />}\n                />\n                <Route\n                    exact\n                    path=\"/revenue/view/:id\"\n                    component={() => <RevenueForm view=\"VIEW\" />}\n                />\n                <Route\n                    exact\n                    path=\"/revenue/edit/:id\"\n                    component={() => <RevenueForm view=\"EDIT\" />}\n                />\n\n                {/* ----------------- EXPENSE ----------------------- */}\n\n                <Route exact path=\"/expense\" component={ExpenseList} />\n                <Route\n                    exact\n                    path=\"/expense/add\"\n                    component={() => <ExpenseForm view=\"ADD\" />}\n                />\n                <Route\n                    exact\n                    path=\"/expense/view/:id\"\n                    component={() => <ExpenseForm view=\"VIEW\" />}\n                />\n                <Route\n                    exact\n                    path=\"/expense/edit/:id\"\n                    component={() => <ExpenseForm view=\"EDIT\" />}\n                />\n\n                {/* ----------------- REPORT ----------------------- */}\n\n                <Route exact path=\"/report\" component={ReportList} />\n                <Route path=\"/report/generate\" component={ReportGenerator} />\n                <Route\n                    path=\"/report/:id\"\n                    component={() => <ReportGenerator view=\"VIEW\" />}\n                />\n\n                {/* ----------------- STATISTIC ----------------------- */}\n\n                <Route\n                    exact\n                    path=\"/statistic/revenue\"\n                    component={RevenueStatistic}\n                />\n                <Route\n                    exact\n                    path=\"/statistic/expense\"\n                    component={ExpenseStatistic}\n                />\n\n                {/* ----------------- STUDENT ----------------------- */}\n\n                {/* <Route exact path=\"/student/list\" component={StudentList} />\n                <Route\n                    exact\n                    path=\"/student/add\"\n                    component={() => <StudentForm view=\"ADD\" />}\n                />\n                <Route\n                    path=\"/student/edit/:id\"\n                    component={() => <StudentForm view=\"EDIT\" />}\n                ></Route>\n                <Route\n                    path=\"/student/view/:id\"\n                    component={() => <StudentForm view=\"VIEW\" />}\n                ></Route> */}\n\n                <Route component={NotFound}></Route>\n            </Switch>\n        </React.Fragment>\n    );\n};\n\nexport default BaseView(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"sidebar_root__JQqmx\",\"hide\":\"sidebar_hide__NVaH6\",\"mask\":\"sidebar_mask___0Hpp\",\"toggleBtn\":\"sidebar_toggleBtn__3bhUM\",\"LogoRoot\":\"sidebar_LogoRoot__3ARD6\",\"LogoImg\":\"sidebar_LogoImg__1qfKN\",\"item\":\"sidebar_item__K-CfW\",\"itemRoot\":\"sidebar_itemRoot__1yAE6\",\"itemName\":\"sidebar_itemName__3jLwq\",\"btn\":\"sidebar_btn__3fn7p\",\"itemActive\":\"sidebar_itemActive__3PDrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"expansionPanel_root__3mFNy\",\"panel\":\"expansionPanel_panel__RgL-l\",\"item\":\"expansionPanel_item__3XhTX\",\"icon\":\"expansionPanel_icon__WZBW-\",\"btn\":\"expansionPanel_btn__2A-eZ\",\"name\":\"expansionPanel_name__20FxX\",\"iconArrow\":\"expansionPanel_iconArrow__1uQ8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"reportGenerator_root__2i5YZ\",\"header\":\"reportGenerator_header__3CpZK\",\"main\":\"reportGenerator_main__3ZYf4\",\"staffInfo\":\"reportGenerator_staffInfo__2lirL\",\"summaryInfo\":\"reportGenerator_summaryInfo__3cdGf\",\"pdfBtn\":\"reportGenerator_pdfBtn__3Aely\"};"],"sourceRoot":""}